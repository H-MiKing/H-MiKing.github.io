<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老生杂谈的IT人</title>
  
  <subtitle>技术与人性的交响曲</subtitle>
  <link href="http://hmiking.top/atom.xml" rel="self"/>
  
  <link href="http://hmiking.top/"/>
  <updated>2023-11-20T08:58:05.607Z</updated>
  <id>http://hmiking.top/</id>
  
  <author>
    <name>H Miking</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>三、信息系统治理(主要考选择题)</title>
    <link href="http://hmiking.top/2023/11/20/%E4%B8%89%E3%80%81%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E6%B2%BB%E7%90%86(%E4%B8%BB%E8%A6%81%E8%80%83%E9%80%89%E6%8B%A9%E9%A2%98)/"/>
    <id>http://hmiking.top/2023/11/20/%E4%B8%89%E3%80%81%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E6%B2%BB%E7%90%86(%E4%B8%BB%E8%A6%81%E8%80%83%E9%80%89%E6%8B%A9%E9%A2%98)/</id>
    <published>2023-11-20T09:00:00.000Z</published>
    <updated>2023-11-20T08:58:05.607Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>内容来源：信息系统项目管理师教程 (第4版）<br>文章内容主要为第4版教程的核心重点内容。</p></blockquote><h3 id="3-1-IT治理"><a href="#3-1-IT治理" class="headerlink" title="3.1 IT治理"></a>3.1 IT治理</h3><h4 id="3-1-1-IT治理基础"><a href="#3-1-1-IT治理基础" class="headerlink" title="3.1.1 IT治理基础"></a>3.1.1 IT治理基础</h4><p>IT治理是描述组织采用有效的机制对信息技术和数据资源开发利用，平衡信息化发展和数 字化转型过程中的风险，确保实现组织的战略目标的过程。</p><ol><li>IT治理的驱动因素</li></ol><p>①信息系统成了许多“信息孤岛”, 缺乏共享的、网络化的信息资源，系统集成难题一直无法解决；</p><p>②信息资源整合目标空泛，没 有整合“信息孤岛”的措施，数据中心建设和数据集中管理等规划缺乏可操作性，尤其是缺少 数据标准化建设方面的建设规划。</p><ul><li>IT治理是指组织在开发利用信息技术过程中，为鼓励组织所期望的组织行为而明确决策权归属和 责任担当的框架，其目标是通过IT治理的决策权和责任影响组织所期望的组织行为。</li></ul><ol start="2"><li>IT治理的目标价值</li></ol><p>IT治理主要目标包括：与业务目标一致、有效利用信息与数据资源、风险管理。</p><p>(1) 与业务目标一致。IT治理要从组织目标和数字战略中抽取信息与数据需求和功能需求， 形成总体的IT治理框架和系统整体模型，为进一步系统设计和实施奠定基础，保证信息技术开</p><p>(2) 有效利用信息与数据资源。目前信息系统工程超期、IT客户的需求没有满足、IT平台 不支持业务应用、数据开发利用效能与价值不高、信息技术与业务发展融合深度不够等问题突 出，通过IT治理对信息与数据资源的管理职责进行有效管理，保证投资的回收，并支持决策。</p><p>(3) 风险管理。由于组织越来越依赖于信息网络、信息系统和数据资源等，新的风险不断 涌现，例如，新出现的技术没有管理，不符合现有法律和规章制度，没有识别对IT服务的威胁 等。IT治理重视风险管理，通过制定信息与数据资源的保护级别，强调对关键的信息与数据资 源，实施有效监控和事件处理。</p><ol start="3"><li>IT治理的管理层次</li></ol><p>IT治理要保证总体战略目标能够从上而下贯彻执行，治理层主要集中在最高管理层(如董 事会)和管理执行层。好的IT治理实践需要在组织全部范围内推行。管理层次大致可分为三层：最高管理层、执行管理层、业务与服务执行层。</p><ul><li>最高管理层的主要职责包括：证实IT战略与业务战略是否一致；证实通过明确的期望和衡量 手段交付IT价值；指导IT战略、平衡支持组织当前和未来发展的投资；指导信息和数据资源的分 配。</li><li>执行管理层的主要职责包括：制定IT的目标；分析新技术的机遇和风险；建设关键过程与核 心竞争力；分配责任、定义规程、衡量业绩；管理风险和获得可靠保证等。</li><li>业务及服务执行层的主要职责包括：信息和数据服务的提供和支持；IT基础设施的建设和维护；IT需求的提出和响应。</li></ul><h4 id="3-1-2-IT治理体系"><a href="#3-1-2-IT治理体系" class="headerlink" title="3.1.2 IT治理体系"></a>3.1.2 IT治理体系</h4><p>IT治理用于描述组织在信息化建设和数字化转型过程中是否采用有效的机制使得信息技术 开发利用能够完成组织赋予它的使命。IT治理的核心是关注IT定位和信息化建设与数字化转型 的责权利划分，如图3-1所示。IT治理体系的具体构成包括IT定位：IT应用的期望行为与业务 目标一致；IT治理架构：业务和IT在治理委员会中的构成、组织IT与各分支机构的IT权责边 界等；IT治理内容：投资、风险、绩效、标准和规范等；IT治理流程：统筹、评估、指导、监 督；IT治理效果(内外评价)等。</p><p><img src="https://djy.oldit.cn/article/image-20231120162246-0x1r5ta.webp" alt="image">​</p><ol><li>IT治理关键决策</li></ol><p>有效的IT治理必须关注五项关键决策，如图3-2所示，包括IT原则、IT架构、IT基础设施、 业务应用需求、IT投资和优先顺序。IT原则驱动着IT整体架构的形成，而IT整体架构又决定 了基础设施，这种基础设施所确定的能力又决定着基于业务需求应用的构建，最后，IT投资和 优先顺序必须为IT原则、整体架构、基础设施和应用需求所驱动。然而，这些决策中又有独特 问题，即IT治理需要确定每个决策由谁来负责输入，以及由谁来负责做出决策。</p><p><img src="https://djy.oldit.cn/article/image-20231120162324-75vzag2.webp" alt="image">​</p><ol start="2"><li>IT治理体系框架</li></ol><p>IT治理体系框架具体包括：IT战略 目标、IT治理组织、IT治理机制、IT治理域、IT治理标准和IT绩效目标等部分，形成一整套 IT治理运行闭环，如图3-3所示。</p><p><img src="https://djy.oldit.cn/article/image-20231120162346-uyg54ic.webp" alt="image">​</p><ol start="3"><li>IT治理核心内容</li></ol><p>IT治理本质上关心：</p><p>①实现IT的业务价值；</p><p>②IT风险的规避。前者是通过IT与业务战略匹配来实现的，后者通过在组织内部建立相关职责来实现。两者都需要相关资源的支持，并对 其绩效进行有效度量。IT治理的核心内容包括六个方面：组织职责、战略匹配、资源管理、价 值交付、风险管理和绩效管理，如图3-4所示。</p><p><img src="https://djy.oldit.cn/article/image-20231120162445-jttvtit.webp" alt="image">​</p><ol start="4"><li>IT治理机制经验</li></ol><p>建立IT治理机制的原则包括：</p><p>①简单。机制应该明确地定义特定个人和团体所承担的责任 和目标。</p><p>②透明。有效的机制依赖于正式的程序。对于那些被治理决策所影响或是想要挑战治 理决策的人来说，机制如何工作是需要非常清晰的。</p><p>③适合。机制鼓励那些处于最佳位置的个 人去制定特定的决策。</p><h4 id="3-1-3-IT治理任务"><a href="#3-1-3-IT治理任务" class="headerlink" title="3.1.3 IT治理任务"></a>3.1.3 IT治理任务</h4><h4 id="3-1-4-IT治理方法与标准"><a href="#3-1-4-IT治理方法与标准" class="headerlink" title="3.1.4 IT治理方法与标准"></a>3.1.4 IT治理方法与标准</h4><ol><li><p>ITSS 中 IT服务治理</p><p> 1、IT治理通用要求</p><ul><li><p>GB&#x2F;T34960.1《信息技术服务治理第1部分：通用要求》规定了IT治理的模型和框架、实 施IT治理的原则，以及开展IT顶层设计、管理体系和资源的治理要求。该标准可用于：</p><p>①建 立组织的IT治理体系，并实施自我评价；</p><p>②开展信息技术审计；</p><p>③研发、选择和评价IT治理 相关的软件或解决方案；</p><p>④第三方对组织的IT治理能力进行评价。各级各类信息化主管部门可 根据法律法规、部门规章的要求，使用该标准对所管辖各类组织的IT治理提出要求，并进行评估、指导和监督。</p></li><li><p>该标准定义的IT治理框架包含信息技术顶层设计、管理体系和资源三大治理域</p></li></ul><p> 2、IT治理实施指南</p><ul><li><p>GB&#x2F;T 34960.2《信息技术服务治理第2部分：实施指南》提出了IT治理通用要求的实施 指南，分析了实施IT治理的环境因素，规定了IT治理的实施框架、实施环境和实施过程，并明确顶层设计治理、管理体系治理和资源治理的实施要求。该标准适用于：</p><p>①建立组织的IT治 理实施框架，明确实施方法和过程；</p><p>②组织内部开展IT治理的实施；</p><p>③IT治理相关软件或解 决方案实施落地的指导；</p><p>④第三方开展IT治理评价的指导。</p></li></ul></li><li><p>信息和技术治理框架</p><p> 1、治理和管理目标</p><ul><li><p>管理目标分为四个领域：</p><p>①调整、规划和组织(APO)针对IT的整体组织、战略和支持活动；</p><p> ②内部构建、外部采购和实施(BAI)针对IT解决方案的定义、采购和实施以及它们到业务流 程的整合；</p><p>③交付、服务和支持(DSS)针对IT服务的运营交付和支持，包括安全；</p><p>④监控、 评价和评估(MEA)针对IT的性能监控及其与内部性能目标、内部控制目标和外部要求的一致 程度。治理目标与治理流程有关，而管理目标与管理流程有关。治理流程通常由董事会和执行 管理层负责，而管理流程则在高级和中级管理层的职责范围内。</p></li></ul><p> 2、信息和技术治理解决方案的设计</p><ul><li><p>组织开展治理系统设计通过流程化的方式进行，如图3-12所示，COBIT给出了建议设计流 程：</p><p>①了解组织环境和战略；</p><p>②确定治理系统的初步范围；</p><p>③优化治理系统的范围；</p><p>④最终确 定治理系统的设计。</p></li></ul></li><li><p>IT治理国际标准</p></li></ol><h3 id="3-2-IT审计"><a href="#3-2-IT审计" class="headerlink" title="3.2 IT审计"></a>3.2 IT审计</h3><h4 id="3-2-1-IT审计基础"><a href="#3-2-1-IT审计基础" class="headerlink" title="3.2.1 IT审计基础"></a>3.2.1 IT审计基础</h4><ol><li>IT审计定义</li><li>IT审计目的</li></ol><ul><li>IT审计的目的是指通过开展IT审计工作，了解组织IT系统与IT活动的总体状况，对组 织是否实现IT目标进行审查和评价，充分识别与评估相关IT风险，提出评价意见及改进建议， 促进组织实现IT目标。</li><li>组织的IT目标主要包括：①组织的IT战略应与业务战略保持一致；②保护信息资产的安 全及数据的完整、可靠、有效；③提高信息系统的安全性、可靠性及有效性；④合理保证信息 系统及其运用符合有关法律、法规及标准等的要求。</li></ul><ol start="3"><li>IT审计范围</li></ol><p><img src="https://djy.oldit.cn/article/image-20231120163320-d25jo22.webp" alt="image">​</p><ol start="4"><li><p>IT审计人员</p></li><li><p>IT审计风险</p></li></ol><p>IT审计风险主要包括固有风险、控制风险、检查风险和总体审计风险。固有风险、控制风 险、检查风险的内容，如表3-6所示。</p><p><img src="https://djy.oldit.cn/article/image-20231120163551-x3adv46.webp" alt="image">​</p><ul><li>总体审计风险是指针对单个控制目标所产生的各类审计风险总和。良好的审计计划应尽可 能评估和控制审计风险，减少或控制所检查领域的审计风险，比如采取合适的审计工具，在完 成审计时把总体审计风险控制在足够低的水平之内，以达到预期保证水平。</li><li>审计风险也用于描述审计人员在执行审计任务时可接受的风险水平。审计人员可通过设定 目标风险水平并调整审计工作量，以合适的审计成本满足最小化总体审计风险要求。</li></ul><h4 id="3-2-2-审计方法与技术"><a href="#3-2-2-审计方法与技术" class="headerlink" title="3.2.2 审计方法与技术"></a>3.2.2 审计方法与技术</h4><ol><li><p>IT审计依据与准则</p></li><li><p>IT审计常用方法</p></li></ol><p>常用审计方法包括：访谈法、调查法、检查法、观察法、 测试法和程序代码检查法等，如表3-8所示。</p><p><img src="https://djy.oldit.cn/article/image-20231120163707-xrn1wwn.webp" alt="image">​</p><ol start="3"><li>IT审计技术</li></ol><p>常用的TT审计技术包括风险评估技术、审计抽样技术、计算机辅助审计技术及大数据审计技术。</p><pre><code>1）风险评估技术2）审计抽样技术</code></pre><ul><li><p>审计抽样是指审计人员在实施审计程序时，从审计对象总体中选取一定数量的样本进行测 试，并根据测试结果，推断审计对象总体特征的一种方法。</p><p>  3）计算机辅助审计技术</p></li><li><p>计算机辅助审计(Computer Assisted Audit Tools,CAAT),也称为利用计算机审计，是指审计 人员在审计过程和审计管理活动中，以计算机为工具来执行和完成某些审计程序和任务的一种新 兴审计技术。它并非电算化系统审计特有的一种方法，对手工系统的审计也可应用这些技术。</p><p>  4）大数据审计技术</p></li><li><p>大数据审计是指遵循大数据理念，运用大数据技术方法和工具，利用数量巨大、来源分散、 格式多样的数据，开展跨层级、跨系统、跨部门和跨业务等的深入挖掘与分析，提升审计发现 问题、评价判断、宏观分析的能力。大数据审计技术包括大数据智能分析技术、大数据可视化分析技术及大数据多数据源综合分析技术等，如表3-10所示。</p></li></ul><p><img src="https://djy.oldit.cn/article/image-20231120164000-gmet8pv.webp" alt="image">​</p><ol start="4"><li>IT审计证据</li></ol><p>审计证据是指由审计机构和审计人员获取，用于确定所审计实体或数据是否遵循既定标准 或目标，形成审计结论的证明材料。</p><p><img src="https://djy.oldit.cn/article/image-20231120164027-h8kosd8.webp" alt="image">​</p><ol start="5"><li>IT审计底稿（相当于工作存档&amp;产物）</li></ol><p>审计工作底稿是指审计人员对制订的审计计划、实施的审计程序、获取的相关审计证据，以及 得出的审计结论做出的记录。审计工作底稿是审计证据的载体，是审计人员在审计过程中形成的审 计工作记录和获取的资料。它形成于审计过程，也反映整个审计过程。审计底稿的作用表现在：</p><ul><li>是形成审计结论、发表审计意见的直接依据；</li><li>是评价考核审计人员的主要依据；</li><li>是审计质量控制与监督的基础；</li><li>对未来审计业务具有参考备查作用。</li></ul><p>审计工作底稿一般分为综合类工作底稿、业务类工作底稿和备查类工作底稿，具体如表3-12所示。</p><p><img src="https://djy.oldit.cn/article/image-20231120164146-dv4w1s3.webp" alt="image">​</p><p>通常，根据审计机构的组织规模和业务范围，可以实行对审计工作底稿的三级复核制度。 审计工作底稿三级复核制度是指以审计机构负责人、部门负责人和项目负责人(或项目经理) 为复核人，依照规定的程序和要点对审计工作底稿进行逐级复核的制度。三级复核制度目前已 成为较为普遍采用的形式，对于提高审计工作质量、加强质量控制起了重要的作用。</p><h4 id="3-2-3-审计流程"><a href="#3-2-3-审计流程" class="headerlink" title="3.2.3 审计流程"></a>3.2.3 审计流程</h4><p>一般分为审计准备、 审计实施、审计终结及后续审计四个阶段，每个阶段又包含若干具体内容。</p><ol><li><p>审计准备阶段。IT审计准备阶段是指IT审计项目从计划开始，到发出审计通知书为止 的期间。准备阶段是整个审计过程的起点和基础，准备阶段的工作是否充分、合理、细致，对 提高审计工作效率，保证审计工作质量至关重要。准备阶段工作一般包括：</p><ul><li>①明确审计目的及 任务；</li><li>②组建审计项目组；</li><li>③搜集相关信息；</li><li>④编制审计计划等。</li></ul></li><li><p>审计实施阶段。IT审计实施阶段是审计人员将项目审计计划付诸实施的期间。此阶段 的工作是审计全过程的中心环节，是整个审计流程的关键阶段，关系到整个审计工作的成败。实 施阶段主要完成工作包括：</p><ul><li>①深入调查并调整审计计划；</li><li>②了解并初步评估IT内部控制；</li><li>③进行 符合性测试；</li><li>④进行实质性测试等。</li></ul></li><li><p>审计终结阶段。IT审计终结阶段是整理审计工作底稿、总结审计工作、编写审计报告、 做出审计结论的期间。审计人员应运用专业判断，综合分析所收集到的相关证据，以经过核实 的审计证据为依据，形成审计意见、出具审计报告。终结阶段的工作一般包括：</p><ul><li>①整理与复核审计工作底稿；</li><li>②整理审计证据；</li><li>③评价相关IT控制目标的实现；</li><li>④判断并报告审计发现；</li><li>⑤沟通审计结果；</li><li>⑥出具审计报告；</li><li>⑦归档管理等。</li></ul></li><li><p>后续审计阶段。后续审计是在审计报告发出后的一定时间内，审计人员为检查被审计 单位对审计问题和建议是否已经采取了适当的纠正措施，并取得预期效果的跟踪审计。后续审 计并不是一次新的审计，而是前一次审计的有机组成部分。实施后续审计，可不必遵守审计流 程的每一过程和要求，但必须依法依规进行检查、调查，收集审计证据，写出后续审计报告。</p></li></ol><h4 id="3-2-4-审计内容"><a href="#3-2-4-审计内容" class="headerlink" title="3.2.4 审计内容"></a>3.2.4 审计内容</h4><p>IT审计业务和服务通常分为IT内部控制审计和IT专项审计。IT内部控制审计主要包括组 织层面IT控制审计、IT一般控制审计及应用控制审计；IT专项审计主要是指根据当前面临的特 殊风险或者需求开展的IT审计，审计范围为IT综合审计的某一个或几个部分。有关IT内部控制审计与IT专项审计的具体内容如表3-13所示。</p><p><img src="https://djy.oldit.cn/article/image-20231120164441-juikxxc.webp" alt="image">​</p><p>‍</p><h3 id="‍欢迎关注我的CSDN、个人博客、知乎"><a href="#‍欢迎关注我的CSDN、个人博客、知乎" class="headerlink" title="‍欢迎关注我的CSDN、个人博客、知乎"></a><strong>‍欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a></strong></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;内容来源：信息系统项目管理师教程 (第4版）&lt;br&gt;文章内容主要为第4版教程的核心重点内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3-1-IT治理&quot;&gt;&lt;a href=&quot;#3-1-IT治理&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="信息系统项目管理师" scheme="http://hmiking.top/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    
    <category term="信息系统项目管理师" scheme="http://hmiking.top/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    <category term="软考" scheme="http://hmiking.top/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="高项" scheme="http://hmiking.top/tags/%E9%AB%98%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>二、信息技术发展</title>
    <link href="http://hmiking.top/2023/11/17/%E4%BA%8C%E3%80%81%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95/"/>
    <id>http://hmiking.top/2023/11/17/%E4%BA%8C%E3%80%81%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95/</id>
    <published>2023-11-17T09:30:58.000Z</published>
    <updated>2023-11-20T08:48:15.259Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>内容来源：信息系统项目管理师教程 (第4版）<br>文章内容主要为第4版教程的核心重点内容。</p></blockquote><h3 id="2-1-信息技术及其发展"><a href="#2-1-信息技术及其发展" class="headerlink" title="2.1 信息技术及其发展"></a>2.1 信息技术及其发展</h3><p>按表现形态的不同，信息技术可分为硬技术(物化技术)与软技术(非物化技术)。前者指各 种信息设备及其功能，如传感器、服务器、智能手机、通信卫星、笔记本电脑。后者指有关信 息获取与处理的各种知识、方法与技能，如语言文字技术、数据统计分析技术、规划决策技术、 计算机软件技术等。</p><h4 id="2-1-1-计算机软硬件"><a href="#2-1-1-计算机软硬件" class="headerlink" title="2.1.1 计算机软硬件"></a>2.1.1 计算机软硬件</h4><ul><li><p>计算机硬件(Computer Hardware)是指计算机系统中由电子、机械和光电元件等组成的各 种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体，为计算机软件运行提 供物质基础。</p></li><li><p>计算机软件(Computer Software)是指计算机系统中的程序及其文档，程序是计 算任务的处理对象和处理规则的描述；文档是为了便于了解程序所需的阐明性资料。程序必须 安装入机器内部才能工作，文档一般是给人看的，不一定安装入机器。</p></li></ul><h4 id="2-1-2-计算机网络"><a href="#2-1-2-计算机网络" class="headerlink" title="2.1.2 计算机网络"></a>2.1.2 计算机网络</h4><p>网络的作用范围可将网络类 别划分为个人局域网(Personal Area Network,PAN)、局域网(Local Area Network,LAN)、城 域网(Metropolitan Area Network,MAN)、广域网(Wide Area Network,WAN)、公用网(Public Network)、专用网(Private Network)。</p><ol><li><p>网络标准协议</p><ul><li>OSI</li></ul><p> OSI采用了分层的结构化技 术，从下到上共分物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。</p><ul><li>IEEE 802 协议族</li></ul><p> 802.3(以太 网的CSMA&#x2F;CD载波监听多路访问&#x2F;冲突检测协议)、802.11(无线局域网WLAN标准协议)。</p><ul><li>TCP&#x2F;IP</li></ul><p> 在应用层中，定义了很多面向应用的协议，应用程序通过本层协议利用网络完成数据交 互的任务。这些协议主要有FTP(File Transfer Protocol,文件传输协议)、TFTP(Trivial File Transfer Protocol,简单文件传输协议)、HTTP(Hypertext Transfer Protocol,超文本传输协议)、 SMTP(Simple Mail Transfer Protocol,简单邮件传输协议)、DHCP(Dynamic Host Configuration Protocol,动态主机配置协议)、Telnet(远程登录协议)、DNS(Domain Name System,域名系统)、 SNMP(Simple Network Management Protocol,简单网络管理协议)等。<br> 传输层主要有两个传输协议，分别是TCP和UDP(User Datagram Protocol,用户数据报协 议),这些协议负责提供流量控制、错误校验和排序服务。<br> 网络层中的协议主要有IP、ICMP(Internet Control Message Protocol,网际控制报文协 议)、IGMP(Internet Group Management Protocol,网际组管理协议)、ARP(Address Resolution Protocol,地址解析协议)和RARP(Reverse Address Resolution Protocol,反向地址解析协议) 等，这些协议处理信息的路由和主机地址解析。</p></li><li><p>软件定义网络</p><p> 软件定义网络(Software Defned Network,SDN)是一种新型网络创新架构，是网络虚拟 化的一种实现方式，它可通过软件编程的形式定义和控制网络，其通过将网络设备的控制面与 数据面分离开来，从而实现了网络流量的灵活控制，使网络变得更加智能，为核心网络及应用 的创新提供了良好的平台。</p><p> 利用分层的思想，SDN将数据与控制相分离。在控制层，包括具有逻辑中心化和可编程的 控制器，可掌握全局网络信息，方便运营商和科研人员管理配置网络和部署新协议等。在数据 层，包括哑交换机(与传统的二层交换机不同，专指用于转发数据的设备),仅提供简单的数据 转发功能，可以快速处理匹配的数据包，适应流量日益增长的需求。两层之间采用开放的统一 接口(如OpenFlow等)进行交互。控制器通过标准接口向交换机下发统一标准规则，交换机 仅需按照这些规则执行相应的动作即可。SDN打破了传统网络设备的封闭性。此外，南北向和 东西向的开放接口及可编程性，也使得网络管理变得更加简单、动态和灵活。</p><p> SDN的整体架构由下到上(由南到北)分为数据平面、控制平面和应用平面，具体如 图2-1所示。其中，数据平面由交换机等网络通用硬件组成，各个网络设备之间通过不同规则 形成的SDN数据通路连接；控制平面包含了逻辑上为中心的SDN控制器，它掌握着全局网络 信息，负责各种转发规则的控制；应用平面包含着各种基于SDN的网络应用，用户无须关心底 层细节就可以编程、部署新应用。</p></li></ol><p><img src="https://djy.oldit.cn/article/image-20231117152447-1ra2jd2.webp" alt="image">​</p><pre><code>控制平面与数据平面之间通过SDN控制数据平面接口(Control-Data-Plane Interface,CDPI) 进行通信，它具有统一的通信标准，主要负责将控制器中的转发规则下发至转发设备，最主要 应用的是OpenFlow协议。控制平面与应用平面之间通过SDN北向接口(NorthBound Interface, NBI)进行通信，而NBI并非统一标准，它允许用户根据自身需求定制开发各种网络管理应用。SDN中的接口具有开放性，以控制器为逻辑中心，南向接口负责与数据平面进行通信，北 向接口负责与应用平面进行通信，东西向接口负责多控制器之间的通信。最主流的南向接口 CDPI采用的是OpenFlow协议。OpenFlow最基本的特点是基于流(Flow)的概念来匹配转发 规则，每一个交换机都维护一个流表(Flow Table),依据流表中的转发规则进行转发，而流表 的建立、维护和下发都是由控制器完成的。针对北向接口，应用程序通过北向接口编程来调用 所需的各种网络资源，实现对网络的快速配置和部署。东西向接口使控制器具有可扩展性，为 负载均衡和性能提升提供了技术保障。</code></pre><ol start="3"><li><p>第五代移动通信技术</p><p> 第五代移动通信技术(5th Generation Mobile Communication Technology,5G)是具有高速率、低时延和大连接特点的新一代移动通信技术。</p><p> 为了支持低时延、高可靠，5G采用短帧、快速反馈、多层&#x2F;多站<br> 数据重传等技术。</p><p> 国际电信联盟(ITU)定义了5G的三大类应用场景，即增强移动宽带(eMBB)、超高可 靠低时延通信(uRLLC)和海量机器类通信(mMTC)。增强移动宽带主要面向移动互联网流量 爆炸式增长，为移动互联网用户提供更加极致的应用体验；超高可靠低时延通信主要面向工业 控制、远程医疗、自动驾驶等对时延和可靠性具有极高要求的垂直行业应用需求；海量机器类 通信主要面向智慧城市、智能家居、环境监测等以传感和数据采集为目标的应用需求。</p></li></ol><h4 id="2-1-3-存储和数据库"><a href="#2-1-3-存储和数据库" class="headerlink" title="2.1.3 存储和数据库"></a>2.1.3 存储和数据库</h4><ol><li>存储技术</li></ol><p>存储分类根据服务器类型分为：封闭系统的存储和开放系统的存储。封闭系统主要指大型机等服务器。开放系统指基于包括麒麟、欧拉、UNIX、Linux等操作系统的服务器。开放系统 的存储分为：内置存储和外挂存储。外挂存储根据连接的方式分为直连式存储(Direct-Attached Storage,DAS)和网络化存储(Fabric-Attached Storage,FAS)。网络化存储根据传输协议又 分为网络接入存储(Network-Attached Storage,NAS)和存储区域网络(Storage Area Network, SAN)。DAS、NAS、SAN等存储模式之间的技术与应用对比如表2-2所示。</p><p><img src="https://djy.oldit.cn/article/image-20231117152924-thuv8z9.webp" alt="image">​</p><ul><li>存储虚拟化(Storage Virtualization)是“云存储”的核心技术之一，它把来自一个或多个 网络的存储资源整合起来，向用户提供一个抽象的逻辑视图，用户可以通过这个视图中的统一 逻辑接口来访问被整合的存储资源。用户在访问数据时并不知道真实的物理位置。它带给人们 直接的好处是提高了存储利用率，降低了存储成本，简化了大型、复杂、异构的存储环境的管<br>理工作。</li><li>绿色存储技术的核心是设计运行温度更低的处理器和更有效率的系统，生产更低能耗的存 储系统或组件，降低产品所产生的电子碳化合物，其最终目的是提高所有网络存储设备的能源 效率，用最少的存储容量来满足业务需求，从而消耗最低的能源。以绿色理念为指导的存储系 统最终是存储容量、性能、能耗三者的平衡。</li><li>绿色存储技术涉及所有存储分享技术，包括磁盘和磁带系统、服务器连接、存储设备、网 络架构及其他存储网络架构、文件服务和存储应用软件、重复数据删除、自动精简配置和基于 磁带的备份技术等可以提高存储利用率、降低建设成本和运行成本的存储技术，其目的是提高 所有网络存储技术的能源效率。</li></ul><ol start="2"><li>数据结构模型</li></ol><ul><li><p>常见的数据结构模型有三种：层次模型、网状模型和关系模型，层次模型和网状模型又统称为格式化数据模型。</p><ol><li>层次模型</li></ol><p>层次模型是数据库系统最早使用的一种模型，它用“树”结构表示实体集之间的关联，其 中实体集(用矩形框表示)为结点，而树中各结点之间的连线表示它们之间的关联。</p><ol start="2"><li>网状模型</li></ol><p>网状数据库系统采用网状模型作为数据的组织方式。网状模型用网状结构表示实体类型及 其实体之间的联系。网状模型是一种可以灵活地描述事物及其之间关系的数据库模型。</p><ol start="3"><li>关系模型</li></ol><p>关系模型是在关系结构的数据库中用二维表格的形式表示实体以及实体之间的联系的模型。 关系模型是以集合论中的关系概念为基础发展起来的。关系模型中无论是实体还是实体间的联 系均由单一的结构类型关系来表示。</p></li></ul><ol start="3"><li>常用数据库类型</li></ol><ul><li><p>数据库根据存储方式可以分为关系型数据库(SQL)和非关系型数据库(Not Only SQL, NoSQL)。</p><ol><li>关系型数据库</li></ol><p>关系型数据库支持事务的ACID原则，即原子性(Atomicity)、一致性(Consistency)、隔离性 (Isolation)、持久性(Durability),这四种原则保证在事务过程当中数据的正确性。</p><ol start="2"><li>非关系型数据库</li></ol><p>非关系型数据库是分布式的、非关系型的、不保证遵循ACID原则的数据存储系统。 NoSQL数据存储不需要固定的表结构，通常也不存在连接操作。在大数据存取上具备关系型数 据库无法比拟的性能优势。</p></li></ul><p><img src="https://djy.oldit.cn/article/image-20231117153618-q1uftnm.webp" alt="image">​</p><ol start="4"><li>数据仓库</li></ol><p>为了满足中高层管理人员预测、决策分析的需要，在传统数据库的 基础上产生了能够满足预测、决策分析需要的数据环境——数据仓库。数据仓库相关的基础概念包括：</p><ul><li>清洗&#x2F;转换&#x2F;加载(Extract&#x2F;Transformation&#x2F;Load,ETL):用户从数据源抽取出所需的数 据，经过数据清洗、转换，最终按照预先定义好的数据仓库模型，将数据加载到数据仓库中去</li><li>元数据：关于数据的数据，指在数据仓库建设过程中所产生的有关数据源定义、目标定 义、转换规则等相关的关键数据。同时元数据还包含关于数据含义的商业信息。典型 的元数据包括：数据仓库表的结构、数据仓库表的属性、数据仓库的源数据(记录系统)、从记录系统到数据仓库的映射、数据模型的规格说明、抽取日志和访问数据的公用例行程序等。</li></ul><p>数据仓库是一个面向主题的、集成的、非易失的且随时间变化的数据集合，用于支持管理 决策。常见的数据仓库的体系结构如图2-2所示。</p><p><img src="https://djy.oldit.cn/article/image-20231117154916-f1ypw4n.webp" alt="image">​</p><ul><li>数据源。它是数据仓库系统的基础，是整个系统的数据源泉。</li><li>据的存储与管理。它是整个数据仓库系统的核心。针对现有各业务系统的数据，进行抽取、清理并有效集成，按照主题进行组织。数 据仓库按照数据的覆盖范围可以分为组织级数据仓库和部门级数据仓库(通常称为数据集市)。</li><li>联机分析处理(On-Line Analytic Processing,OLAP)服务器。OLAP对分析需要的数 据进行有效集成，按多维模型予以组织，以便进行多角度、多层次的分析，并发现趋势。</li><li>前端工具。前端工具主要包括各种查询工具、报表工具、分析工具、数据挖掘工具以 及各种基于数据仓库或数据集市的应用开发工具。其中数据分析工具主要针对OLAP服务器， 报表工具、数据挖掘工具主要针对数据仓库。</li></ul><h4 id="2-1-4-信息安全"><a href="#2-1-4-信息安全" class="headerlink" title="2.1.4 信息安全"></a>2.1.4 信息安全</h4><ol><li>信息安全基础</li></ol><p>信息安全强调信息(数据)本身的安全属性，主要包括以下内容。</p><ul><li>保密性(Confidentiality):信息不被未授权者知晓的属性。</li><li>完整性(Integrity):信息是正确的、真实的、未被纂改的、完整无缺的属性。</li><li>可用性(Availability):信息可以随时正常使用的属性。</li></ul><p>安全可以划分为四个层次：设备安全、数据安全、内容安全、行为安全。</p><ol start="2"><li>加密解密</li></ol><ul><li>发信者将明文数据加密成密文，然后将密文数据送入网络传输或存入计算机文件，而且只 给合法收信者分配密钥。合法收信者接收到密文后，实行与加密变换相逆的变换，去掉密文的 伪装并恢复出明文，这一过程称为解密(Decryption)。解密在解密密钥的控制下进行。用于解 密的一组数学变换称为解密算法。</li><li>加密技术包括两个元素：算法和密钥。密钥加密技术的密码体制分为对称密钥体制和非对称密钥体制两种。相应地，对数据加密的技术分为两类，即对称加密(私人密钥加密)和非对 称加密(公开密钥加密)。对称加密以数据加密标准(Data Encryption Standard,DES)算法为 典型代表，非对称加密通常以RSA(Rivest Shamir Adleman)算法为代表。对称加密的加密密 钥和解密密钥相同，而非对称加密的加密密钥和解密密钥不同，加密密钥可以公开而解密密钥需要保密。</li></ul><ol start="3"><li>安全行为分析技术</li></ol><ul><li><p>用户和实体行为分析(User and Entity Behavior Analytics,UEBA)提供了用户画像及基于 各种分析方法的异常检测，结合基本分析方法(利用签名的规则、模式匹配、简单统计、阈值 等)和高级分析方法(监督和无监督的机器学习等),用打包分析来评估用户和其他实体(主 机、应用程序、网络、数据库等),发现与用户或实体标准画像或行为异常的活动所相关的潜在 事件。UEBA以用户和实体为对象，利用大数据，结合规则以及机器学习模型，并通过定义此 类基线，对用户和实体行为进行分析和异常检测，尽可能快速地感知内部用户和实体的可疑或非法行为。</p></li><li><p>UEBA是一个完整的系统，涉及算法、工程等检测部分，以及用户与实体风险评分排序、 调查等用户交换和反馈。从架构上来看，UEBA系统通常包括数据获取层、算法分析层和场景应用层。</p></li></ul><ol start="4"><li><p>网络安全态势感知</p><p> 网络安全态势感知(Network Security Situation Awarencss)是在大规模网络环境中，对能够 引起网络态势发生变化的安全要素进行获取、理解、显示，并据此预测未来的网络安全发展趋 势。安全态势感知不仅是一种安全技术，也是一种新兴的安全概念。它是一种基于环境的、动 态的、整体的洞悉安全风险的能力。安全态势感知的前提是安全大数据，其在安全大数据的基 础上进行数据整合、特征提取等，然后应用一系列态势评估算法生成网络的整体态势状况，应 用态势预测算法预测态势的发展状况，并使用数据可视化技术，将态势状况和预测情况展示给 安全人员，方便安全人员直观便捷地了解网络当前状态及预期的风险。<br> 网络安全态势感知的关键技术主要包括：海量多元异构数据的汇聚融合技术、面向多类型 的网络安全威胁评估技术、网络安全态势评估与决策支撑技术、网络安全态势可视化等。</p></li></ol><h4 id="2-1-5-信息技术的发展"><a href="#2-1-5-信息技术的发展" class="headerlink" title="2.1.5 信息技术的发展"></a>2.1.5 信息技术的发展</h4><h3 id="2-2-新一代信息技术及应用"><a href="#2-2-新一代信息技术及应用" class="headerlink" title="2.2 新一代信息技术及应用"></a>2.2 新一代信息技术及应用</h3><h4 id="2-2-1-物联网"><a href="#2-2-1-物联网" class="headerlink" title="2.2.1 物联网"></a>2.2.1 物联网</h4><p>物联网(The Internet of Things)是指通过信息传感设备，按约定的协议将任何物品与互联 网相连接，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理的网络。</p><ol><li>技术基础</li></ol><p>物联网架构可分为三层：感知层、网络层和应用层。感知层由各种传感器构成，包括温度 传感器，二维码标签、RFID标签和读写器，摄像头，GPS等感知终端。感知层是物联网识别物 体、采集信息的来源。网络层由各种网络，包括互联网、广电网、网络管理系统和云计算平台 等组成，是整个物联网的中枢，负责传递和处理感知层获取的信息。应用层是物联网和用户的 接口，它与行业需求结合以实现物联网的智能应用。</p><ol start="2"><li>关键技术</li></ol><ul><li><p>物联网关键技术主要涉及传感器技术、传感网和应用系统框架等。</p><ol><li>传感器技术</li></ol><p>射频识别技术(Radio Frequency ldentification,RFID)是物联网中使用的一种传感器技术， 在物联网发展中备受关注。RIFD可通过无线电信号识别特定目标并读写相关数据，而无须识别 系统与特定目标之间建立机械或光学接触</p><ol start="2"><li>传感网</li></ol><p>微机电系统(Micro-Electro-Mechanical Systems,MEMS)是由微传感器、微执行器、信号 处理和控制电路、通信接口和电源等部件组成的一体化的微型器件系统。其目标是把信息的获 取、处理和执行集成在一起，组成具有多功能的微型系统，集成于大尺寸系统中，从而大幅地 提高系统的自动化、智能化和可靠性水平。MEMS赋予了普通物体新的“生命”,它们有了属 于自己的数据传输通路、存储功能、操作系统和专门的应用程序，从而形成一个庞大的传感网， 使物联网能够通过物品来实现对人的监控与保护。</p><ol start="3"><li>应用系统框架</li></ol><p>物联网应用系统框架是一种以机器终端智能交互为核心的、网络化的应用与服务。</p></li></ul><h4 id="2-2-2-云计算"><a href="#2-2-2-云计算" class="headerlink" title="2.2.2 云计算"></a>2.2.2 云计算</h4><p>云计算(Cloud Computing)</p><ol><li><p>技术基础</p><p> 云计算是一种基于互联网的计算方式，通过这种方式将网络上配置为共享的软件资源、计 算资源、存储资源和信息资源，按需求提供给网上的终端设备和终端用户。</p><p> 云计算实现了“快速、按需、弹性”的服务，用户可以随时通过宽带网络接入“云”并获 得服务，按照实际需求获取或释放资源，根据需求对资源进行动态扩展。</p><p> 按照云计算服务提供的资源层次，可以分为基础设施即服务(Infrastructure as a Service, IaaS)、平台即服务(Platform as a Service,PaaS)和软件即服务(Software as a Service,SaaS) 三种服务类型。</p><p> laaS向用户提供计算机能力、存储空间等基础设施方面的服务。这种服务模式需要较大的 基础设施投入和长期运营管理经验，其单纯出租资源的盈利能力有限。</p><p> PaaS向用户提供虚拟的操作系统、数据库管理系统、Web应用等平台化的服务。PaaS服务 的重点不在于直接的经济效益，而更注重构建和形成紧密的产业生态。</p><p> SaaS向用户提供应用软件(如CRM、办公软件等)、组件、工作流等虚拟化软件的服务，</p></li><li><p>关键技术</p></li></ol><ul><li><p>云计算的关键技术主要涉及虚拟化技术、云存储技术、多租户和访问控制管理、云安全技术等。</p><ol><li><p>虚拟化技术</p><ol><li>虚拟化是一个广义术语，在计算机领域通常是指计算元件在虚拟的基础上而不是真实的基 础上运行。虚拟化技术可以扩大硬件的容量，简化软件的重新配置过程。CPU的虚拟化技术可 以单CPU模拟多CPU并行，允许一个平台同时运行多个操作系统，并且应用程序都可以在相 互独立的空间内运行而互不影响，从而显著提高计算机的工作效率。</li><li>虚拟化技术与多任务以及超线程技术是完全不同的。多任务是指在一个操作系统中多个程 序同时并行运行，而在虚拟化技术中，则可以同时运行多个操作系统，而且每一个操作系统中都 有多个程序运行，每一个操作系统都运行在一个虚拟的CPU或者虚拟主机上。超线程技术只是单 CPU模拟双CPU来平衡程序运行性能，这两个模拟出来的CPU是不能分离的，只能协同工作。</li><li>容器(Container)技术是一种全新意义上的虚拟化技术，属于操作系统虚拟化的范畴，也 就是由操作系统提供虚拟化的支持。目前最受欢迎的容器环境是Docker。</li></ol></li><li><p>云存储技术</p></li></ol><p>分布式文件系统作为云存储技术中的重要组成部分，在维持兼容性的基础上，对系统复制 和容错功能进行提升。同时，通过云集群管理实现云存储的可拓展性，借助模块之间的合理搭 配，完成解决方案拟定解决的网络存储问题、联合存储问题、多节点存储问题、备份处理、负 载均衡等。云储存的实现过程中，结合分布式的文件结构，在硬件支撑的基础上，对硬件运行 环境进行优化，确保数据传输的完整性和容错性；结合成本低廉的硬件的扩展，大大降低了存储的成本。</p><ol start="3"><li><p>多租户和访问控制管理</p><ol><li>云计算访问控制模型就是按照特定的访问策略来描述安全系统，建立安全模型的一种方法。 用户(租户)可以通过访问控制模型得到一定的权限，进而对云中的数据进行访问，所以访问 控制模型多用于静态分配用户的权限。</li><li>常见的有基于任务的访问控制模型、基于属性模型的云 计算访问控制、基于UCON模型的云计算访问控制、基于BLP模型的云计算访问控制等。</li><li>基于ABE密码机制的云计算访问控制包括4个参与方：数据提供者、可信第三方授权中 心、云存储服务器和用户。</li></ol></li><li><p>云安全技术</p></li></ol><p>云安全研究主要包含两个方面的内容，一是云计算技术本身的安全保护工作，涉及相应的 数据完整性及可用性、隐私保护性以及服务可用性等方面的内容；二是借助于云服务的方式来 保障客户端用户的安全防护需求，通过云计算技术来实现互联网安全，涉及基于云计算的病毒 防治、木马检测技术等。</p></li></ul><h4 id="2-2-3-大数据"><a href="#2-2-3-大数据" class="headerlink" title="2.2.3 大数据"></a>2.2.3 大数据</h4><p>大数据(Big Data)指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数 据集合，是具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。</p><ol><li>技术基础</li></ol><p>大数据是具有体量大、结构多样、时效性强等特征的数据，处理大数据需要采用新型计算 架构和智能算法等新技术。大数据从数据源到最终价值实现一般需要经过数据准备、数据存储 与管理、数据分析和计算、数据治理和知识展现等过程，涉及数据模型、处理模型、计算理论 以及与其相关的分布计算、分布存储平台技术、数据清洗和挖掘技术、流式计算和增量处理技 术、数据质量控制等方面的研究。一般来说，大数据主要特征包括：</p><ul><li>数据海量</li><li>数据类型多样</li><li>数据价值密度低</li><li>数据处理速度快</li></ul><ol start="2"><li>关键技术</li></ol><ul><li><p>大数据技术架构主要包含大数据获取技术、分布式数据处理技术和大数据管理技术，以及大数据应用和服务技术。</p><ol><li><p>大数据获取技术</p><ol><li>目前，大数据获取的研究主要集中在数据采集、整合和清洗三个方面。数据采集技术实现 数据源的获取，然后通过整合和清理技术保证数据质量。</li><li>数据整合技术是在数据采集和实体识别的基础上，实现数据到信息的高质量整合。</li><li>数据清洗技术一般根据正确性条件和数据约束规则，清除不合理和错误的数据，对重要的 信息进行修复，保证数据的完整性。</li></ol></li><li><p>分布式数据处理技术</p></li></ol><p>分布式计算是随着分布式系统的发展而兴起的，其核心是将任务分解成许多小的部分，分 配给多台计算机进行处理，通过并行工作的机制，达到节约整体计算时间，提高计算效率的目 的。目前，主流的分布式计算系统有Hadoop、Spark和Storm。Hadoop常用于离线的复杂的大 数据处理，Spark常用于离线的快速的大数据处理，而Storm常用于在线的实时的大数据处理。</p><ol start="3"><li>大数据管理技术</li></ol><p>大数据管理技术主要集中在大数据存储、大数据协同和安全隐私等方面。</p><ol start="4"><li><p>大数据应用和服务技术</p><ol><li>大数据应用和服务技术主要包含分析应用技术和可视化技术。</li><li>大数据分析应用主要是面向业务的分析应用。在分布式海量数据分析和挖掘的基础上，大 数据分析应用技术以业务需求为驱动，面向不同类型的业务需求开展专题数据分析，为用户提 供高可用、高易用的数据分析服务。</li><li>可视化通过交互式视觉表现的方式来帮助人们探索和理解复杂的数据。大数据的可视化技 术主要集中在文本可视化技术、网络(图)可视化技术、时空数据可视化技术、多维数据可视<br> 化和交互可视化等。在技术方面，主要关注原位交互分析(In Situ Interactive Analysis)、数据表 示、不确定性量化和面向领域的可视化工具库。</li></ol></li></ol></li></ul><h4 id="2-2-4-区块链"><a href="#2-2-4-区块链" class="headerlink" title="2.2.4 区块链"></a>2.2.4 区块链</h4><p>区块链技术具有多中心化存储、隐私保护、防篡改等特点，提供了开放、分散和容错的事务机 制，成为新一代匿名在线支付、汇款和数字资产交易的核心，被广泛应用于各大交易平台，为 金融、监管机构、科技创新、农业以及政治等领域带来了深刻的变革。</p><ol><li>技术基础</li></ol><p>区块链概念可以理解为以非对称加密算法为基础，以改进的默克尔树(Merkle Tree)为数 据结构，使用共识机制、点对点网络、智能合约等技术结合而成的一种分布式存储数据库技术。 区块链分为公有链(Public Blockchain)、联盟链(Consortium Blockchain)、私有链(PrivateBlockchain)和混合链(Hybrid Blcokchain)四大类。</p><p>一般来说，区块链的典型特征包括：</p><ul><li>多中心化：链上数据的验证、核算、存储、维护和传输等过程均依赖分布式系统结构， 运用纯数学方法代替中心化组织机构在多个分布式节点之间构建信任关系，从而建立可 信的分布式系统。</li><li>多方维护：激励机制可确保分布式系统中的所有节点均可参与数据区块的验证过程，并 通过共识机制选择特定节点将新产生的区块加入到区块链中。</li><li>时序数据：区块链运用带有时间戳信息的链式结构来存储数据信息，为数据信息添加时 间维度的属性，从而可实现数据信息的可追溯性。</li><li>智能合约：区块链技术能够为用户提供灵活可变的脚本代码，以支持其创建新型的智能合约。</li><li>不可篡改：在区块链系统中，因为相邻区块间后序区块可对前序区块进行验证，若篡改 某一区块的数据信息，则需递归修改该区块及其所有后序区块的数据信息，然而每一次 哈希的重新计算代价是巨大的，且须在有限时间内完成，因此可保障链上数据的不可篡<br>改性。</li><li>开放共识：在区块链网络中，每台物理设备均可作为该网络中的一个节点，任意节点可 自由加入且拥有一份完整的数据库拷贝。</li><li>安全可信：数据安全可通过基于非对称加密技术对链上数据进行加密来实现，分布式系 统中各节点通过区块链共识算法所形成的算力来抵御外部攻击、保证链上数据不被篡改 和伪造，从而具有较高的保密性、可信性和安全性。</li></ul><ol start="2"><li>关键技术</li></ol><ul><li><p>分布式账本</p><ul><li>分布式账本是区块链技术的核心之一。分布式账本的核心思想是：交易记账由分布在不同 地方的多个节点共同完成，而且每一个节点保存一个唯一、真实账本的副本，它们可以参与监 督交易合法性，同时也可以共同为其作证；账本里的任何改动都会在所有的副本中被反映出来， 反应时间会在几分钟甚至是几秒内，记账节点足够多，理论上除非所有的节点被破坏，所有整 个分布式账本系统是非常稳健的，从而保证了账目数据的安全性。</li></ul></li><li><p>加密算法</p><ul><li>区块数据的加密是区块链研究和关注的重点，其主要作用是保证区块数据在网络传输、存 储和修改过程中的安全。区块链系统中的加密算法一般分为散列(哈希)算法和非对称加密<br>算法。</li></ul></li><li><p>共识机制</p><ul><li><p>区块链的共识机制的思想是：在没有中心点总体协调的情况下，当某个记账节点提议区块 数据增加或减少，并把该提议广播给所有的参与节点，所有节点要根据一定的规则和机制，对 这一提议是否能够达成一致进行计算和处理。</p><ul><li>合规监管：是否支持超级权限节点对全网节点、数据进行监管。</li><li>性能效率：交易达成共识被确认的效率。</li><li>资源消耗：共识过程中耗费的CPU、网络输入输出、存储等资源。</li><li>容错性：防攻击、防欺诈的能力。</li></ul></li></ul></li></ul><h4 id="2-2-5-人工智能"><a href="#2-2-5-人工智能" class="headerlink" title="2.2.5 人工智能"></a>2.2.5 人工智能</h4><ol><li>技术基础</li><li>关键技术</li></ol><ul><li><p>人工智能的关键技术主要涉及机器学习、自然语言处理、专家系统等技术，随着人工智能 应用的深入，越来越多新兴的技术也在快速发展中。</p><ol><li>机器学习</li></ol><p>机器学习是一种自动将模型与数据匹配，并通过训练模型对数据进行“学习”的技术。</p><p>神经网络是机器学习的一种形式</p><ol start="2"><li>自然语言处理</li></ol><ul><li>自然语言处理(Natural Language Processing,NLP)是计算机科学领域与人工智能领域中的 一个重要方向。它研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法。</li><li>自然语言处理并不是一般地研究自然语言，而在于研制能有效地使用自然语言通信的计算 机系统，特别是其中的软件系统。因而它是计算机科学的一部分。</li><li>自然语言处理主要应用于机器翻译、舆情监测、自动摘要、观点提取、文本分类、问题回 答、文本语义对比、语音识别、中文OCR等方面。</li></ul><ol start="3"><li>专家系统</li></ol><p>专家系统是一个智能计算机程序系统，通常由人机交互界面、知识库、推理机、解释器、 综合数据库、知识获取等6个部分构成</p></li></ul><h4 id="2-2-6-虚拟现实"><a href="#2-2-6-虚拟现实" class="headerlink" title="2.2.6 虚拟现实"></a>2.2.6 虚拟现实</h4><ol><li><p>技术基础</p><p> 虚拟现实(Virual Reality,VR)是一种可以创立和体验虚拟世界的计算机系统(其中虚拟 世界是全体虚拟环境的总称)。通过虚拟现实系统所建立的信息空间，已不再是单纯的数字信息 空间，而是一个包容多种信息的多维化的信息空间(Cyberspace),人类的感性认识和理性认识 能力都能在这个多维化的信息空间中得到充分的发挥。要创立一个能让参与者具有身临其境感， 具有完善交互作用能力的虚拟现实系统，在硬件方面，需要高性能的计算机软硬件和各类先进 的传感器；在软件方面，主要是需要提供一个能产生虚拟环境的工具集。</p><p> 虚拟现实技术的主要特征包括沉浸性、交互性、多感知性、构想性(也称想象性)和自主性。随着虚拟现实技术的快速发展，按照其“沉浸性”程度的高低和交互程度的不同，虚拟现 实技术已经从桌面虚拟现实系统、沉浸式虚拟现实系统、分布式虚拟现实系统等，向着增强式虚拟现实系统(Augmented Reality,AR)和元宇宙的方向发展。</p></li><li><p>关机技术</p></li></ol><ul><li><p>虚拟现实的关键技术主要涉及人机交互技术、传感器技术、动态环境建模技术和系统集成技术等。</p><ol><li>人机交互技术</li><li>传感器技术</li><li>动态环境建模技术</li><li>系统集成技术</li></ol></li></ul><h3 id="‍欢迎关注我的CSDN、个人博客、知乎"><a href="#‍欢迎关注我的CSDN、个人博客、知乎" class="headerlink" title="‍欢迎关注我的CSDN、个人博客、知乎"></a><strong>‍欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a></strong></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;内容来源：信息系统项目管理师教程 (第4版）&lt;br&gt;文章内容主要为第4版教程的核心重点内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;2-1-信息技术及其发展&quot;&gt;&lt;a href=&quot;#2-1-信息技术及其发展&quot; class=&quot;header</summary>
      
    
    
    
    <category term="信息系统项目管理师" scheme="http://hmiking.top/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    
    <category term="信息系统项目管理师" scheme="http://hmiking.top/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    <category term="软考" scheme="http://hmiking.top/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="高项" scheme="http://hmiking.top/tags/%E9%AB%98%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>一、信息化发展</title>
    <link href="http://hmiking.top/2023/11/16/%E4%B8%80%E3%80%81%E4%BF%A1%E6%81%AF%E5%8C%96%E5%8F%91%E5%B1%95/"/>
    <id>http://hmiking.top/2023/11/16/%E4%B8%80%E3%80%81%E4%BF%A1%E6%81%AF%E5%8C%96%E5%8F%91%E5%B1%95/</id>
    <published>2023-11-16T07:47:58.000Z</published>
    <updated>2023-11-16T09:08:11.065Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>内容来源：信息系统项目管理师教程 (第4版）<br>文章内容主要为第4版教程的核心重点内容。</p></blockquote><h3 id="1-1-信息与信息化"><a href="#1-1-信息与信息化" class="headerlink" title="1.1 信息与信息化"></a>1.1 信息与信息化</h3><h4 id="1-1-1-信息"><a href="#1-1-1-信息" class="headerlink" title="1.1.1 信息"></a>1.1.1 信息</h4><ol><li>信息的定义</li></ol><ul><li><p>信息(Information)是物质、能量及其属性的标示的集合，是确定性的增加。它以物质介 质为载体，传递和反映世界各种事物存在方式、运动状态等的表征。信息不是物质，也不是能 力，它以一种普遍形式，表达物质运动规律，在客观世界中大量存在、产生和传递。</p></li><li><p>信息的目的是用来“消除不确定的因素”。</p></li></ul><ol start="2"><li>信息的特征与质量</li></ol><ul><li>特征：主要包括客观性、普遍性、无限性、动态性、相对性、依附性、变换性、传递性、 层次性、系统性和转化性等。</li><li>质量属性：主要包括精确性、完整性、可靠性、及时 性、经济性、可验证性和安全性等。</li></ul><h4 id="1-1-2-信息系统"><a href="#1-1-2-信息系统" class="headerlink" title="1.1.2 信息系统"></a>1.1.2 信息系统</h4><ol><li>信息系统及其特性</li></ol><ul><li>管理模型是指系统服务对象领域的专门知识，以及分析和处理该领域问题的模型，又称为 对象的处理模型；信息处理模型指系统处理信息的结构和方法。管理模型中的理论和分析方法， 在信息处理模型中转化为信息获取、存储、传输、加工和使用的规则；系统实现条件指可供应 用的计算机技术和通信技术、从事对象领域工作的人员，以及对这些资源的控制与融合。</li></ul><ol start="2"><li>信息系统生命周期</li></ol><ul><li><p>软件的生命周期通常包括：可行性分析与项目开发计划、需求分析、概要设计、详细设计、 编码、测试、维护等阶段。</p></li><li><p>信息系统的生命周期可以简化为：系统规划(可行性分析与项目开发计划),系统分析(需 求分析),系统设计(概要设计、详细设计),系统实施(编码、测试),系统运行和维护等阶 段，如图1-2所示。</p></li></ul><p><img src="https://djy.oldit.cn/article/image-20231116151528-0rycywb.webp" alt="image">​</p><h4 id="1-1-3-信息化"><a href="#1-1-3-信息化" class="headerlink" title="1.1.3 信息化"></a>1.1.3 信息化</h4><ol><li>信息化内涵</li></ol><p>信息化的核心是要通过全体社会成员的共同努力，在经济和社会各个领域充分应用基于 信息技术的先进社会生产工具(表现为各种信息系统或软硬件产品),提高信息时代的社会生 产力，并推动生产关系和上层建筑的改革(表现为法律、法规、制度、规范、标准、组织结构 等),使国家的综合实力、社会的文明程度和人民的生活质量全面提升。信息化内涵主要包括：</p><ul><li>信息网络体系：包括信息资源、各种信息系统、公用通信网络平台等。</li><li>信息产业基础：包括信息科学技术研究与开发、信息装备制造、信息咨询服务等。</li><li>社会运行环境：包括现代工农业、管理体制、政策法律、规章制度、文化教育、道德观 念等生产关系与上层建筑。</li><li>效用积累过程：包括劳动者素质、国家现代化水平和人民生活质量的不断提高，精神文 明和物质文明建设不断进步等。</li></ul><ol start="2"><li>信息化体系</li></ol><ul><li>国家信息化体系包括信息技术应用、信息资源、信息网络、信息技术和产业、信息化人才、信息化政策法规和标准规范6个要素，这6 个要素的关系构成了一个有机的整体，如图1-3所示。</li></ul><p><img src="https://djy.oldit.cn/article/image-20231116151730-8lpqx7f.webp" alt="image">​</p><ol start="3"><li>信息化趋势</li></ol><blockquote><p>组织信息化趋势</p></blockquote><ul><li><p>组织信息化除驱动和加速组织转型升级和生产力建设外，还呈现出产品信息化、产业信息化、社会生活信息化和国民经济信息化等趋势和方向。产品信息化包含两层含义：</p><p>①产品中各 类信息比重日益增大、物质比重日益降低，其物质产品的特征向信息产品的特征迈进；</p><p>②越来 越多的产品中嵌入了智能化元器件，使产品具有越来越强的信息处理功能。</p><p>产业信息化指农业、 工业、服务业等传统产业广泛利用信息技术，大力开发和利用信息资源，建立各种类型的产业 互联网平台和网络，实现产业内各种资源、要素的优化与重组，从而实现产业的升级。社会生 活信息化指包括市场、科技、教育、军事、政务、日常生活等在内的整个社会体系采用先进的 信息技术，建立各种互联网平台和网络，大力拓展人们日常生活的信息内容，丰富人们的精神 生活，拓展人们的活动时空等。国民经济信息化指在经济大系统内实现统一的信息大流动，使 金融、贸易、投资、计划、营销等组成一个信息大系统，生产、流通、分配、消费等经济的四 个环节通过信息进一步连成一个整体。国民经济信息化是世界各国急需实现的目标。</p></li></ul><blockquote><p>国家信息化趋势</p></blockquote><ul><li>《国家信息化发展战略纲要》强调国家信息化发展战略总目标是建设网络强国，分“三步 走”:第一步到2020年，核心关键技术部分领域达到国际先进水平，信息产业国际竞争力大幅 提升，信息化成为驱动现代化建设的先导力量；第二步到2025年，建成国际领先的移动通信网 络，根本改变核心关键技术受制于人的局面，实现技术先进、产业发达、应用领先、网络安全 坚不可摧的战略目标，涌现一批具有强大国际竞争力的大型跨国网信企业；第三步到21世纪 中叶，信息化全面支撑富强民主文明和谐的社会主义现代化国家建设，网络强国地位日益巩固， 在引领全球信息化发展方面有更大作为。当前，我国全面部署了“构建产业数字化转型发展体 系”重大任务，明确我国信息化进入加快数字化发展、建设数字中国的新阶段。</li><li>《“十四五”国家信息化规划》明确了：建设泛在智联的数字基础设施体系，建立高效利用 的数据要素资源体系，构建释放数字生产力的创新发展体系，培育先进安全的数字产业体系， 构建产业数字化转型发展体系，构筑共建共治共享的数字社会治理体系，打造协同高效的数字 政府服务体系，构建普惠便捷的数字民生保障体系，拓展互利共赢的数字领域国际合作体系和建立健全规范有序的数字化发展治理体系等重大任务。</li></ul><h3 id="1-2-现代化基础设施"><a href="#1-2-现代化基础设施" class="headerlink" title="1.2 现代化基础设施"></a>1.2 现代化基础设施</h3><h4 id="1-2-1-新型基础设施建设"><a href="#1-2-1-新型基础设施建设" class="headerlink" title="1.2.1 新型基础设施建设"></a>1.2.1 新型基础设施建设</h4><blockquote><p>“新型基础设施建设”的提法由此产生， 其主要包括5G基建、特高压、城际高速铁路和城际轨道交通、新能源汽车充电桩、大数据中 心、人工智能、工业互联网等七大领域。</p></blockquote><ol><li>概念定义</li></ol><p>新型基础设施是以新发展理念为引领，以技术创新为驱动，以信息网络为基础，面向高质 量发展需要，提供数字转型、智能升级、融合创新等服务的基础设施体系。目前，新型基础设 施主要包括如下三个方面。</p><ul><li>信息基础设施。信息基础设施主要指基于新一代信息技术演化生成的基础设施。信息 基础设施包括：①以SG、物联网、工业互联网、卫星互联网为代表的通信网络基础设施；②以 人工智能、云计算、区块链等为代表的新技术基础设施；③以数据中心、智能计算中心为代表 的算力基础设施等。信息基础设施凸显“技术新”。</li><li>融合基础设施。融合基础设施主要指深度应用互联网、大数据、人工智能等技术，支 撑传统基础设施转型升级，进而形成的融合基础设施。融合基础设施包括智能交通基础设施、 智慧能源基础设施等。融合基础设施重在“应用新”。</li><li>创新基础设施。创新基础设施主要指支撑科学研究、技术开发、产品研制的具有公益 属性的基础设施。创新基础设施包括重大科技基础设施、科教基础设施、产业技术创新基础设 施等。创新基础设施强调“平台新”。</li></ul><ol start="2"><li>发展重点</li></ol><p>国家“十四五”规划中提出持续加快建设新型基础设施：</p><p>①强化数字转型、智能升级、融合创新支撑，布局建设信息基础设施、融合基础设施、 创新基础设施等新型基础设施；</p><p>②建设高速泛在、天地一体、集成互联、安全高效的信息基础 设施，增强数据感知、传输、存储和运算能力；</p><p>③加快SG网络规模化部署，持续提高用户普及 率，推广升级千兆光纤网络；</p><p>④前瞻布局6G网络技术储备；</p><p>⑤扩容骨干网互联节点，新设一 批国际通信出入口，全面推进互联网协议第六版(IPv6)商用部署；</p><p>⑥实施中西部地区中小城 市基础网络完善工程；</p><p>⑦推动物联网全面发展，打造支持固移融合、宽窄结合的物联接入能力； </p><p>⑧加快构建全国一体化大数据中心体系，强化算力统筹智能调度，建设若干国家枢纽节点和大 数据中心集群，建设E级和10E级超级计算中心；</p><p>⑨积极稳妥发展工业互联网和车联网；</p><p>⑩打 造全球覆盖、高效运行的通信、导航、遥感空间基础设施体系，建设商业航天发射场；</p><p>⑪加快 交通、能源、市政等传统基础设施数字化改造，加强泛在感知、终端联网、智能调度体系建设； ⑫发挥市场主导作用，打通多元化投资渠道，构建新型基础设施标准体系等。</p><h4 id="1-2-2-工业互联网"><a href="#1-2-2-工业互联网" class="headerlink" title="1.2.2 工业互联网"></a>1.2.2 工业互联网</h4><blockquote><p>工业互联网(Industrial Internet)是新一代信息通信技术与工业经济深度融合的新型基础设 施、应用模式和工业生态，通过对人、机、物、系统等的全面连接，构建起覆盖全产业链、全 价值链的全新制造和服务体系，为工业乃至产业数字化、网络化、智能化发展提供了实现途径， 是第四次工业革命的重要基石。</p></blockquote><ol><li>内涵和外延</li></ol><p>工业互联网不是互联网在工业的简单应用，是具有更为丰富的内涵和外延。它既是工业数 字化、网络化、智能化转型的基础设施，也是互联网、大数据、人工智能与实体经济深度融合 的应用模式，同时也是一种新业态、新产业，将重塑企业形态、供应链和产业链。</p><ol start="2"><li>平台体系</li></ol><ul><li><p>工业互联网平台体系具有四大层级：它以网络为基础，平台为中枢，数据为要素，安全为保障。</p><ol><li>网络是基础</li></ol><p> 工业互联网网络体系包括网络互联、数据互通和标识解析三部分。网络互联实现要素之间 的数据传输，包括企业外网和企业内网。典型技术包括传统的工业总线、工业以太网以及创新 的时间敏感网络(TSN)、确定性网络、5G等技术。企业外网根据工业高性能、高可靠、高灵 活、高安全网络需求进行建设，用于连接企业各地机构、上下游企业、用户和产品。企业内网 用于连接企业内人员、机器、材料、环境、系统，主要包含信息(IT)网络和控制(OT)网 络。当前，内网技术发展呈现三个特征：IT和OT正走向融合，工业现场总线向工业以太网演 进，工业无线技术加速发展。数据互通是通过对数据进行标准化描述和统一建模，实现要素之 间传输信息的相互理解，数据互通涉及数据传输、数据语义语法等不同层面。标识解析体系实 现要素的标记、管理和定位，由标识编码、标识解析系统和标识数据服务组成，通过为物料、 机器、产品等物理资源和工序、软件、模型、数据等虚拟资源分配标识编码，实现物理实体和 虚拟对象的逻辑定位和信息查询，支撑跨企业、跨地区、跨行业的数据共享共用。</p><ol start="2"><li>平台是中枢</li></ol><p>工业互联网平台体系包括边缘层、IaaS、PaaS和SaaS四个层级，相当于工业互联网的“操 作系统”,它有四个主要作用：</p><p>①数据汇聚。网络层面采集的多源、异构、海量数据，传输至 工业互联网平台，为深度分析和应用提供基础。</p><p>②建模分析。提供大数据、人工智能分析的算 法模型和物理、化学等各类仿真工具，结合数字孪生、工业智能等技术，对海量数据挖掘分析， 实现数据驱动的科学决策和智能应用。</p><p>③知识复用。将工业经验知识转化为平台上的模型库、 知识库，并通过工业微服务组件方式，方便二次开发和重复调用，加速共性能力沉淀和普及。 </p><p>④应用创新。面向研发设计、设备管理、企业运营、资源调度等场景，提供各类工业App、云 化软件，帮助企业提质增效。</p><ol start="3"><li>数据是要素</li></ol><p>工业互联网数据有三个特性：</p><p>①重要性。数据是实现数字化、网络化、智能化的基础，没 有数据的采集、流通、汇聚、计算、分析，各类新模式就是无源之水，数字化转型也就成为无 本之木。</p><p>②专业性。工业互联网数据的价值在于分析利用，分析利用的途径必须依赖行业知识 和工业机理。制造业千行百业、千差万别，每个模型、算法背后都需要长期积累和专业队伍， 只有深耕细作才能发挥数据价值。</p><p>③复杂性。工业互联网运用的数据来源于“研产供销服”各 环节，“人机料法环”各要素，ERP、MES、PLC等各系统，维度和复杂度远超消费互联网，面 临采集困难、格式各异、分析复杂等挑战。</p><ol start="4"><li>安全是保障</li></ol><p>工业互联网安全具有三大特点：</p><p>①涉及范围广。工业 互联网打破了传统工业相对封闭可信的环境，网络攻击可直达生产一线。联网设备的爆发式增 长和工业互联网平台的广泛应用，使网络攻击面持续扩大。</p><p>②造成影响大。工业互联网涵盖制造 业、能源等实体经济领域，一旦发生网络攻击、破坏行为，安全事件影响严重。</p><p>③企业防护基础 弱。目前我国广大工业企业安全意识、防护能力仍然薄弱，整体安全保障能力有待进一步提升。</p></li></ul><h4 id="1-2-3-车联网"><a href="#1-2-3-车联网" class="headerlink" title="1.2.3 车联网"></a>1.2.3 车联网</h4><blockquote><p>车联网是新一代网络通信技术与汽车、电子、道路交通运输等领域深度融合的新兴产业形 态。智能网联汽车是搭载先进的车载传感器、控制器、执行器等装置，并融合现代通信与网络 技术，实现车与车、路、人、云端等智能信息交换、共享，具备复杂环境感知、智能决策、协同控制等功能，可实现“安全、高效、舒适、节能”行驶的新一代汽车。</p><p>‍</p><p>一句话总结：汽车信息化</p></blockquote><ol><li>体系框架</li></ol><p>车联网(Internet of Vehicles,loV)系统是一个“端、管、云”三层体系。</p><ul><li>端系统。端系统是汽车的智能传感器负责采集与获取车辆的智能信息，感知行车状态 与环境；是具有车内通信、车间通信、车网通信的泛在通信终端；同时还是让汽车具备loV寻 址和网络可信标识等能力的设备。</li><li>管系统。管系统解决车与车、车与路、车与网、车与人等的互联互通，实现车辆自组 网及多种异构网络之间的通信与漫游，在功能和性能上保障实时性、可服务性与网络泛在性， 同时它是公网与专网的统一体。</li><li>云系统。车联网是一个云架构的车辆运行信息平台，它的生态链包含了ITS、物流、 客货运、危特车辆、汽修汽配、汽车租赁、企事业车辆管理、汽车制造商、4S店、车管、保险、 紧急救援、移动互联网等，是多源海量信息的汇聚，因此需要虚拟化、安全认证、实时交互 海量存储等云计算功能，其应用系统也是围绕车辆的数据汇聚、计算、调度、监控、管理与应 用的复合体系。</li></ul><ol start="2"><li>链接方式</li></ol><p>车联网分别是车与云平台、车与车、车与路、车与人、车内设备之间等全方位网络链接。</p><ul><li>车与云平台间的通信是指车辆通过卫星无线通信或移动蜂窝等无线通信技术实现与车 联网服务平台的信息传输，接收平台下达的控制指令，实时共享车辆数据。</li><li>车与车间的通信是指车辆与车辆之间实现信息交流与信息共享，包括车辆位置、行驶 速度等车辆状态信息，可用于判断道路车流状况。</li><li>车与路间的通信是指借助地面道路固定通信设施实现车辆与道路间的信息交流，用于 监测道路路面状况，引导车辆选择最佳行驶路径。</li><li>车与人间的通信是指用户可以通过Wi-Fi、蓝牙、蜂窝等无线通信手段与车辆进行信息 沟通，使用户能通过对应的移动终端设备监测并控制车辆。</li><li>车内设备间的通信是指车辆内部各设备间的信息数据传输，用于对设备状态的实时检 测与运行控制，建立数字化的车内控制系统。</li></ul><h3 id="1-3-现代化创新发展"><a href="#1-3-现代化创新发展" class="headerlink" title="1.3 现代化创新发展"></a>1.3 现代化创新发展</h3><h4 id="1-3-1-农业农村现代化"><a href="#1-3-1-农业农村现代化" class="headerlink" title="1.3.1 农业农村现代化"></a>1.3.1 农业农村现代化</h4><ol><li>农业现代化</li></ol><blockquote><p>农业现代化是用现代工业装备农业，用现代科学技术改造农业，用现代管理方法管理农业， 用现代科学文化知识提高农民素质的过程；是建立高产、优质、高效农业生产体系，把农业建 成具有显著经济效益、社会效益和生态效益的可持续发展的农业的过程；也是大幅度提高农业 综合生产能力、不断增加农产品有效供给和农民收入的过程，同时，农业现代化又是一种手段。</p><p>‍</p><p>一句话总结：需要在我们农业中运用我们的IT知识。</p></blockquote><h4 id="1-3-2-两化融合与智能制造"><a href="#1-3-2-两化融合与智能制造" class="headerlink" title="1.3.2 两化融合与智能制造"></a>1.3.2 两化融合与智能制造</h4><ol><li>两化融合</li></ol><p>两化融合是信息化和工业化的高层次的深度结合，是指以信息化带动工业化、以工业化促 进信息化，走新型工业化道路；两化融合的核心就是信息化支撑，追求可持续发展模式。</p><ol start="2"><li>智能制造</li></ol><ul><li><p>智能制造(Intelligent Manufacturing,IM)是基于新一代信息通信技术与先进制造技术深度 融合，贯穿于设计、生产、管理、服务等制造活动的各个环节，具有自感知、自学习、自决策、 自执行、自适应等功能的新型生产方式。</p></li><li><p>智能制造是一种由智能机器和人类专家共同组成的人机一体化智能系统，它在制造过程中 能进行智能活动，诸如分析、推理、判断、构思和决策等。通过人与智能机器的合作共事，去 扩大、延伸和部分地取代人类专家在制造过程中的脑力劳动。它把制造自动化的概念更新，扩 展到柔性化、智能化和高度集成化。</p></li></ul><p><img src="https://djy.oldit.cn/article/image-20231116153422-uiux0cv.webp" alt="image">​</p><ul><li>一级(规划级):企业应开始对实施智能制造的基础和条件进行规划，能够对核心业务 活动(设计、生产、物流、销售、服务)进行流程化管理。</li><li>二级(规范级):企业应采用自动化技术、信息技术手段对核心装备和业务活动等进行 改造和规范，实现单一业务活动的数据共享。</li><li>三级(集成级):企业应对装备、系统等开展集成，实现跨业务活动间的数据共享。</li><li>四级(优化级):企业应对人员、资源、制造等进行数据挖掘，形成知识、模型等，实 现对核心业务活动的精准预测和优化。</li><li>五级(引领级):企业应基于模型持续驱动业务活动的优化和创新，实现产业链协同并 衍生新的制造模式和商业模式。</li></ul><h4 id="1-3-3-消费互联网"><a href="#1-3-3-消费互联网" class="headerlink" title="1.3.3 消费互联网"></a>1.3.3 消费互联网</h4><p>消费互联网是以个人为用户，以日常生活为应用场景的应用形式，满足消费者在互联网中 的消费需求而生的互联网类型。消费互联网以消费者为服务中心，针对个人用户提升消费过程 的体验，在人们的阅读、出行、娱乐、生活等诸多方面进行改善，让生活变得更方便、更快捷。 消费互联网本质是个人虚拟化，增强个人生活消费体验。</p><ol><li>基本属性</li></ol><ul><li>媒体属性：由自媒体、社会媒体以及资讯为主的门户网站。</li><li>产业属性：由在线旅行和为消费者提供生活服务的电子商务等其他组成。</li></ul><ol start="2"><li>应用新格局</li></ol><p>消费互联网不仅仅给人们带来了生活方式的变化和生活质量的提高，而且推动了社会生活 的深层变革，那就是“无身份社会”的建立。互联网环境下的“无身份社会”带来了更加快捷 的社会活动与经济效能，相关参与者可以不用消耗时间精力来完成共同参与者的“身份认定”, 这是因为互联网搭建了更高层级的信任校验模式，其通过数据记录、存储、整合与共享等方面 的能力，实现了社会活动的一定程度上的复杂校验和过程可回溯，正是这种天然模式，进一步 强化了“无身份社会”的发展进程。</p><h3 id="1-4-数字中国"><a href="#1-4-数字中国" class="headerlink" title="1.4 数字中国"></a>1.4 数字中国</h3><p>数字中国是新时代国家信息化发展的新战略，是满足人民日益增长的美好生活 需要的新举措，是驱动引领经济高质量发展的新动力，涵盖经济、政治、文化、社会、生态等 各领域信息化建设，主要包括宽带中国、互联网+、大数据、云计算、人工智能、数字经济、 电子政务、新型智慧城市、数字乡村等内容。“迎接数字时代，激活数据要素潜能，推进网络强国建设，加快建设数字经济、数字社会、数字政府，以数字化转型整体驱动生产方式、生活方 式和治理方式变革”成为了新时代我国信息化发展的主旋律，如图1-6所示。</p><p><img src="https://djy.oldit.cn/article/image-20231116153643-tre1g41.webp" alt="image">​</p><h4 id="1-4-1-数字经济"><a href="#1-4-1-数字经济" class="headerlink" title="1.4.1 数字经济"></a>1.4.1 数字经济</h4><p>从本质上看，数字经济是一种 新的技术经济范式，它建立在信息与通信技术的重大突破的基础上，以数字技术与实体经济融 合驱动的产业梯次转型和经济创新发展的主引擎，在基础设施、生产要素、产业结构和治理结 构上表现出与农业经济、工业经济显著不同的新特点。</p><ol><li>主要内容构成</li></ol><ul><li><p>从产业构成来看，数字经济包括数字产业化和产业数字化两大部分。《数字经济及其核心产 业统计分类(2021)》给出了数字经济具体分类，分别是：数字产品制造业、数字产品服务业、数字技术应用业、数字要素驱动业和数字化效率提升业，其中，前4类为数字产业化部分，第 5类为产业数字化部分。从整体构成上看，数字经济包括数字产业化、产业数字化、数字化治 理和数据价值化四个部分。</p><ol><li>数字产业化</li></ol><p>数字产业化是指为产业数字化发展提供数字技术、产品、服务、基础设施和解决方案，以 及完全依赖于数字技术、数据要素的各类经济活动，包括电子信息制造业、电信业、软件、信 息技术、互联网行业等。数字产业化是数字经济的基础部分。《中华人民共和国国民经济和社会 发展第十四个五年规划和2035年远景目标纲要》提出了强调加快推动数字产业化，培育壮大人 工智能、大数据、区块链、云计算、网络安全等新兴数字产业，提升通信设备、核心电子元器 件、关键软件等产业水平。构建基于5G的应用场景和产业生态，在智能交通、智慧物流、智 慧能源、智慧医疗等重点领域开展试点示范。鼓励企业开放搜索、电商、社交等数据，发展第 三方大数据服务产业。促进共享经济、平台经济健康发展。数字产业化发展重点包括：</p><ul><li>云计算</li><li>大数据</li><li>物联网</li><li>工业互联网</li><li>区块链</li><li>人工智能</li><li>虚拟现实和增强现实</li></ul><ol start="2"><li>产业数字化</li></ol><p>产业数字化是指在新一代数字科技支撑和引领下，以数据为关键要素，以价值释放为核心， 以数据赋能为主线，对产业链上下游的全要素数字化升级、转型和再造的过程。产业数字化作 为实现数字经济和传统经济深度融合发展的重要途径，是新时代背景下使用数字经济发展的必 由之路和战略抉择。《中华人民共和国国民经济和社会发展第十四个五年规划和2035年远景目标纲要》明确提出了推进产业数字化转型，实施“上云用数赋智”行动，推动数据赋能全产业 链协同转型。</p><ul><li><strong>注释：</strong>​<strong>上云用数赋智（上云平台，用数据，赋予人工智能）</strong></li></ul><ol start="3"><li><p>数字化治理</p><pre><code>数字化治理通常指依托互联网、大数据、人工智能等技术和应用，创新社会治理方法与手 段，优化社会治理模式，推进社会治理的科学化、精细化、高效化，助力社会治理现代化。数 字化治理是数字经济的组成部分之一，包括但不限于多元治理，以“信息技术+治理”为典型 特征的技管结合，以及数字化公共服务等。数字化治理的核心特征是全社会的数据互通、数字化全面协同与跨部门的流程再造，形成 “用数据说话、用数据决策、用数据管理、用数据创新”的治理机制。作为数字时代的全新治理 范式，数字化治理的内涵至少包含：</code></pre></li></ol><ul><li>对数据的治理</li><li>运用数据进行治理</li><li>对数字融合空间进行治理</li></ul><ol start="4"><li>数据价值化</li></ol><p>数据价值化是指以数据资源化为起点，经历数据资产化、数据资本化阶段，实现数据价值 化的经济过程。上述三个要素构成数据价值化的“三化”框架，即数据资源化、数据资产化、 数据资本化，细化描述为：</p><ul><li>数据资源化：是使无序、混乱的原始数据成为有序、有使用价值的数据资源。数据资源 化阶段包括通过数据采集、整理、聚合、分析等，形成可采、可见、标准、互通、可信 的高质量数据资源。数据资源化是激发数据价值的基础，其本质是提升数据质量，形成 数据使用价值的过程。</li><li>数据资产化：是数据通过流通交易给使用者或者所有者带来的经济利益的过程。数据资 产化是实现数据价值的核心，其本质是形成数据交换价值，初步实现数据价值的过程。</li><li>数据资本化：主要包括两种方式，数据信贷融资与数据证券化。数据资本化是拓展数据 价值的途径，其本质是实现数据要素社会化配置。</li></ul></li></ul><h4 id="1-4-2-数字政府"><a href="#1-4-2-数字政府" class="headerlink" title="1.4.2 数字政府"></a>1.4.2 数字政府</h4><p>数字政府 通常是指以新一代信息技术为支撑，以“业务数据化、数据业务化”为着力点，通过数据驱动重塑政务信息化管理架构、业务架构和组织架构，形成“用数据决策、数据服务、数据创新” 的现代化治理模式。</p><ol><li>数字新特征</li></ol><ul><li><p>数字政府既是“互联网+政务”深度发展的结果，也是大数据时代政府自觉转型升级的必 然，其核心目的是以人为本，实施路径是共创、共享、共建、共赢的生态体系。同时数字政府 也被赋予了新的特征：</p><ul><li>协同化：主要强调组织的互联互通，业务协同方面能实现一个跨层级、跨地域、跨部 门、跨系统、跨业务的高效协同管理和服务。</li><li>云端化：云平台是政府数字化最基本的技术要求，政务上云是促成各地各部门由分散建 设向集群集约式规划与建设的演化过程，是政府整体转型的必要条件。</li><li>智能化：智能化治理是政府应对社会治理多元参与、治理环境越发复杂、治理内容多样 化趋势的关键手段。</li><li>数据化：数据化也是现阶段数字政府建设的重点，是建立在政务数据整合共享基础上的 数字化的转型。</li><li>动态化：指数字政府是在数据驱动下动态发展不断演进的过程。</li></ul></li><li><p>数字政府建设关键词主要包括：</p><ul><li>共享：推动政务数据共享，推进政务服务事项集成化办理。数字政府，数据先行。数据 共享是提升政务服务效能的重要抓手。</li><li>互通：国家政务服务平台持续推动与各地区、各部门政务服务业务办理系统的全面对接 融合，打破地域阻隔与部门壁垒，实现更大范围内的系统互联互通，有力推动了政务服 务线上线下融合互通和跨地区、跨部门、跨层级协同办理。</li><li>便利：数字政府，利企便民。加强数字政府建设的根本目标是更好地服务企业和群众， 满足人民日益增长的美好生活需要。</li></ul></li></ul><ol start="2"><li>主要内容</li></ol><p>《“十四五”国家信息化规划》中提出打造协同高效的数字政府服务体系，深入推进“放 管服”改革、加快政府职能转变，打造市场化、法治化、国际化营商环境，坚持整体集约建 设数字政府，推动条块政务业务协同，加快政务数据开放共享和开发利用，深化推进“一网通 办”“跨省通办”“一网统管”,畅通参与政策制定的渠道，推动国家行政体系更加完善、政府 作用更好发挥、行政效率和公信力显著提升，推动有效市场和有为政府更好结合，打造服务型 政府。数字政府从面向社会大众政务服务视角来看，主要内容重点体现在“一网通办”“跨省通 办”“一网统管”。</p><h4 id="1-4-3-数字社会"><a href="#1-4-3-数字社会" class="headerlink" title="1.4.3 数字社会"></a>1.4.3 数字社会</h4><ol><li>数字民生</li></ol><p>字民生建设重点通常强调：</p><ul><li>普惠：充分开发利用信息技术体系，扩大民生保障覆盖范围，助力普惠型民生建设，解 决民生资源配置不均衡等问题。</li><li>赋能：信息技术体系与民生的深度融合赋予了民生建设新动能，促进民生保障实效指数 式增长，如“互联网+教育”“互联网+医疗”“互联网+养老”“互联网+交通”等。</li><li>利民：信息技术体系创新拓展了公共服务场景，推动数字技术全面融入社会交往和日常 生活新趋势，使民生服务日趋智慧化、便利化和人性化。</li></ul><ol start="2"><li>智慧城市</li></ol><ul><li><p>智慧城市是运用信息通信技术，有效整合各类城市管理系统，实现城市各系统间信息资源 共享和业务协同，推动城市管理和服务智慧化，提升城市运行管理和公共服务水平，提高城市 居民幸福感和满意度，实现可持续发展的一种创新型城市。</p></li><li><p>智慧城市基本原理表现为：</p><p>①强调“人民城市为人民”,以面向政府、企业、市民等主 体提供智慧化的服务为主要模式；</p><p>②重点强化数据治理、数字孪生、边际决策、多元融合和态 势感知五个核心能力要素建设；</p><p>③更加注重规划设计、部署实施、运营管理、评估改进和创新 发展在内的智慧城市全生命周期管理；</p><p>④目标旨在推动城市治理、民生服务、生态宜居、产业 经济、精神文明五位一体的高质量发展；</p><p>⑤持续推动城市治理体系与治理能力现代化水平提升， 如图1-7所示。</p></li></ul><p><img src="https://djy.oldit.cn/article/image-20231116154711-jxpwzz3.webp" alt="image">​</p><p>对核心能力要素解释为：</p><ul><li>数据治理：围绕数据这一新的生产要素进行能力构建，包括数据责权利管控、全生命周 期管理及其开发利用等。</li><li>数字孪生：围绕现实世界与信息世界的互动融合进行能力构建，包括社会孪生、城市孪 生和设备孪生等，将推动城市空间摆脱物理约束，进入数字空间。</li><li>边际决策：基于决策算法和信息应用等进行能力构建，强化执行端的决策能力，从而达 到快速反应、高效决策的效果，满足对社会发展的敏捷需求。</li><li>多元融合：强调社会关系和社会活动的动态性及其融合的高效性等，实现服务可编排和 快速集成，从而满足各项社会发展的创新需求。</li><li>态势感知：围绕对社会状态的本质反映及模拟预测等进行能力构建，洞察可变因素与不 可见因素对社会发展的影响，从而提升生活质量。</li></ul><p>可将智慧城市发展成熟度划分为规划级、管理级、协同级、 优化级、引领级5个等级，如图1-8所示。</p><p><img src="https://djy.oldit.cn/article/image-20231116154915-zmlax11.webp" alt="image">​</p><ul><li>一级(规划级):应围绕智慧城市的发展进行策划，明确相关职责分工和工作机制等， 初步开展数据采集和应用，确保相关活动有序开展。</li><li>二级(管理级):应明确智慧城市发展战略、原则、目标和实施计划等，推进城市基础设施智能化改造，多领域实现信息系统单项应用，对智慧城市全生命周期实施管理。</li><li>三级(协同级):应管控智慧城市各项发展目标，实施多业务、多层级、跨领域应用系 统的集成，持续推进信息资源的共享与交换，推动惠民服务、城市治理、生态宜居、产 业发展等的融合创新，实现跨领域的协同改进。</li><li>四级(优化级):应聚焦智慧城市与城市经济社会发展深度融合，基于数据与知识模型 实施城市经济、社会精准化治理，推动数据要素的价值挖掘和开发利用，推进城市竞争 力持续提升。</li><li>五级(引领级):应构建智慧城市敏捷发展能力，实现城市物理空间、社会空间、信息 空间的融合演进和共生共治，引领城市集群治理联动，形成高质量发展共同体。</li></ul><ol start="3"><li>数字乡村</li></ol><p>数字乡村是伴随网络化、信息化和数字化在农业农村经济社会发展中的应用，以及农民现 代信息技能的提高而内生的农业农村现代化发展和转型进程，既是乡村振兴的战略方向，也是 建设数字中国的重要内容。</p><ol start="4"><li>数字生活</li></ol><p>数字生活是依托互联网和一系列数字科技技术应用为基础的一种生活方式，可以方便快捷 地带给人们更好的生活体验和工作便利。数字生活主要体现在如下方面。</p><ul><li>生活工具数字化。</li><li>生活方式数字化。</li><li>生活内容数字化。</li></ul><h3 id="1-5-数字化转型与元宇宙"><a href="#1-5-数字化转型与元宇宙" class="headerlink" title="1.5 数字化转型与元宇宙"></a>1.5 数字化转型与元宇宙</h3><h4 id="1-5-1-数字化转型"><a href="#1-5-1-数字化转型" class="headerlink" title="1.5.1 数字化转型"></a>1.5.1 数字化转型</h4><p>数字化转型(Digital Transformation)是建立在数字化转换(Digitization)、数字化升级 (Digitalization)基础上，进一步触及组织核心业务，以新建一种业务模式为目标的高层次转型。 数字化转型是开发数字化技术及支持能力以新建一个富有活力的数字化商业模式，只有组织对 其业务进行系统性、彻底的(或重大和完全的)重新定义，而不仅仅是IT,而是对组织活动、 流程、业务模式和员工能力的方方面面进行重新定义的时候，成功才会得以实现。</p><ol><li>驱动因素</li><li>基本原理</li><li>智慧转移</li></ol><p>数字化转型基本原理揭示了个体智慧(知识、技能和经验等)由“自然人”个体，转移到 组织智慧(计算机、信息系统等掌握的)的必要性和重要性。这种“智慧转移”也称“智慧移 植”,需要经历系列的过程才能完成，每个组织开展此类活动的模式与方法存在差异，也可以参 考图1-10所示的“智慧转移”模型。（P32）</p><p><img src="https://djy.oldit.cn/article/image-20231116155200-w90l37w.webp" alt="image">​</p><ol start="4"><li>持续迭代</li></ol><h4 id="1-5-2-元宇宙"><a href="#1-5-2-元宇宙" class="headerlink" title="1.5.2 元宇宙"></a>1.5.2 元宇宙</h4><p>元宇宙(Metaverse)是一个新兴概念，是一大批技术的集成。北京大学陈刚教授对元宇宙 的定义是：元宇宙是利用科技手段进行链接与创造的，与现实世界映射与交互的虚拟世界，具备新型社会体系的数字生活空间。清华大学沈阳教授对元宇宙的定义是：元宇宙是整合多种新 技术而产生的新型虚实相融的互联网应用和社会形态，它基于扩展现实技术提供沉浸式体验， 以及数字孪生技术生成现实世界的镜像，通过区块链技术搭建经济体系，将虚拟世界与现实世 界在经济系统、社交系统、身份系统上密切融合，并且允许每个用户进行内容生产和编辑。中 国社会科学院学者左鹏飞从时空性、真实性、独立性、连接性四个方面去交叉定义元宇宙。他 指出：从时空性来看，元宇宙是一个空间维度上虚拟而时间维度上真实的数字世界；从真实性 来看，元宇宙中既有现实世界的数字化复制物，也有虚拟世界的创造物；从独立性来看，元宇 宙是一个与外部真实世界既紧密相连，又高度独立的平行空间；从连接性来看，元宇宙是一个 把网络、硬件终端和用户囊括进来的一个永续的、广覆盖的虚拟现实系统。</p><ol><li>主要特征</li></ol><ul><li>沉浸式体验： 元宁宙的发展主要基于人们对互联网体验的需求， 这种体验就是即时信 息基础上的沉漫式体验。</li><li>虚拟身份： 人们已经拥有大量的互联网账号， 未来人们在元宇宙中， 随着账号内涵和外 延的进一步丰富， 将会发展成为－个或若干个数字身份， 这种身份就是数字世界的一个或一组角色。</li><li>虚拟经济： 虚拟身份的存在就促使元宇宙具备了开展虚拟社会活动的能力， 而这些活动 需要一定的经济模式展开， 即虚拟经济。</li><li>虚拟社会治理： 元宇宙中的经济与社会活动也需要一定的法律法规和规则的约束， 就像 现实世界一样， 元宇宙也需要社区化的社会治理。</li></ul><p>‍</p><h3 id="‍欢迎关注我的CSDN、个人博客、知乎"><a href="#‍欢迎关注我的CSDN、个人博客、知乎" class="headerlink" title="‍欢迎关注我的CSDN、个人博客、知乎"></a><strong>‍欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a></strong></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;内容来源：信息系统项目管理师教程 (第4版）&lt;br&gt;文章内容主要为第4版教程的核心重点内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-1-信息与信息化&quot;&gt;&lt;a href=&quot;#1-1-信息与信息化&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="信息系统项目管理师" scheme="http://hmiking.top/categories/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    
    <category term="信息系统项目管理师" scheme="http://hmiking.top/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    <category term="软考" scheme="http://hmiking.top/tags/%E8%BD%AF%E8%80%83/"/>
    
    <category term="高项" scheme="http://hmiking.top/tags/%E9%AB%98%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ECS实现内网服务器访问访问外网</title>
    <link href="http://hmiking.top/2023/11/10/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91/"/>
    <id>http://hmiking.top/2023/11/10/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91/</id>
    <published>2023-11-10T07:30:00.000Z</published>
    <updated>2023-11-10T07:46:11.690Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><img src="https://djy.oldit.cn/article/aliyun-logo.webp"></p><p>由于业务需要，需要多台云服务器，但是公有云的带宽价格不菲，所以不可能给所有的云服务器都配上公网IP，一方面是成本的问题，另一方面也是公网安全的问题。</p><p>所以通过其它的方式使用无公网的云服务器来来实现对外资源的访问。</p><h3 id="一、操作步骤"><a href="#一、操作步骤" class="headerlink" title="一、操作步骤"></a>一、操作步骤</h3><p><code>至少需要有一台具有公网IP的云服务器！</code></p><h3 id="1、开启ECS的路由转发功能"><a href="#1、开启ECS的路由转发功能" class="headerlink" title="1、开启ECS的路由转发功能"></a>1、开启ECS的路由转发功能</h3><p><code>在有公网的ECS上操作</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line"><span class="comment"># sysctl -p</span></span><br></pre></td></tr></table></figure><p>注：开启了路由转发功能，可能会影响到某些部署的应用，例：Grafana会访问报错。</p><h3 id="2、配置IPTABLES的NAT转发规则"><a href="#2、配置IPTABLES的NAT转发规则" class="headerlink" title="2、配置IPTABLES的NAT转发规则"></a>2、配置IPTABLES的NAT转发规则</h3><p>使用的是内网的ip段，我的ip段是192.168.20.0段，根据实际情况进行更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># iptables -t nat -I POSTROUTING -s 192.168.20.52/32 -j SNAT --to-source 192.168.20.50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据需要进行放通，192.168.20.52/32表示只匹配这一个ip，也可以写整个网段，192.168.20.50表示出去的那台公网服务器的内网ip。</span></span><br></pre></td></tr></table></figure><h3 id="3、查看规则"><a href="#3、查看规则" class="headerlink" title="3、查看规则"></a>3、查看规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># iptables -t nat -L</span></span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">DOCKER     all  --  anywhere             anywhere             ADDRTYPE match dst-type LOCAL</span><br><span class="line"></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">DOCKER     all  --  anywhere            !loopback/8           ADDRTYPE match dst-type LOCAL</span><br><span class="line"></span><br><span class="line">Chain POSTROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">SNAT       all  --  192.168.20.52                anywhere             to:192.168.20.50</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据需要是否要保存iptables的规则</span></span><br></pre></td></tr></table></figure><h3 id="4、配置阿里云控制台"><a href="#4、配置阿里云控制台" class="headerlink" title="4、配置阿里云控制台"></a>4、配置阿里云控制台</h3><p>打开专有网络—路由表—实例名称—添加路由条目</p><p><img src="https://djy.oldit.cn/article/Snipaste_2023-11-10_15-33-42.webp"></p><h3 id="5、测试"><a href="#5、测试" class="headerlink" title="5、测试"></a>5、测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ping www.jd.com</span></span><br><span class="line">PING jd-abroad.cdn20.com (222.132.143.108) 56(84) bytes of data.</span><br><span class="line">64 bytes from 222.132.143.108 (222.132.143.108): icmp_seq=1 ttl=48 time=32.0 ms</span><br><span class="line">64 bytes from 222.132.143.108 (222.132.143.108): icmp_seq=2 ttl=48 time=32.0 ms</span><br><span class="line">64 bytes from 222.132.143.108 (222.132.143.108): icmp_seq=3 ttl=48 time=32.0 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># ping通表示内网ECS实现对外资源访问了。</span></span><br></pre></td></tr></table></figure><hr><p>参考文章：<a href="https://developer.aliyun.com/article/607330">三步搭建VPC专有网络NAT网关，配置SNAT和DNAT规则-阿里云开发者社区 (aliyun.com)</a></p><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://djy.oldit.cn/article/aliyun-logo.webp&quot;&gt;&lt;/p&gt;
&lt;p&gt;由于业务需</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="阿里云" scheme="http://hmiking.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    <category term="服务器" scheme="http://hmiking.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="ECS" scheme="http://hmiking.top/tags/ECS/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus黑盒监控</title>
    <link href="http://hmiking.top/2023/11/02/Prometheus%E9%BB%91%E7%9B%92%E7%9B%91%E6%8E%A7/"/>
    <id>http://hmiking.top/2023/11/02/Prometheus%E9%BB%91%E7%9B%92%E7%9B%91%E6%8E%A7/</id>
    <published>2023-11-02T02:50:58.000Z</published>
    <updated>2023-11-02T05:56:23.090Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://djy.oldit.cn/article/prometheusio-logo.webp"></p><h3 id="什么是白盒、黑盒？"><a href="#什么是白盒、黑盒？" class="headerlink" title="什么是白盒、黑盒？"></a>什么是白盒、黑盒？</h3><ol><li>白盒监控：程序内部的一些指标，这类监控专注的点是原因，也就是一般为出现问题的根本，此类监控称为白盒监控，主要关注的是原因</li><li>黑盒监控：监控关注的是现象，也就是正在发生的告警，比如某个网站突然慢了，或者是打不开了。此类告警是站在用户的角度看到的东西，比较关注现象，表示正在发生的问题，这类监控称为黑盒监控。</li></ol><p><strong>在黑盒监控，Prometheus社区提供了官方的黑盒监控解决方案<code>Blackbox Exporter</code>，其允许用户通过：HTTP、HTTPS、DNS、TCP以及ICMP的方式对网络进行探测。</strong></p><p>Blackbox Exporter下载地址：</p><ul><li><a href="https://prometheus.io/download/">https://prometheus.io/download/</a></li><li><a href="https://git.xfj0.cn/https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz%EF%BC%88%E5%8A%A0%E9%80%9F%E5%9C%B0%E5%9D%80%EF%BC%89">https://git.xfj0.cn/https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz（加速地址）</a></li></ul><h3 id="部署Blackbox-Exporter··"><a href="#部署Blackbox-Exporter··" class="headerlink" title="部署Blackbox Exporter··"></a>部署Blackbox Exporter··</h3><h4 id="1、下载blackbox-exporter"><a href="#1、下载blackbox-exporter" class="headerlink" title="1、下载blackbox_exporter"></a>1、下载blackbox_exporter</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://git.xfj0.cn/https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果出现报错下载不下来，在最后加--no-check-certificate</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar xf blackbox_exporter-0.24.0.linux-amd64.tar.gz -C /usr/local/</span></span><br><span class="line"><span class="comment"># mv /usr/local/blackbox_exporter-0.24.0.linux-amd64 blackbox_exporter</span></span><br></pre></td></tr></table></figure><h4 id="2、添加到启动项"><a href="#2、添加到启动项" class="headerlink" title="2、添加到启动项"></a>2、添加到启动项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/lib/systemd/system/blackbox_exporter.service </span></span><br><span class="line">[Unit]</span><br><span class="line">Description=blackbox_exporter</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/usr/local/blackbox_exporter/blackbox_exporter \</span><br><span class="line">--config.file=/usr/local/blackbox_exporter/blackbox.yml \</span><br><span class="line">--web.listen-address=:9115</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="3、启动加入开机自启，并检查是否正常启动"><a href="#3、启动加入开机自启，并检查是否正常启动" class="headerlink" title="3、启动加入开机自启，并检查是否正常启动"></a>3、启动加入开机自启，并检查是否正常启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart blackbox_exporter</span></span><br><span class="line"><span class="comment"># systemctl enable blackbox_exporter</span></span><br><span class="line"><span class="comment"># ss -tunlp | grep 9115</span></span><br><span class="line">tcp    LISTEN     0      128    [::]:9115               [::]:*                   <span class="built_in">users</span>:((&quot;blackbox_export&quot;,pid=<span class="number">18703</span>,fd=<span class="number">3</span>))</span><br></pre></td></tr></table></figure><h4 id="icmp监控"><a href="#icmp监控" class="headerlink" title="icmp监控"></a>icmp监控</h4><h5 id="什么是ICMP？"><a href="#什么是ICMP？" class="headerlink" title="什么是ICMP？"></a>什么是ICMP？</h5><blockquote><p>互联网控制消息协议 (ICMP) 是一组通信规则，设备使用这些规则在网络中传达数据传输错误。在发送方和接收方之间的消息交换中，可能会出现某些意外错误。例如，消息可能太长，或者数据包可能无法按顺序到达，因此接收方无法汇编。在这种情况下，接收方使用 ICMP 向发送方发送错误消息并请求重新发送消息。</p></blockquote><p>通过icmp 这个指标的采集，我们可以确认到对方的线路是否有问题。这个也是监控里面比较重要的一个环节。我们要了解全国各地到我们机房的线路有哪条有问题我们总结了两种方案：</p><ul><li>全国各地各节点ping 和访问数据采集。这种类似听云运营商有提供这类服务，但是要花钱；</li></ul><ul><li>我现在用的方法就是：找各地测试ping 的节点，我们从机房主动ping 看是否到哪个线路有故障，下面我们开始。</li></ul><h5 id="1、修改prometheus配置文件，添加相关监控项"><a href="#1、修改prometheus配置文件，添加相关监控项" class="headerlink" title="1、修改prometheus配置文件，添加相关监控项"></a>1、修改prometheus配置文件，添加相关监控项</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim prometheus.yml</span></span><br><span class="line"><span class="attr">scrape_configs:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;icmp_ping&quot;</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">      <span class="attr">module:</span> [<span class="string">icmp</span>]  <span class="comment"># 使用icmp模块</span></span><br><span class="line">    <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">refresh_interval:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">files:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/usr/local/prometheus/conf/ping_status*.yml&quot;</span>  <span class="comment">#具体的配置文件</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">regex:</span> <span class="string">(.*)(:80)?</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">$&#123;1&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">regex:</span> <span class="string">(.*)</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">ping</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">$&#123;1&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> []</span><br><span class="line">      <span class="attr">regex:</span> <span class="string">.*</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.50</span><span class="string">:9115</span><span class="comment"># 本机ip</span></span><br></pre></td></tr></table></figure><h5 id="2、添加配置文件"><a href="#2、添加配置文件" class="headerlink" title="2、添加配置文件"></a>2、添加配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwd</span></span><br><span class="line">/usr/local/prometheus</span><br><span class="line"><span class="comment"># mkdir conf</span></span><br><span class="line"><span class="comment"># cd conf</span></span><br><span class="line"><span class="comment"># vim ping_status.yml</span></span><br><span class="line">- targets: [<span class="string">&#x27;220.181.38.150&#x27;</span>,<span class="string">&#x27;14.215.177.39&#x27;</span>,<span class="string">&#x27;180.101.50.242&#x27;</span>,<span class="string">&#x27;14.215.177.39&#x27;</span>,<span class="string">&#x27;180.101.49.11&#x27;</span>,<span class="string">&#x27;14.215.177.38&#x27;</span>,<span class="string">&#x27;14.215.177.38&#x27;</span>]</span><br><span class="line">  labels:</span><br><span class="line">    group: <span class="string">&#x27;一线城市-电信网络监控&#x27;</span></span><br><span class="line">- targets: [<span class="string">&#x27;112.80.248.75&#x27;</span>,<span class="string">&#x27;163.177.151.109&#x27;</span>,<span class="string">&#x27;61.135.169.125&#x27;</span>,<span class="string">&#x27;163.177.151.110&#x27;</span>,<span class="string">&#x27;180.101.49.11&#x27;</span>,<span class="string">&#x27;61.135.169.121&#x27;</span>,<span class="string">&#x27;180.101.49.11&#x27;</span>]</span><br><span class="line">  labels:</span><br><span class="line">    group: <span class="string">&#x27;一线城市-联通网络监控&#x27;</span></span><br><span class="line">- targets: [<span class="string">&#x27;183.232.231.172&#x27;</span>,<span class="string">&#x27;36.152.44.95&#x27;</span>,<span class="string">&#x27;182.61.200.6&#x27;</span>,<span class="string">&#x27;36.152.44.96&#x27;</span>,<span class="string">&#x27;220.181.38.149&#x27;</span>]</span><br><span class="line">  labels:</span><br><span class="line">    group: <span class="string">&#x27;一线城市-移动网络监控&#x27;</span> </span><br></pre></td></tr></table></figure><h5 id="3、重启服务"><a href="#3、重启服务" class="headerlink" title="3、重启服务"></a>3、重启服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart prometheus</span></span><br></pre></td></tr></table></figure><p>到prometheus的web界面查看</p><p><img src="https://djy.oldit.cn/article/blackbox1.webp"></p><h4 id="http相关指标监控"><a href="#http相关指标监控" class="headerlink" title="http相关指标监控"></a>http相关指标监控</h4><h5 id="1、修改prometheus配置文件，添加相关监控项-1"><a href="#1、修改prometheus配置文件，添加相关监控项-1" class="headerlink" title="1、修改prometheus配置文件，添加相关监控项"></a>1、修改prometheus配置文件，添加相关监控项</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;blackbox&quot;</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">      <span class="attr">module:</span> [<span class="string">http_2xx</span>]  <span class="comment">#使用http模块</span></span><br><span class="line">    <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">refresh_interval:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">files:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/usr/local/prometheus/conf/blackbox*.yml&quot;</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__address__</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__param_target</span>]</span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.50</span><span class="string">:9115</span><span class="comment"># 本机ip</span></span><br></pre></td></tr></table></figure><h5 id="2、添加配置文件-1"><a href="#2、添加配置文件-1" class="headerlink" title="2、添加配置文件"></a>2、添加配置文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwd</span></span><br><span class="line"><span class="string">/usr/local/prometheus/conf</span></span><br><span class="line"><span class="comment"># vim blackbox-dis.yml </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://www.baidu.com</span></span><br><span class="line">  <span class="comment"># 根据需要添加</span></span><br><span class="line"><span class="comment">#配置相关URL</span></span><br></pre></td></tr></table></figure><h5 id="3、重启服务-1"><a href="#3、重启服务-1" class="headerlink" title="3、重启服务"></a>3、重启服务</h5><p>到prometheus的web界面查看</p><p><img src="https://djy.oldit.cn/article/blackbox2.webp"></p><h3 id="Granfana配置"><a href="#Granfana配置" class="headerlink" title="Granfana配置"></a>Granfana配置</h3><p>找到仪表盘，导入9965模板</p><p><img src="https://djy.oldit.cn/article/blackbox3.webp"></p><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://djy.oldit.cn/article/prometheusio-logo.webp&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是白盒、黑盒？&quot;&gt;&lt;a href=&quot;#什么是白盒、黑盒？&quot; class=&quot;headerlink&quot; title=&quot;什么是</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Prometheus" scheme="http://hmiking.top/tags/Prometheus/"/>
    
  </entry>
  
  <entry>
    <title>jumpserver设置sftp默认路径</title>
    <link href="http://hmiking.top/2023/11/01/jumpserver%E8%AE%BE%E7%BD%AEsftp%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84/"/>
    <id>http://hmiking.top/2023/11/01/jumpserver%E8%AE%BE%E7%BD%AEsftp%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84/</id>
    <published>2023-11-01T03:30:00.000Z</published>
    <updated>2023-11-02T05:49:29.137Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jumpserver"><a href="#jumpserver" class="headerlink" title="jumpserver"></a>jumpserver</h3><p><a href="https://www.jumpserver.org/">官网</a></p><p>JumpServer 是广受欢迎的开源堡垒机，是符合 4A 规范的专业运维安全审计系统。JumpServer 帮助企业以更安全的方式管控和登录所有类型的资产，实现事前授权、事中监察、事后审计，满足等保合规要求。</p><p><img src="https://djy.oldit.cn/article/jumpserver.webp"></p><blockquote><p> 当我们通过jumpserver对服务器进行管理时，需要上传或下载服务器上的资源时，连接sftp默认的路径是&#x2F;tmp，会相对麻烦一些，需要把资源复制到&#x2F;tmp目录下，所以我们可以更换其它的默认路径。</p></blockquote><h3 id="修改过程"><a href="#修改过程" class="headerlink" title="修改过程"></a>修改过程</h3><h5 id="1、登录web端的jumpserver，找到平台列表，并选择Linux克隆"><a href="#1、登录web端的jumpserver，找到平台列表，并选择Linux克隆" class="headerlink" title="1、登录web端的jumpserver，找到平台列表，并选择Linux克隆"></a>1、登录web端的jumpserver，找到平台列表，并选择Linux克隆</h5><p><img src="https://djy.oldit.cn/article/jumpserver-1.webp"></p><h5 id="2、修改ssh的配置"><a href="#2、修改ssh的配置" class="headerlink" title="2、修改ssh的配置"></a>2、修改ssh的配置</h5><p><img src="https://djy.oldit.cn/article/jumpserver-2.webp"></p><h5 id="3、把sftp的默认路径改为-root"><a href="#3、把sftp的默认路径改为-root" class="headerlink" title="3、把sftp的默认路径改为&#x2F;root"></a>3、把sftp的默认路径改为&#x2F;root</h5><p><img src="https://djy.oldit.cn/article/jumpserver-3.webp"></p><h5 id="4-把原有的资产添加到新克隆的平台上"><a href="#4-把原有的资产添加到新克隆的平台上" class="headerlink" title="4.把原有的资产添加到新克隆的平台上"></a>4.把原有的资产添加到新克隆的平台上</h5><p><img src="https://djy.oldit.cn/article/jumpserver-4.webp"></p><h5 id="5、测试"><a href="#5、测试" class="headerlink" title="5、测试"></a>5、测试</h5><p><img src="https://djy.oldit.cn/article/jumpserver-5.webp"></p><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;jumpserver&quot;&gt;&lt;a href=&quot;#jumpserver&quot; class=&quot;headerlink&quot; title=&quot;jumpserver&quot;&gt;&lt;/a&gt;jumpserver&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.jumpserver.org/&quot;&gt;</summary>
      
    
    
    
    <category term="网安" scheme="http://hmiking.top/categories/%E7%BD%91%E5%AE%89/"/>
    
    
    <category term="Security" scheme="http://hmiking.top/tags/Security/"/>
    
    <category term="jumpserver" scheme="http://hmiking.top/tags/jumpserver/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus配置basic_auth</title>
    <link href="http://hmiking.top/2023/11/01/Prometheus%E9%85%8D%E7%BD%AEbasic_auth/"/>
    <id>http://hmiking.top/2023/11/01/Prometheus%E9%85%8D%E7%BD%AEbasic_auth/</id>
    <published>2023-11-01T01:50:58.000Z</published>
    <updated>2023-11-02T05:50:16.121Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、什么是Prometheus？"><a href="#一、什么是Prometheus？" class="headerlink" title="一、什么是Prometheus？"></a>一、什么是Prometheus？</h3><p><img src="https://djy.oldit.cn/article/prometheusio-logo.webp"></p><ol><li>Prometheus是一个开源的系统监控和报警框架，其本身也是一个时序列数据库（TSDB），它的设计灵感来源于Google的Borgmon，就像Kubernetes是基于Borg系统开源的。</li><li>Prometheus是由SoundCloud的Google前员工设计并开源的，官方网站：<a href="https://prometheus.io/">Prometheus - Monitoring system &amp; time series database</a> 。Prometheus于2016年加入云原生计算机基金会（Cloud Native Computing Foundation，简称CNCF），成为了受欢迎程度仅次于Kubernetes的开源项目。</li></ol><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><blockquote><p>prometheus部署完成后，是通过web进行访问的，但是大部分人部署完成后是没有进行加密的安全措施，导致在公网上可以给任何人都能访问，从而暴露出公司内部监控的所有Targets。</p></blockquote><p>在FOFA平台通过protocol&#x3D;”prometheus(http)”的语法进行搜索</p><p><img src="https://djy.oldit.cn/article/prometheus-1.webp"></p><p>可以发现很多都是没有进行加密的，导致Targets以及配置的泄露。</p><p><img src="https://djy.oldit.cn/article/prometheus-2.webp"></p><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>使用basic_auth加密</p><h3 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h3><h5 id="1、安装所需的工具包，并生成basic-auth密钥"><a href="#1、安装所需的工具包，并生成basic-auth密钥" class="headerlink" title="1、安装所需的工具包，并生成basic_auth密钥"></a>1、安装所需的工具包，并生成basic_auth密钥</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install httpd-tools -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># htpasswd -nBC 12 &#x27;&#x27; | tr -d &#x27;:\n&#x27;</span></span><br><span class="line"><span class="comment"># 密码设置的是123</span></span><br><span class="line">New password: </span><br><span class="line">Re-<span class="built_in">type</span> new password: </span><br><span class="line"><span class="comment"># 生成的密钥信息</span></span><br><span class="line">$2y$12<span class="variable">$p</span>/NIsggcAYK.qr89GgY6NeiSCROoX//nOELaBX3mQl5GnxtX7tNPS</span><br></pre></td></tr></table></figure><h5 id="2、在prometheus的文件夹下添加配置文件"><a href="#2、在prometheus的文件夹下添加配置文件" class="headerlink" title="2、在prometheus的文件夹下添加配置文件"></a>2、在prometheus的文件夹下添加配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line"><span class="comment"># vim web-config.yml </span></span><br><span class="line">basic_auth_users:</span><br><span class="line">    admin: $2y$12<span class="variable">$p</span>/NIsggcAYK.qr89GgY6NeiSCROoX//nOELaBX3mQl5GnxtX7tNPS</span><br></pre></td></tr></table></figure><h5 id="3、修改prometheus-yml配置文件"><a href="#3、修改prometheus-yml配置文件" class="headerlink" title="3、修改prometheus.yml配置文件"></a>3、修改prometheus.yml配置文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">    <span class="attr">basic_auth:</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">admin</span><span class="comment"># 账号为admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123</span><span class="comment"># 密码为123</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&quot;192.168.20.50:39090&quot;</span>]</span><br></pre></td></tr></table></figure><h5 id="4、修改prometheus的Service文件。-我这里使用的是二进制部署的prometheus"><a href="#4、修改prometheus的Service文件。-我这里使用的是二进制部署的prometheus" class="headerlink" title="4、修改prometheus的Service文件。[我这里使用的是二进制部署的prometheus]"></a>4、修改prometheus的Service文件。[我这里使用的是二进制部署的prometheus]</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/lib/systemd/system/prometheus.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Server</span><br><span class="line">Documentation=https://prometheus.io</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/prometheus/prometheus \</span><br><span class="line">--config.file=/usr/local/prometheus/prometheus.yml \</span><br><span class="line">--web.listen-address=:39090 \</span><br><span class="line">--web.config.file=/usr/local/prometheus/web-config.yml \</span><br><span class="line">--storage.tsdb.path=/usr/local/prometheus/data/ \</span><br><span class="line">--storage.tsdb.retention=15d \</span><br><span class="line">--web.enable-lifecycle</span><br><span class="line"></span><br><span class="line">ExecReload=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h5 id="5、重启服务"><a href="#5、重启服务" class="headerlink" title="5、重启服务"></a>5、重启服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart prometheus</span></span><br></pre></td></tr></table></figure><h3 id="三、检验"><a href="#三、检验" class="headerlink" title="三、检验"></a>三、检验</h3><p>在浏览器使用Ctrl+F5，强制刷新</p><p><img src="https://djy.oldit.cn/article/prometheus-3.webp"></p><p>此时需要刚刚设置的账号和密码才能登录进入prometheus的页面，防止了相关数据的泄露。</p><hr><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、什么是Prometheus？&quot;&gt;&lt;a href=&quot;#一、什么是Prometheus？&quot; class=&quot;headerlink&quot; title=&quot;一、什么是Prometheus？&quot;&gt;&lt;/a&gt;一、什么是Prometheus？&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Prometheus" scheme="http://hmiking.top/tags/Prometheus/"/>
    
    <category term="Security" scheme="http://hmiking.top/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>部署最新1.28.2-0版本kubernetes</title>
    <link href="http://hmiking.top/2023/10/20/kubernetes%E6%9C%80%E6%96%B0%E7%89%88%E9%83%A8%E7%BD%B2/"/>
    <id>http://hmiking.top/2023/10/20/kubernetes%E6%9C%80%E6%96%B0%E7%89%88%E9%83%A8%E7%BD%B2/</id>
    <published>2023-10-20T03:50:58.000Z</published>
    <updated>2023-10-20T05:37:13.532Z</updated>
    
    <content type="html"><![CDATA[<h2 id="部署最新1-28-2-0版本kubernetes"><a href="#部署最新1-28-2-0版本kubernetes" class="headerlink" title="部署最新1.28.2-0版本kubernetes"></a>部署最新1.28.2-0版本kubernetes</h2><p>kubernetes集群规划</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>备注</th></tr></thead><tbody><tr><td>k8s-master1</td><td>192.168.2.24</td><td>master1</td></tr><tr><td>k8s-master2</td><td>192.168.2.25</td><td>master2</td></tr><tr><td>k8s-master3</td><td>192.168.2.26</td><td>master3</td></tr><tr><td>k8s-master-lb</td><td>192.168.2.36</td><td>keepalived虚拟IP</td></tr><tr><td>k8s-node1</td><td>192.168.2.27</td><td>node1</td></tr><tr><td>k8s-node2</td><td>192.168.2.28</td><td>node2</td></tr></tbody></table><p>注：每台虚拟机配置 4G&#x2F;2处理器&#x2F;40G</p><h3 id="1、基本环境配置"><a href="#1、基本环境配置" class="headerlink" title="1、基本环境配置"></a>1、基本环境配置</h3><h4 id="所有节点"><a href="#所有节点" class="headerlink" title="所有节点"></a>所有节点</h4><p>修改主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname k8s-master01</span></span><br><span class="line"><span class="comment"># hostname</span></span><br><span class="line">k8s-master1</span><br></pre></td></tr></table></figure><p>修改&#x2F;etc&#x2F;hosts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/hosts</span></span><br><span class="line">192.168.2.24 k8s-master01</span><br><span class="line">192.168.2.25 k8s-master02</span><br><span class="line">192.168.2.26 k8s-master03</span><br><span class="line">192.168.2.36 k8s-master-lb</span><br><span class="line">192.168.2.27 k8s-node1</span><br><span class="line">192.168.2.28 k8s-node2</span><br></pre></td></tr></table></figure><p>配置yum源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">配置阿里云yum源:</span><br><span class="line"><span class="comment"># curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line"><span class="comment"># curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span></span><br><span class="line"><span class="comment"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line"><span class="comment"># yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line">&gt; [kubernetes]</span><br><span class="line">&gt; name=Kubernetes</span><br><span class="line">&gt; baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">&gt; enabled=1</span><br><span class="line">&gt; gpgcheck=0</span><br><span class="line">&gt; repo_gpgcheck=0</span><br><span class="line">&gt; gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">&gt; EOF</span><br><span class="line"><span class="comment"># sed -i -e &#x27;/mirrors.cloud.aliyuncs.com/d&#x27; -e &#x27;/mirrors.aliyuncs.com/d&#x27; /etc/yum.repos.d/CentOS-Base.repo</span></span><br></pre></td></tr></table></figure><p>安装所需的工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install wget jq psmisc vim net-tools telnet yum-utils device-mapper-persistent-data lvm2 git -y</span></span><br></pre></td></tr></table></figure><p>关闭selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&#x27;s#SELINUX=enforcing#SELINUX=disabled#g&#x27;</span> /etc/sysconfig/selinux</span><br><span class="line">sed -i <span class="string">&#x27;s#SELINUX=enforcing#SELINUX=disabled#g&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><p>关闭swap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line">sed -ri <span class="string">&#x27;/^[^#]*swap/s@^@#@&#x27;</span> /etc/fstab</span><br></pre></td></tr></table></figure><p>安装ntpdate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://mirrors.wlnmp.com/centos/wlnmp-release-centos.noarch.rpm</span><br><span class="line">yum install ntpdate -y</span><br></pre></td></tr></table></figure><p>同步时间，并加入到计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -l</span></span><br><span class="line">*/5 * * * * /usr/sbin/ntpdate time2.aliyun.com</span><br></pre></td></tr></table></figure><p>配置limit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ulimit -SHn 65535</span></span><br><span class="line"><span class="comment"># vim /etc/security/limits.conf</span></span><br><span class="line"><span class="comment"># 末尾添加</span></span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft <span class="built_in">nproc</span> 65535</span><br><span class="line">* hard <span class="built_in">nproc</span> 655350</span><br><span class="line">* soft memlock unlimited</span><br><span class="line">* hard memlock unlimited</span><br></pre></td></tr></table></figure><p>升级系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y --exclude=kernel*</span><br></pre></td></tr></table></figure><p>配置<code>master1</code>免密登录其它节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line"><span class="comment"># for i in k8s-master01 k8s-master02 k8s-master03 k8s-node1 k8s-node2;do ssh-copy-id -i .ssh/id_rsa.pub $i;done</span></span><br></pre></td></tr></table></figure><p>master1上 git 下来所需的源码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/H-MiKing/kubernetes.git</span><br></pre></td></tr></table></figure><h3 id="2、内核配置"><a href="#2、内核配置" class="headerlink" title="2、内核配置"></a>2、内核配置</h3><p><strong>centos7所需此操作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd kubernetes/ &amp;&amp; yum localinstall kernel-ml*</span></span><br><span class="line"><span class="comment"># grub2-set-default  0 &amp;&amp; grub2-mkconfig -o /etc/grub2.cfg</span></span><br><span class="line"><span class="comment"># grubby --args=&quot;user_namespace.enable=1&quot; --update-kernel=&quot;$(grubby --default-kernel)&quot;</span></span><br></pre></td></tr></table></figure><p>所有节点安装ipvsadm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install ipvsadm ipset sysstat conntrack libseccomp -y</span></span><br></pre></td></tr></table></figure><p>所有节点配置ipvs模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack</span><br></pre></td></tr></table></figure><p>修改ipvs.conf配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/modules-load.d/ipvs.conf</span></span><br><span class="line"><span class="comment"># 加入以下内容</span></span><br><span class="line">ip_vs</span><br><span class="line">ip_vs_lc</span><br><span class="line">ip_vs_wlc</span><br><span class="line">ip_vs_rr</span><br><span class="line">ip_vs_wrr</span><br><span class="line">ip_vs_lblc</span><br><span class="line">ip_vs_lblcr</span><br><span class="line">ip_vs_dh</span><br><span class="line">ip_vs_sh</span><br><span class="line">ip_vs_fo</span><br><span class="line">ip_vs_nq</span><br><span class="line">ip_vs_sed</span><br><span class="line">ip_vs_ftp</span><br><span class="line">ip_vs_sh</span><br><span class="line">nf_conntrack</span><br><span class="line">ip_tables</span><br><span class="line">ip_set</span><br><span class="line">xt_set</span><br><span class="line">ipt_set</span><br><span class="line">ipt_rpfilter</span><br><span class="line">ipt_REJECT</span><br><span class="line">ipip</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl enable --now systemd-modules-load.service （报错可继续下一步）</span></span><br></pre></td></tr></table></figure><p>所有节点开启必要的内核参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line">net.ipv4.conf.all.route_localnet = 1</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.file-max=52706963</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line">net.ipv4.tcp_keepalive_intvl =15</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_max_orphans = 327680</span><br><span class="line">net.ipv4.tcp_orphan_retries = 3</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.ip_conntrack_max = 65536</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># sysctl --system</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line">lsmod | grep --color=auto -e ip_vs -e nf_conntrack</span><br></pre></td></tr></table></figure><h3 id="3、高可用组件安装"><a href="#3、高可用组件安装" class="headerlink" title="3、高可用组件安装"></a>3、高可用组件安装</h3><p>所有master节点安装HAProxy和Keepalived</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install keepalived haproxy -y</span></span><br></pre></td></tr></table></figure><p>所有master节点配置HAProxy，HAProxy配置相同。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/haproxy/haproxy.cfg </span></span><br><span class="line">global</span><br><span class="line">  maxconn  2000</span><br><span class="line">  ulimit-n  16384</span><br><span class="line">  <span class="built_in">log</span>  127.0.0.1 local0 err</span><br><span class="line">  stats <span class="built_in">timeout</span> 30s</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  <span class="built_in">log</span> global</span><br><span class="line">  mode  http</span><br><span class="line">  option  httplog</span><br><span class="line">  <span class="built_in">timeout</span> connect 5000</span><br><span class="line">  <span class="built_in">timeout</span> client  50000</span><br><span class="line">  <span class="built_in">timeout</span> server  50000</span><br><span class="line">  <span class="built_in">timeout</span> http-request 15s</span><br><span class="line">  <span class="built_in">timeout</span> http-keep-alive 15s</span><br><span class="line"></span><br><span class="line">frontend monitor-in</span><br><span class="line">  <span class="built_in">bind</span> *:33305</span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  monitor-uri /monitor</span><br><span class="line"></span><br><span class="line">frontend k8s-master</span><br><span class="line">  <span class="built_in">bind</span> 0.0.0.0:16443</span><br><span class="line">  <span class="built_in">bind</span> 127.0.0.1:16443</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  tcp-request inspect-delay 5s</span><br><span class="line">  default_backend k8s-master</span><br><span class="line"></span><br><span class="line">backend k8s-master</span><br><span class="line">  mode tcp</span><br><span class="line">  option tcplog</span><br><span class="line">  option tcp-check</span><br><span class="line">  balance roundrobin</span><br><span class="line">  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100</span><br><span class="line">  server k8s-master01192.168.2.24:6443  check</span><br><span class="line">  server k8s-master02192.168.2.25:6443  check</span><br><span class="line">  server k8s-master03192.168.2.26:6443  check</span><br></pre></td></tr></table></figure><p>所有master节点配置Keepalived，每个master节点配置不一样。</p><p>master1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/keepalived/keepalived.conf </span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_apiserver.sh&quot;</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    mcast_src_ip 192.168.2.24</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 101</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.2.36</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">       chk_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>master2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/keepalived/keepalived.conf </span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_apiserver.sh&quot;</span></span><br><span class="line">   interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    mcast_src_ip 192.168.2.25</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.2.36</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">       chk_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>master3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/keepalived/keepalived.conf </span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id LVS_DEVEL</span><br><span class="line">script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_apiserver &#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_apiserver.sh&quot;</span></span><br><span class="line"> interval 5</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2  </span><br><span class="line">rise 1</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    mcast_src_ip 192.168.2.26</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 2</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass K8SHA_KA_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.2.36</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">       chk_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有master节点配置Keepalived健康检查文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/keepalived/check_apiserver.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">err=0</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 3)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    check_code=$(pgrep haproxy)</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$check_code</span> == <span class="string">&quot;&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        err=$(<span class="built_in">expr</span> <span class="variable">$err</span> + 1)</span><br><span class="line">        <span class="built_in">sleep</span> 1</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        err=0</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$err</span> != <span class="string">&quot;0&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;systemctl stop keepalived&quot;</span></span><br><span class="line">    /usr/bin/systemctl stop keepalived</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod +x /etc/keepalived/check_apiserver.sh</span></span><br></pre></td></tr></table></figure><p>启动haproxy和keepalived</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl daemon-reload</span></span><br><span class="line"><span class="comment"># systemctl enable --now haproxy</span></span><br><span class="line"><span class="comment"># systemctl enable --now keepalived</span></span><br></pre></td></tr></table></figure><p>查看master1的ip</p><p><img src="https://djy.oldit.cn/article/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231020103628.webp" alt="image-20231020103811623"></p><h3 id="4、安装k8s组件"><a href="#4、安装k8s组件" class="headerlink" title="4、安装k8s组件"></a>4、安装k8s组件</h3><p>所有节点安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce-20.10.* docker-ce-cli-20.10.* -y  </span><br></pre></td></tr></table></figure><p>配置及加载containerd所需的模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/containerd.conf</span></span><br><span class="line">overlay</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># modprobe -- overlay</span></span><br><span class="line"><span class="comment"># modprobe -- br_netfilter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables  = 1</span><br><span class="line">net.ipv4.ip_forward                 = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># sysctl --system</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># containerd config default | tee /etc/containerd/config.toml</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s/SystemdCgroup = false/SystemdCgroup = true/g&#x27; /etc/containerd/config.toml</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s/registry.k8s.io/registry.cn-hangzhou.aliyuncs.com\/google_containers/g&#x27; /etc/containerd/config.toml</span></span><br></pre></td></tr></table></figure><p>所有节点启动containerd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl daemon-reload</span></span><br><span class="line"><span class="comment"># systemctl enable --now containerd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat &gt; /etc/crictl.yaml &lt;&lt;EOF</span></span><br><span class="line">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line">image-endpoint: unix:///run/containerd/containerd.sock</span><br><span class="line"><span class="built_in">timeout</span>: 10</span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>所有节点安装1.28.2 kubeadm、kubelet、kubectl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install kubeadm-1.28.2-0 kubelet-1.28.2-0 kubectl-1.28.2-0 -y</span></span><br><span class="line"><span class="comment"># systemctl daemon-reload</span></span><br><span class="line"><span class="comment"># systemctl enable --now kubelet</span></span><br></pre></td></tr></table></figure><h3 id="5、集群初始化"><a href="#5、集群初始化" class="headerlink" title="5、集群初始化"></a>5、集群初始化</h3><p>master1操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd kubernetes/install/</span></span><br><span class="line"><span class="comment"># for i in k8s-master02 k8s-master03; do scp kubeadm-config.yaml $i:/root/; done</span></span><br></pre></td></tr></table></figure><p>在所有master节点提前下载好镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubeadm config images pull --config /root/kubeadm-config.yaml</span></span><br></pre></td></tr></table></figure><p>在master1节点初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config kubernetes/install/kubeadm-config  --upload-certs</span><br></pre></td></tr></table></figure><p>初始化完成后，记录好token值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now <span class="built_in">join</span> any number of the control-plane node running the following <span class="built_in">command</span> on each as root:</span><br><span class="line"></span><br><span class="line">  kubeadm <span class="built_in">join</span> 192.168.2.36:16443 --token 7t2weq.bjbawausm0jaxury \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:4a1a076d7184481e335d85b95855bee7b66c0e73fcf31d6b8e3095b12ac3fde9 \</span><br><span class="line">--control-plane --certificate-key 9ca8520c0ed2b1372ccedf6903fc5d94acce274a59d1dc37e54af7a6c014aa3a</span><br><span class="line"></span><br><span class="line">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span><br><span class="line">As a safeguard, uploaded-certs will be deleted <span class="keyword">in</span> two hours; If necessary, you can use</span><br><span class="line"><span class="string">&quot;kubeadm init phase upload-certs --upload-certs&quot;</span> to reload certs afterward.</span><br><span class="line"></span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.2.36:16443 --token 7t2weq.bjbawausm0jaxury \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:4a1a076d7184481e335d85b95855bee7b66c0e73fcf31d6b8e3095b12ac3fde9 </span><br></pre></td></tr></table></figure><p>master1配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="string">export KUBECONFIG=/etc/kubernetes/admin.conf</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">source</span> /root/.bashrc</span><br></pre></td></tr></table></figure><p>其它master节点加入集群（<code>根据刚刚初始化生成的token值里面的信息，有contol-plane的是master节点加入的命令</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> kubeadm <span class="built_in">join</span> 192.168.2.36:16443 --token 7t2weq.bjbawausm0jaxury \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:4a1a076d7184481e335d85b95855bee7b66c0e73fcf31d6b8e3095b12ac3fde9 \</span><br><span class="line">--control-plane --certificate-key 9ca8520c0ed2b1372ccedf6903fc5d94acce274a59d1dc37e54af7a6c014aa3a</span><br></pre></td></tr></table></figure><p>node节点加入集群（根据刚刚初始化生成的token值里面的信息）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.2.36:16443 --token 7t2weq.bjbawausm0jaxury \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:4a1a076d7184481e335d85b95855bee7b66c0e73fcf31d6b8e3095b12ac3fde9</span><br></pre></td></tr></table></figure><p><strong>查看集群状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get node</span></span><br><span class="line">[root@k8s-master1 install]<span class="comment"># kubectl get node</span></span><br><span class="line">NAME           STATUS   ROLES           AGE   VERSION</span><br><span class="line">k8s-master01   Ready    control-plane   19h   v1.28.2</span><br><span class="line">k8s-master2    Ready    control-plane   19h   v1.28.2</span><br><span class="line">k8s-master3    Ready    control-plane   19h   v1.28.2</span><br><span class="line">k8s-node1      Ready    &lt;none&gt;          19h   v1.28.2</span><br><span class="line">k8s-node2      Ready    &lt;none&gt;          19h   v1.28.2</span><br></pre></td></tr></table></figure><h3 id="6、其它组件安装"><a href="#6、其它组件安装" class="headerlink" title="6、其它组件安装"></a>6、其它组件安装</h3><p><strong>calico组件安装</strong></p><p>master1操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd kubernetes/install/</span></span><br><span class="line"><span class="comment"># kubectl apply -f calico/calico.yaml</span></span><br></pre></td></tr></table></figure><p>查看pod状态</p><p><img src="https://djy.oldit.cn/article/Snipaste_2023-10-20_11-17-42.webp" alt="Snipaste_2023-10-20_11-17-42"></p><p>查看node状态，全部为ready</p><p><img src="https://djy.oldit.cn/article/Snipaste_2023-10-20_11-20-34.webp"></p><p><strong>部署metrics</strong></p><p>master1操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp /etc/kubernetes/pki/front-proxy-ca.crt k8s-node1:/etc/kubernetes/pki/front-proxy-ca.crt</span></span><br><span class="line"><span class="comment"># scp /etc/kubernetes/pki/front-proxy-ca.crt k8s-node2:/etc/kubernetes/pki/front-proxy-ca.crt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd kubernetes/install/</span></span><br><span class="line"><span class="comment"># kubectl create -f kubeadm-metrics-server/metrics.yaml</span></span><br></pre></td></tr></table></figure><p>查看pod状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get po -n kube-system -l k8s-app=metrics-server</span></span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">metrics-server-8df99c47f-4srth   1/1     Running   0          19h</span><br></pre></td></tr></table></figure><p><strong>部署Dashboard</strong></p><p>master1操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd kubernetes/install/</span></span><br><span class="line"><span class="comment"># kubectl create -f dashboard/.</span></span><br></pre></td></tr></table></figure><p>查看dashboard的端口号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n kubernetes-dashboard kubernetes-dashboard </span></span><br><span class="line">[root@k8s-master1 ~]<span class="comment"># kubectl get svc -n kubernetes-dashboard kubernetes-dashboard </span></span><br><span class="line">NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">kubernetes-dashboard   NodePort   10.96.188.244   &lt;none&gt;        443:31156/TCP   19h</span><br></pre></td></tr></table></figure><p>通过node的ip加端口实现访问</p><p>例如192.168.2.36:31156</p><p><img src="https://djy.oldit.cn/article/Snipaste_2023-10-20_11-28-12.webp"></p><p><strong>创建登录token</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create token admin-user -n kube-system</span></span><br><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6InpXaXRGbmt5VTdVMlhoUlIxOS13Zk54MUszbmJKZUhnQ3hwUWllUnYtVEkifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk3Nzc2MjEwLCJpYXQiOjE2OTc3NzI2MTAsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZTViMTJiZGQtNGUwNy00MTkxLTliMWYtZTdjZjBlMGU3ZDY4In19LCJuYmYiOjE2OTc3NzI2MTAsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.Ik9aZm3SJsmGGSyKEHfDo2HzOwyQCmSFPcRV19OKE5BY8E9UPmFNxGhnAlub1Tn0SB3e4ngCILsUi_JAs5N8Iw5zfwJUlhcr5E4rYzZjvT_nYgYhxTrtLYB4FjRnhE_0oWCdzkNARpG8Eu-75RIe2grC4eh2W6PhAvj3-FmoOhZsbTcgd5SsCH4AWiQyCiNtaSovVW70lDKNYK3kQ-y3SIfxd0g-m0PV5k9iguV3iXJ7CCsC6Nk0Y7X7fuyJ5D-dY0vqyZRtl-4JDty3NZhhx_1iAA9cH8e-LIoz3kre98aypD3LauqhZDfCihHFaFC5Nufkuc8u9WG15FvF4GSxRg</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://djy.oldit.cn/article/Snipaste_2023-10-20_11-30-38.webp"></p><h5 id="来源：https-edu-51cto-com-lecturer-11062970-html"><a href="#来源：https-edu-51cto-com-lecturer-11062970-html" class="headerlink" title="来源：https://edu.51cto.com/lecturer/11062970.html"></a>来源：<a href="https://edu.51cto.com/lecturer/11062970.html">https://edu.51cto.com/lecturer/11062970.html</a></h5><h5 id="推荐课程：【2023】云原生Kubernetes全栈架构师：基于世界500强的k8s实战课程【共386课时】-K8s课程-51CTO学堂"><a href="#推荐课程：【2023】云原生Kubernetes全栈架构师：基于世界500强的k8s实战课程【共386课时】-K8s课程-51CTO学堂" class="headerlink" title="推荐课程：【2023】云原生Kubernetes全栈架构师：基于世界500强的k8s实战课程【共386课时】_K8s课程-51CTO学堂"></a>推荐课程：<a href="https://edu.51cto.com/course/23845.html">【2023】云原生Kubernetes全栈架构师：基于世界500强的k8s实战课程【共386课时】_K8s课程-51CTO学堂</a></h5><h5 id="笔记整理：H-MiKing"><a href="#笔记整理：H-MiKing" class="headerlink" title="笔记整理：H-MiKing"></a>笔记整理：H-MiKing</h5><h5 id="我的博客：老生杂谈的-IT-人-技术与人性的交响曲-oldit-cn"><a href="#我的博客：老生杂谈的-IT-人-技术与人性的交响曲-oldit-cn" class="headerlink" title="我的博客：老生杂谈的 IT 人 - 技术与人性的交响曲 (oldit.cn)"></a>我的博客：<a href="https://www.oldit.cn/">老生杂谈的 IT 人 - 技术与人性的交响曲 (oldit.cn)</a></h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;部署最新1-28-2-0版本kubernetes&quot;&gt;&lt;a href=&quot;#部署最新1-28-2-0版本kubernetes&quot; class=&quot;headerlink&quot; title=&quot;部署最新1.28.2-0版本kubernetes&quot;&gt;&lt;/a&gt;部署最新1.28.2-0版本</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="kubernetes" scheme="http://hmiking.top/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络原理(自考)</title>
    <link href="http://hmiking.top/2023/10/10/04741%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86(%E8%87%AA%E8%80%83)/"/>
    <id>http://hmiking.top/2023/10/10/04741%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86(%E8%87%AA%E8%80%83)/</id>
    <published>2023-10-10T07:47:58.000Z</published>
    <updated>2023-11-16T09:08:28.982Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章-计算机网络概述"><a href="#第一章-计算机网络概述" class="headerlink" title="第一章 计算机网络概述"></a>第一章 计算机网络概述</h2><h3 id="1-1-计算机网络的概念"><a href="#1-1-计算机网络的概念" class="headerlink" title="1.1 计算机网络的概念"></a>1.1 计算机网络的概念</h3><p>1、计算机网络的定义<br>计算机网络是互连的、自治的计算机的集合。</p><p>2、协议的定义<br>协议是网络通信实体之间在数据交换过程中需要遵循的规则或约定，是计算机网络有序运行的重要保证。</p><p>3、协议的3个要素</p><blockquote><p>(1)语法：定义实体之间交换信息的格式与结构，或者定义实体（比如硬件设备）之间传输信号的电平等。<br>(2)语义：定义实体之间交换的信息中需要发送（或包含）哪些控制信息，这些信息的具体含义，以及针对不同含义的控制信息，接收信息端应如何响应。<br>(3)时序：定义实体之间交换信息的顺序以及如何匹配或适应彼此的速度。</p></blockquote><p>4、计算机网络的功能</p><blockquote><p>(1)硬件资源共享。<br>(2)软件资源共享。<br>(3)信息资源共享。</p></blockquote><p>5、计算机网络的分类</p><blockquote><p>(1)按覆盖范围分类：个域网、局域网、城域网、广域网。<br>(2)按拓扑结构分类(6类)：星形拓扑结构、总线型拓扑结构、环形拓扑结构、网状拓扑结构、树形拓扑结构、混合拓扑结构。<br>(3)按交换方式分类：电路交换网络、报文交换网络、分组交换网络。<br>(4)按网络用户属性分类：公用网、专用网。</p></blockquote><h3 id="1-2-计算机网络结构"><a href="#1-2-计算机网络结构" class="headerlink" title="1.2 计算机网络结构"></a>1.2 计算机网络结构</h3><p>1、网络边缘<br>连接到网络上的所有端系统构成了网络边缘。</p><p>2、接入网络<br>常见的接入网络技术包括：电话拨号接入、非对称数字用户线路ADSL、混合光纤同轴电缆HFC接入网络、局域网、移动接入网络。</p><p>3、网络核心<br>网络核心是由通信链路互连的分组交换设备构成的网络，作用是实现网络边缘中主机之间的数据中继与转发。</p><h3 id="1-3-数据交换技术"><a href="#1-3-数据交换技术" class="headerlink" title="1.3 数据交换技术"></a>1.3 数据交换技术</h3><p>一、数据交换的概念<br>(1)数据交换是实现在大规模网络核心上进行数据传输的技术基础。<br>(2)常见的数据交换技术包括：电路交换、报文交换、分组交换。</p><p>二、电路交换<br>利用电路交换进行通信需要3个阶段：建立电路、传输数据、拆除电路。</p><p>三、报文交换<br>报文交换也称为消息交换，其工作过程为：发送方把要发送的信息附加上发送&#x2F;接收主机的地址及其他控制信息，构成一个完整的报文。然后以报文为单位在交换网络的各结点之间以存储-转发的方式传送，直至送达目的主机。</p><p>四、分组交换</p><ol><li>分组交换基本原理<br>分组交换是目前计算机网络广泛采用的技术。分组交换需要将待传输数据（即报文）分割成较小的数据块，每个数据块附加上地址、序号等控制信息构成数据分组（packet)，每个分组独立传输到目的地，目的地将收到的分组重新组装，还原为报文。分组传输过程通常也采用存储-转发交换方式。</li><li>分组交换的优点<br>(1)交换设备存储容量要求低。<br>(2)交换速度快。<br>(3)可靠传输效率高。<br>(4)更加公平。</li></ol><h3 id="1-4-计算机网络性能"><a href="#1-4-计算机网络性能" class="headerlink" title="1.4 计算机网络性能"></a>1.4 计算机网络性能</h3><p>一、速率与带宽<br>(1)速率是指网络单位时间内传送的数据量，用以描述网络传输数据的快慢，也称为数据传输速率或数据速率。速率的基本单位是bit&#x2F;s(位每秒）。<br>(2)一条链路或信道能够不失真地传播电磁信号的最高频率与最低频率之差，称为信道的带宽，单位是Hz。</p><p>二、时延<br>(1)时延是指数据从网络中的一个结点（主机或交换设备等）到达另一结点所需要的时间。<br>(2)分组的每跳传输过程主要产生4类时间延迟：结点处理时延、排队时延、传输时延和传播时延。</p><p>三、时延带宽积<br>一段物理链路的传播时延与链路带宽的乘积，称为时延带宽积。</p><p>四、丢包率<br>丢包率常被用于评价和衡量网络性能的指标，在很大程度上可以反映网络的拥塞程度，因为引发网络丢包的主要因素是网络拥塞。</p><p>五、吞吐量<br>吞吐量表示在单位时间内源主机通过网络向目的主机实际送达的数据量，单位为bit&#x2F;s或B&#x2F;s(字节每秒）,记为Thr。</p><h3 id="1-5-计算机网络体系结构"><a href="#1-5-计算机网络体系结构" class="headerlink" title="1.5 计算机网络体系结构"></a>1.5 计算机网络体系结构</h3><p>一、计算机网络分层体系结构<br>计算机网络体系结构：计算机网络所划分的层次以及各层协议的集合。</p><p>二、OSI参考模型</p><ol><li><p>OSI参考模型</p><blockquote><p>①物理层。物理层的主要功能是在传输介质上实现无结构比特流传输。物理层的另一项主要任务是规定数据终端设备（DTE)与数据通信设备(DCE)之间接口的相关特性，主要包括机械、电子、功能和规程4个方面的特性。<br>②数据链路层。数据链路层的主要功能是实现在相邻结点之间数据可靠而有效的传输。数据链路层还可以实现相邻结点间通信的流量控制。<br>③网络层。网络层解决的核心问题是如何将分组通过交换网络传送至目的主机，因此，网络层的主要功能是数据转发与路由。<br>④传输层。传输层的功能主要包括复用&#x2F;分解（区分发送和接收主机上的进程）、端到端的可靠数据传输、连接控制、流量控制和拥塞控制机制等。<br>⑤会话层。会话层的主要功能是在建立会话时核实双方身份是否有权参加会话；确定双方支付通信费用；双方在各种选择功能方面取得一致；在会话建立以后，需要对进程间的对话进行管理与控制。<br>⑥表示层。表示层主要用于处理应用实体间交换数据的语法，其目的是解决格式和数据表示的差别，从而为应用层提供一个一致的数据格式，使字符、格式等有差异的设备之间相互通信。除此之外，表示层还可以实现文本压缩&#x2F;解压缩、数据加密&#x2F;解密、字符编码的转换等功能。<br>⑦应用层。应用层为用户提供了一个使用网络应用的“接口”。</p></blockquote></li><li><p>OSI参考模型有关术语<br>  ①在层的实体之间传送的比特组称为数据单元。<br>  ②相邻层间的服务是通过其接口面上的服务访问点（SAP)进行的，N层SAP就是（N+1)层可以访问N层的地方。<br>  ③第N层向（N+1)层提供服务，或第（N+1)层请求N层提供服务，都是用一组原语描述的。<br>  OSI参考模型的原语有4类：请求，指示，响应，证实。<br>  ④在分层的体系结构中，下层向上层提供服务通常有两种形式：面向连接的服务和无连接的服务。</p></li></ol><p>   三、TCP&#x2F;IP参考模型<br>   TCP&#x2F;IP参考模型分为四个层次，从上到下为：应用层、传输层、网络互联层、网络接口层。其中应用层与OSI应用层相对应，传输层与OSI传输层相对应，网络互联层与OSI网络层相对应，网络接口层与OSI数据链路层及物理层相对应。在TCP&#x2F;IP参考模型中，对OSI表示层、会话层没有对应的协议。</p><h3 id="1-6-计算机网络与因特网发展简史"><a href="#1-6-计算机网络与因特网发展简史" class="headerlink" title="1.6 计算机网络与因特网发展简史"></a>1.6 计算机网络与因特网发展简史</h3><p>(1)ARPAnet是第一个分组交换计算机网络，也是当今因特网的祖先。<br>(2)1972年，ARPAnet开发了第一个主机到主机的协议，网络控制协议(NCP)。RayTomlinson为ARPAnet编写了第一个电子邮件程序。<br>(3)20世纪70年代早期与中期，除了ARPAnet之外，还陆续诞生了许多其他分组交换网络，例如ALOHAnet、Telenet等。NormanAbramson在研制分组无线电网络ALOHAnet时，设计了第一个多路访问控制协议ALOHA。Met-calfe与Boggs研制了基于有线共享广播链路的以太网，奠定了当今局域网技术的基础。到20世纪70年代末期，ARPAnet已连接大约200台主机，公共因特网已现雏形。<br>(4)到20世纪80年代，公共因特网上连接的主机数量达到100000台。1986年，创建了NSFNET。在此期间，TCP&#x2F;IP协议簇逐渐成熟，并于1983年1月1日正式部署，替代了NCP。<br>(5)20世纪90年代，万维网应用诞生。<br>(6)从2000年开始，因特网进入爆发式发展时期。</p><h2 id="第二章-网络应用"><a href="#第二章-网络应用" class="headerlink" title="第二章 网络应用"></a>第二章 网络应用</h2><h3 id="2-1-网络应用体系结构"><a href="#2-1-网络应用体系结构" class="headerlink" title="2.1 网络应用体系结构"></a>2.1 网络应用体系结构</h3><p>1、网络应用体系结构与分类。</p><p>计算机网络应用是运行在计算机网络环境下的分布式软件系统，计算机网络应用从体系结构角度可以分为客户&#x2F;服务器（C&#x2F;S)结构、纯P2P(PeertoPeer)结构和混合结构3种类型。</p><p>2、C&#x2F;S网络应用、P2P网络应用以反混合网络应用的特点、区别与联系。</p><h3 id="2-2-网络应用通信基本原理"><a href="#2-2-网络应用通信基本原理" class="headerlink" title="2.2 网络应用通信基本原理"></a>2.2 网络应用通信基本原理</h3><p>(1)网络应用的基本通信方式是C&#x2F;S通信。<br>(2)套接字（Socket)是典型的网络应用编程接口。</p><h3 id="2-3-域名系统（DNS）"><a href="#2-3-域名系统（DNS）" class="headerlink" title="2.3 域名系统（DNS）"></a>2.3 域名系统（DNS）</h3><p>一、层次化域名空间<br>(1)国家顶级域名nTLD：如cn表示中国，us表示美国，uk表示英国等。<br>(2)通用顶级域名gTLD：最早的顶级域名是com(公司和企业）、net(网络服务机构）、org(非盈利性组织）、edu(专用的教育机构）、gov(专用的政府部门）、mil(专用的军事部门）、int(国际组织）。<br>(3)基础结构域名：这种顶级域名只有一个，即arpa，用于反向域名解析，因此又称为反向域名。<br>二、域名服务器<br>域名服务器根据其主要保存的域名信息以及在域名解析过程中的作用等，可以分为根域名服务器、顶级域名服务器、权威域名服务器，中间域名服务器4类。<br>三、域名解析过程<br>域名解析分为递归解析和迭代解析。提供递归查询服务的域名服务器，可以代替查询主机或其他域名服务器，进行进一步的域名查询，并将最终解析结果发送给查询主机或服务器；提供迭代查询的服务器，不会代替查询主机或其他域名服务器，进行进一步的查询，只是将下一步要查询的服务器告知查询主机或服务器。</p><h3 id="2-4-万维网应用"><a href="#2-4-万维网应用" class="headerlink" title="2.4 万维网应用"></a>2.4 万维网应用</h3><p>一、万维网应用结构<br>1.Web应用<br>Web应用是典型的客户&#x2F;服务器网络应用，客户与服务器之间的交互基于应用层协议HTTP。Web应用主要包括Web服务器、浏览器与超文本传输协议（HTTP)等部分。<br>(1)浏览器就是Web应用的客户端软件，即Web应用的客户代理，运行在用户计算机上。<br>(2)Web服务器是Web应用的服务器软件，存储并管理供用户请求浏览的Web页面或称为Web文档。浏览器向Web服务器发送HTTP请求报文，服务器向浏览器送回HTTP响应报文，其中包含客户所要的Web页，浏览器对其中的Web页进行解析并显示。<br>2.URL<br>每个URL地址主要由两部分组成：存放对象的服务器主机域名和对象的路径名。</p><p>二、HTTP<br>(1)HTTP是Web应用的应用层协议，定义浏览器如何向Web服务器发送请求以及Web服务器如何向浏览器进行响应。<br>(2)HTTP报文由4部分组成：起始行、首部行、空白行和实体主体。</p><p>三、Cookie</p><blockquote><p>(1)Cookie中文名称为小型文本文件，指某些网站为了辨别用户身份、进行会话跟踪而存储在用户本地终端上的数据。<br>(2)Cookie文件可以保存在客户端计算机的硬盘中，也可以保存在客户端计算机的内存中。保存在硬盘中的Cookie通常被称为永久Cookie，Cookie的有效周期可以进行设置，关闭浏览器不影响Cookie的有效周期。保存在内存中的Cookie被称为会话Cookie，表示这个Cookie的有效周期是浏览器的会话期间，只要关闭浏览器窗口，Cookie就消失。<br>(3)Web网站利用Cookie技术进行用户跟踪，最常见的用途包括以下几点：<br>①网站可以利用Cookie的ID来准确统计网站的实际访问人数、新访问者和重复访问者的人数对比、访问者的访问频率等数据。<br>②网站可以利用Cookie限制某些特定用户的访问。<br>③网站可以存储用户访问过程中的操作习惯和偏好，对不同的用户呈现不同的显示内容、颜色、布局等界面元素，有针对性地为用户提供服务，提升用户体验感。<br>④记录用户登录网站使用的用户名、密码等信息，当用户多次登录时，无须每次都从键盘输入这些烦琐的字符和数字。<br>⑤电子商务网站利用Cookie可以实现“购物车”功能。对于同一个ID的用户，网站可以跟踪其向“购物车”中添加的不同商品，每个商品都会和ID一起存储在网站数据库中。当用户选择结账时，网站通过对数据库中该ID的检索，找到用户购买的所有商品，一起实现结账功能。</p></blockquote><h3 id="2-5-Internet电子邮件"><a href="#2-5-Internet电子邮件" class="headerlink" title="2.5 Internet电子邮件"></a>2.5 Internet电子邮件</h3><p>一、电子邮件系统结构<br>电子邮件系统主要包括邮件服务器、简单邮件传输协议（SMTP)、用户代理和邮件读取协议等。</p><p>二、SMTP<br><code>端口：TCP 25</code><br>SMTP是Internet电子邮件中核心应用层协议，实现邮件服务器之间或用户代理到邮件服务器之间的邮件传输。</p><p>三、电子邮件格式与MIME<br>(1)一份邮件包括首部、空白行和主体3部分。<br>(2)MIME主要包括以下内容。<br>①5个MIME邮件首部字段，可包含在邮件首部中。<br>②定义了多种邮件内容的格式，对多媒体电子邮件的表示方法进行了标准化。<br>③定义了邮件传送编码，可对任何内容格式进行转换，从而适合通过SMTP进行传送。</p><p>四、邮件读取协议<br>1.POP3(邮件读取协议)<br><code>端口：TCP 110</code><br>POP3协议与POP3服务器进行交互，实现对邮箱的操作。POP3协议交互过程可以分为3个阶段：授权（Authorization)、事务处理和更新。在授权阶段，用户代理需要向服务器发送用户名和口令（以明文形式，即非加密），服务器鉴别用户身份，授权用户访问邮箱。在事务处理阶段，用户代理向服务器发送POP3命令，实现邮件读取、为邮件做删除标记、取消邮件删除标记以及获取邮件的统计信息等操作。在更新阶段，客户发出了quit命令，结束POP3会话，服务器删除那些被标记为删除的邮件。</p><p>2.IMAP<br><code>端口：TCP 143</code><br>通过IMAP，收件人可以在服务器上创建新的文件夹，并可以对邮件进行移动、查询、阅读、删除等操作。</p><p>3.HTTP<br><code>端口：80</code><br>当使用基于Web的邮件时，HTTP便被用于邮件的读取，此时HTTP也作为邮件读取协议使用。</p><h3 id="2-6-FTP"><a href="#2-6-FTP" class="headerlink" title="2.6 FTP"></a>2.6 FTP</h3><p><code>端口：TCP 21(控制端口号) 和 TCP 20(数据传输端口号)</code><br>文件传送协议（FTP)是在互联网的两个主机间实现文件互传的网络应用，其应用层协议也称为FTP。FTP可以减少或消除在不同操作系统下处理文件的不兼容性，屏蔽各计算机系统的细节，适合在网络中任意异构计算机之间传送文件。</p><h3 id="2-7-P2P应用"><a href="#2-7-P2P应用" class="headerlink" title="2.7 P2P应用"></a>2.7 P2P应用</h3><p>P2P体系结构的网络应用对服务器依赖很小，甚至对于纯P2P来说，整个应用几乎不依赖某个集中服务器，应用都是动态地在对等方之间进行。</p><h3 id="2-8-Socket编程技术"><a href="#2-8-Socket编程技术" class="headerlink" title="2.8 Socket编程技术"></a>2.8 Socket编程技术</h3><p>网络应用进程可以创建3种类型的Socket：数据报类型套接字SOCK_DGRAM、流式套接字SOCK_STREAM和原始套接字SOCK_RAW。其中，SOCK_DGRAM面向传输层UDP接口，SOCK_STREAM面向传输层TCP接口，SOCK_RAW面向网络层协议接口。</p><h2 id="第三章-传输层"><a href="#第三章-传输层" class="headerlink" title="第三章 传输层"></a>第三章 传输层</h2><h3 id="3-1-传输层基本服务"><a href="#3-1-传输层基本服务" class="headerlink" title="3.1 传输层基本服务"></a>3.1 传输层基本服务</h3><p>1、传输层的功能<br>(1)传输层的核心任务是为应用进程之间提供端到端的逻辑通信服务。<br>(2)传输层主要实现如下功能：<br>①传输层寻址；<br>②对应用层报文进行分段和重组；<br>③对报文进行差错检测；<br>④实现进程间的端到端可靠数据传输控制；<br>⑤面向应用层实现复用与分解；<br>⑥实现端到端的流量控制；<br>⑦拥塞控制。</p><p>2、传输层寻址与端口<br>(1) <code>0~1023的端口号为熟知端口号。</code><br>(2)<code>1024~49151的端口号为登记端口号</code>，为没有熟知端口号的应用程序(服务器）使用，必须在互联网数字分配结构（IANA)登记，以防止重复。<br>(3)<code>49152~65535为客户端口号或短暂端口号</code>，留给客户进程或用户开发的非标准服务器暂时使用。另外，端口号只本地有效，只是标识了本计算机应用层中的各应用进程在与传输层交互时的层间接口。</p><p>3、无连接服务与面向连接服务<br>传输层提供的服务可以分为无连接服务和面向连接服务两大类。</p><h3 id="3-2-传输层的复用与分解"><a href="#3-2-传输层的复用与分解" class="headerlink" title="3.2 传输层的复用与分解"></a>3.2 传输层的复用与分解</h3><p>(1)传输层协议的重要基本功能：复用与分解。<br>(2)UDP依据二元组&lt;目的IP地址，目的端口号&gt;来唯一标识一个UDP套接字；TCP依据四元组&lt;源IP地址，源端口号，目的IP地址，目的端口号&gt;来唯一标识一个TCP套接字，即标识一条TCP连接。</p><h3 id="3-3-停-等协议与滑动窗口协议"><a href="#3-3-停-等协议与滑动窗口协议" class="headerlink" title="3.3 停-等协议与滑动窗口协议"></a>3.3 停-等协议与滑动窗口协议</h3><p>(1)停-等协议的基本工作过程是：发送方发送经过差错编码和编号的报文段，等待接收方的确认；接收方如果正确接收报文段，即差错检测无误且序号正确，则接收报文段，并向发送方发送ACK,否则丢弃报文段，并向发送方发送NAK；发送方如果收到ACK，则继续发送后续报文段，否则重发刚刚发送的报文段。<br>(2)GBN协议的发送端缓存能力较高，可以在未得到确认前连续发送多个分组，因此，GBN协议的发送窗口Ws≥1。GBN接收端缓存能力很低，只能接收1个按序到达的分组，不能缓存未按序到达的分组，通常称GBN协议的接收端无缓存能力。因此，GBN协议的接收窗口Wr&#x3D;1。<br>(3)SR协议是通过让发送方仅重传那些未被接收方确认（出错或丢失）的分组，而避免了不必要的重传。为此，SR协议的接收方是对每个正确接收的分组进行逐个确认。</p><h3 id="3-4-用户数据报协议（UDP）"><a href="#3-4-用户数据报协议（UDP）" class="headerlink" title="3.4 用户数据报协议（UDP）"></a>3.4 用户数据报协议（UDP）</h3><p>(1)用户数据报协议UDP是Internet传输层协议，提供无连接、不可靠、数据报尽力传输服务。<br>(2)参与UDP校验和计算的内容包括3部分：UDP伪首部、UDP首部和应用层数据。</p><h3 id="3-5-传输控制协议（TCP）"><a href="#3-5-传输控制协议（TCP）" class="headerlink" title="3.5 传输控制协议（TCP）"></a>3.5 传输控制协议（TCP）</h3><p>(1)传输控制协议（TCP)是Internet一个重要的传输层协议。TCP提供面向连接、可靠、有序、字节流传输服务。<br>(2)TCP报文段由首部字段和一个数据字段组成。<br>(3)TCP连接管理包括连接建立与连接拆除。TCP连接建立通过“三次握手”过程。<br>(4)TCP的可靠数据传输实现机制包括差错编码、确认、序号、重传、计时器等。TCP的可靠数据传输是基于滑动窗口协议。</p><h2 id="第四章-网络层"><a href="#第四章-网络层" class="headerlink" title="第四章 网络层"></a>第四章 网络层</h2><h3 id="4-1-网络层服务"><a href="#4-1-网络层服务" class="headerlink" title="4.1 网络层服务"></a>4.1 网络层服务</h3><p>1、网络层需要实现两项重要功能：</p><p>① 转发（forwarding）：当通过一条输入链路接收到一个分组后， 路由器需要决策通过哪条输出链路讲分组发送出去，并讲分组从输入接口转移到输出接口。</p><p>② 路由选择（routing）：当一个分组到达路由器时，路由器会以该分组的网络层首部地址字段的值（比如目的IP地址）作为键，去转发表中查询相应的表项，从而获知该分组应转发到哪条链路上。</p><h3 id="4-2-数据报网络与虚电路网络"><a href="#4-2-数据报网络与虚电路网络" class="headerlink" title="4.2 数据报网络与虚电路网络"></a>4.2 数据报网络与虚电路网络</h3><p>1、虚电路网络特点;</p><p>虚电路网络在网络层提供面向连接的分组交换服务</p><p>① 建立一条网络层逻辑连接</p><p>② 不需要为每条虚电路分配独享资源（区别与电路交换）</p><p>③ 根据虚电路号沿虚电路路径按序发送分组</p><p>2、数据报网络特点：</p><p>① 无连接</p><p>② 每个分组作为一个独立的数据报进行传送，路径也可能不同</p><p>③ 分组可能出现乱序和丢失</p><h3 id="4-3-网络互连与网络互连设备"><a href="#4-3-网络互连与网络互连设备" class="headerlink" title="4.3 网络互连与网络互连设备"></a>4.3 网络互连与网络互连设备</h3><p>1、异构网络：</p><p>两个网络的通信技术和运行的协议不同</p><p>异构网络互联的基本策略：</p><p>① 协议转换</p><p>② 构建虚拟互联网络<br><img src="http://djy.oldit.cn/article/5dfdc113ccc7469c836b811e0251d468.webp" alt="在这里插入图片描述"></p><p>2、路由器：</p><p><img src="http://djy.oldit.cn/article/f1ea909650a948ad812ca9ea5cbf1216.webp"><br>3、路由器交换结构：<br><img src="http://djy.oldit.cn/article/383165223482456a973566410b0c5176.webp"></p><p>4、路由处理器：</p><p>执行路由器的各种指令，包括路由协议的运行、路由计算以及路由表的更新维护等。</p><h3 id="4-4-网络层拥塞控制"><a href="#4-4-网络层拥塞控制" class="headerlink" title="4.4 网络层拥塞控制"></a>4.4 网络层拥塞控制</h3><p>1、拥塞：</p><p>一种持续过载的网络状态，此时用户对网络资源（包括链路带宽、存储空间和处理器处理能力等）的总需求超过了网络固有的容量。</p><p>原因：</p><blockquote><ol><li>缓冲区容量有限</li><li>传输线路的带宽有限</li><li>网络结点的处理能力有限</li><li>网络中某些部分发生了故障</li></ol></blockquote><p>2、流量感知路由：</p><p>根据网络负载动态调整，将网络流量引导到不同的链路上，均衡网络负载，从而延缓或避免拥塞发生。</p><p>解决网络负载的震荡现象：</p><blockquote><ol><li>多路径路由</li><li>缓慢转移流量至另一链路</li></ol></blockquote><p>3、准入控制：</p><p>是一种广泛应用于虚电路网络的拥塞预防技术。</p><p>基本思想：</p><blockquote><p>对新建虚电路进行审核，如果新建立的虚电路会导致网络变得拥塞，那么网络拒绝建立该新虚电路。</p><p>拥塞状况的量化：基于平均流量和瞬时流量。</p></blockquote><p>4、流量调节：</p><p>① 感知拥塞</p><p>② 处理拥塞：将拥塞信息通知到其他上游节点。</p><blockquote><p>处理方法：</p><ol><li>抑制分组：给拥塞数据报的源主机返回一个抑制分组</li><li>背压：让抑制分组在从拥塞结点到源结点的路径上的每一跳，都发挥抑制作用</li></ol></blockquote><p>5、负载脱落</p><p>路由器主动丢弃某些数据报</p><blockquote><p>如何选择要丢弃的数据报：</p><ol><li>丢弃新分组：如GBN</li><li>丢弃老分组：如实时视频流</li></ol></blockquote><h3 id="4-5-Internet网络层"><a href="#4-5-Internet网络层" class="headerlink" title="4.5 Internet网络层"></a>4.5 Internet网络层</h3><p>1、IPv4协议：</p><p>IP数据报格式：</p><p><img src="http://djy.oldit.cn/article/a30988741ac142a09a5cd5572a5f96d3.webp"></p><p>IP数据报分片：</p><blockquote><p>标识：判断这些分片是否属于同一个IP数据报</p><p>标志：判断是否为最后一个分片</p><p>片偏移：判断各分片的先后顺序 </p></blockquote><p><img src="http://djy.oldit.cn/article/1278d6c9d42d4112a80d441866a778bd.webp" alt="在这里插入图片描述"></p><p>2、IPv4编址：</p><p>IPv4地址长度：32位二进制</p><p>分类地址：</p><p><img src="http://djy.oldit.cn/article/2b8863ea92214c2e975255afb8688f51.webp"></p><p>子网划分：</p><blockquote><p>将一个较大的子网划分为多个较小子网的过程。</p><p>较大子网具有较短的网络前缀，较小子网具有稍长的前缀。</p></blockquote><p><code>个人的计算方法，使用的是块计算，仅凭自己理解。</code><br><img src="http://djy.oldit.cn/article/f12652bee07d48738d5c3b8242bf7a39.webp" alt="在这里插入图片描述"></p><p>超网：</p><blockquote><p>将具有较长前缀的相对较小的子网合并为一个具有稍短前缀的相对较大的子网。</p></blockquote><p>子网掩码：</p><blockquote><p>用来定义一个子网的网络前缀长度</p></blockquote><p>分组转发：</p><blockquote><p>查找路由转发表</p><p>最长前缀匹配</p></blockquote><p><img src="http://djy.oldit.cn/article/c30d5c318420475c8b65e58b2331d5b2.webp"></p><p>路由聚合：将相同路由的连续子网合并</p><p>3、动态主机配置协议</p><p>DHCP：为网络内的主机提供动态IP地址分配服务。</p><p><img src="http://djy.oldit.cn/article/4ac24bdee783483c875ebcf57f471bd5.webp"></p><p>4、网络地址转换：</p><p>网络地址转换NAT——使用私有地址访问互联网</p><blockquote><ol><li>从内网进入互联网的IP数据报：将其源IP地址替换为NAT服务器拥有的合法公共IP地址，同时替换端口号，并将替换关系记录到NAT转换表中；</li><li>从互联网返回的IP数据报：依据其目的IP地址与目的端口号检索NAT转换表，得到内部私有IP地址与端口号，替换目的IP地址和目的端口号，然后将IP数据报转发到内部网络。</li></ol></blockquote><p>5、ICMP</p><p>互联网控制报文协议（ICMP）：</p><p>在主机或路由器间，实现差错信息报告。</p><p>ICMP差错报告报文共有5种：终点不可达、源点抑制、时间超时、参数问题和路由重定向等。</p><p>ICMP询问报文：回声（echo）请求&#x2F;应答、时间戳（timestamp）请求&#x2F;应答</p><p>6、IPv6</p><p>① 解决IPv4地址耗尽的问题</p><p>② IPv6报文首部长度固定40字节</p><p>③ IPv6地址长度128位</p><p>④ IPv4到IPv6的迁移：双栈协议、隧道</p><h3 id="4-6-路由算法与路由协议"><a href="#4-6-路由算法与路由协议" class="headerlink" title="4.6 路由算法与路由协议"></a>4.6 路由算法与路由协议</h3><p>1、链路状态路由选择算法</p><p><img src="http://djy.oldit.cn/article/ed4fc9c2dbee4f4b80ac8ae5c2414eee.webp"></p><p>2、距离向量路由选择算法</p><p>每个结点基于其与邻居结点间的直接链路距离，以及邻居交换过来的距离向量，计算并更新其到达每个目的结点的最短距离，然后将新的距离向量再通告给其所有邻居，直到距离向量不再改变。</p><p><img src="http://djy.oldit.cn/article/32de9a4c74fa438c80ca55c40db6bf51.webp"></p><p>3、层次化路由选择</p><p>实现大规模网络路由选择最有效、可行的解决方案。</p><p>划分自治系统：</p><p>网络路由器</p><p>自治系统间路由协议</p><p><img src="http://djy.oldit.cn/article/a7fe8548eafe40eaaddbc8e6ce2e2a8c.webp"></p><p>4、Internet路由选择协议</p><p>① 内部网关协议（IGP）：</p><blockquote><ol><li>RIP：基于距离向量路由选择算法，跳数作为距离度量，最大距离不超过15跳，每30秒交换一个距离向量。</li><li>OSPF：基于链路状态路由选择算法</li></ol></blockquote><p>② 外部网关协议EGP：</p><p>BGP——用于大型网络</p><h2 id="第五章-数据链路层与局域网"><a href="#第五章-数据链路层与局域网" class="headerlink" title="第五章 数据链路层与局域网"></a>第五章 数据链路层与局域网</h2><h3 id="5-1-数据链路层服务"><a href="#5-1-数据链路层服务" class="headerlink" title="5.1 数据链路层服务"></a>5.1 数据链路层服务</h3><p>链路：通信链路连接的相邻结点的通信信道。</p><p>链路层数据单元：帧</p><p><img src="http://djy.oldit.cn/article/9dd99c224ff74ace843718ed45c56c6c.webp"><br>主要功能包括：</p><p>① 组帧</p><p>② 链路接入：点对点链路、广播链路</p><p>③ 可靠交付（可靠传输方法多用于高出错率链路）</p><p>④ 差错控制</p><h3 id="5-2-差错控制"><a href="#5-2-差错控制" class="headerlink" title="5.2 差错控制"></a>5.2 差错控制</h3><p>1、差错控制的基本方式：</p><p>① 检错重发</p><p>② 前向纠错：接收端进行差错纠正</p><p>③ 反馈校验：接收端将收到的数据原封不动发回发送端</p><p>④ 检错丢弃</p><p>2、差错编码的基本原理：</p><p>香农信道编码定理：理论上可以通过编码使得数据传输过程不发生错误，或者将错误概率控制在很小的数值之下。</p><p><img src="http://djy.oldit.cn/article/9f97085432cb402790f24c00837493e4.webp"></p><p>3、差错编码的检错与纠错能力：</p><p>直接上图：</p><p><img src="http://djy.oldit.cn/article/bd7b772ca83b43a287926221f08cf3d9.webp"></p><p><img src="http://djy.oldit.cn/article/10869fcc0aab4a669f7346062273ed68.webp"></p><p>4、典型的差错编码：</p><p>① 奇偶校验码：</p><blockquote><p>奇校验：编码后的码字中 “1” 的个数为奇数</p><p>偶校验：编码后的码字中 “1” 的个数为偶数</p></blockquote><p>② 汉明码：可以实现单个比特差错纠正</p><p>③ 循环冗余码CRC-（重点难点）：检错能力强，编码效率高，实现简单。</p><h3 id="5-3-多路访问控制协议"><a href="#5-3-多路访问控制协议" class="headerlink" title="5.3 多路访问控制协议"></a>5.3 多路访问控制协议</h3><p>识记:<br>数据链路的分类;<br>MAC协议的作用;<br>MAC协议的分类。<br>领会:<br>多路复用技术;<br>信道划分协议TDMA、FDMA、WDMA;<br>随机访问协议ALOHA协议、时隙ALOHA协议、CSMA;受控接入MAC协议。<br>应用:<br>CDMA基本原理;<br>CSMA&#x2F;CD特点以及最小帧长与结点间距离的约束关系。</p><p>1、信道划分MAC协议：</p><p>多路访问控制MAC：广播信道上用于协调各个结点的数据发送</p><p>信道划分MAC协议 :</p><blockquote><ol><li>频分多路复用: 在频域内将信道带宽划分为多个子信道</li><li>时分多路复用: 将通信信道的传输信号在时域内划分为多个等长的时隙。</li><li>波分多路复用：在一根光中，传输多路不同波长的光信号</li><li>码分多路复用：从编码域进行划分，使得编码后的信号在同一信道中混合传输。</li></ol></blockquote><p>2、随机访问的MAC协议：</p><blockquote><ol><li>ALOHA协议</li></ol><p>纯ALOHA : 直接发送 –&gt; 信道侦听 –&gt; 冲突重发</p><p>时隙ALOHA : 时隙开始时发送–&gt;信道侦听–&gt;冲突则下一时隙以概率P重发</p><ol start="2"><li><p>载波监听多路访问协议CSMA</p><p> 发送前监听信道是否空闲</p></li></ol><p>(1) 非坚持CSMA : 忙则等待随机时间后再侦听<br>(2) 1-坚持CSMA : 忙则持续侦听<br>(3) P-坚持CSMA : 闲则概率P在最近时隙发送</p><ol start="3"><li>带冲突检测的载波监听多路访问协议CSMA&#x2F;CD监听空闲后发送，发送时检测碰撞碰撞后等待重发</li></ol></blockquote><p>3、受控接入MAC协议：</p><blockquote><ol><li>集中式控制由一个主机负责调度其他通信站接入信道，从而避免冲突</li></ol><p>主要方法: 轮询技术，又分为轮叫轮询和传递轮询</p><ol start="2"><li>分散式控制典型方法: 令牌技术，如令牌环网</li></ol></blockquote><h3 id="5-4-局域网"><a href="#5-4-局域网" class="headerlink" title="5.4 局域网"></a>5.4 局域网</h3><p>局域网特点：覆盖面积较小，网络传输速率高，传输误码率低</p><p>1、数据链路层寻址与ARP<br>① MAC地址：每个接口对应一个MAC地址，且全球唯一；长度48位（其中前24位为厂商标识，剩下24位由厂商分配）</p><p>② 地址解析协议：根据本网内目的主机或默认网关的IP地址获取其MAC地址；查询&#x2F;响应</p><p>2、以太网——IEEE 802.3标准 ——采用CSMA&#x2F;CD访问控制方法</p><p> <img src="http://djy.oldit.cn/article/b3e2f3d2ad6d4e5aafd2ab03c5fcc391.webp" alt="在这里插入图片描述"></p><p>3、交换机：</p><p>① 转发与过滤：可以依据接收到的链路层帧的目的MAC地址，选择性地转发到相应的端口。</p><p>以目的MAC地址为主键，查找交换表</p><p>② 自学习：交换机通过自学习构建交换表</p><p>③ 优点：消除冲突，提高性能；支持异质链路；易于进行网络管理。</p><p>4、虚拟局域网：VLAN</p><p>① 一种基于交换机（支持VLAN功能）的逻辑分割广播域的局域网应用形式。</p><p>② 不受物理位置的限制，以软件的方式划分和管理局域网中的工作组。</p><p>③ 能够抑制广播风暴。</p><p>④ 划分方法：基于交换机端口；基于MAC地址；基于上层协议类型或地址</p><h3 id="5-5-点对点链路协议"><a href="#5-5-点对点链路协议" class="headerlink" title="5.5 点对点链路协议"></a>5.5 点对点链路协议</h3><p>1、PPP</p><p>点对点协议——PPP</p><p>能够处理差错检测、支持多种上层协议、允许连接时协商IP地址、允许身份认证</p><p>典型应用：拨号上网</p><p>功能：成帧；链路控制协议LCP；网络控制协议NCP</p><p>2、HDLC协议</p><p>高级数据链路控制——HDLC协议</p><p>可应用点对点链路和点对多点链路</p><p>帧定界：<code>帧的定界符是 01111110</code></p><p><img src="http://djy.oldit.cn/article/b5604fbfc3ab42a2a3a3b7641f373028.webp"></p><p>位填充：</p><blockquote><p>发送端：只要发现数据字段5各连续1，就立即插入一个0，保证数据字段不会出现连续的6个1；</p><p>接收端：发现数据流中5个连续的1，就删除其后的0，还原成原来的信息</p></blockquote><p><img src="http://djy.oldit.cn/article/0ddc77d52a8e4bc9804f5a1b736e6ab7.webp"></p><h2 id="第六章-物理层"><a href="#第六章-物理层" class="headerlink" title="第六章 物理层"></a>第六章 物理层</h2><h3 id="6-1-数据通信基础"><a href="#6-1-数据通信基础" class="headerlink" title="6.1 数据通信基础"></a>6.1 数据通信基础</h3><p>1、数据通信基础</p><blockquote><p>1.消息:人类能够感知的描述称为消息<br>2.信息:信息是对事物状态或存在方式的不确定性表述信息是可以度量的<br>3.通信:本质就是在一点精确或近似地再生另一点的信息</p><p>4.通信系统:能够实现通信功能的各种技术、设备和方法的总体。<br>5.信号: 通信系统中，在传输通道中传播的信息的载体</p><p>6.数据 : 对客观事物的性质状态以及相互关系等进行记6载的符号及其组合<br>7.信道: 信道是以传输介质为基础的信号通道</p></blockquote><p>2、数据通信系统模型</p><p>① 通信系统的构成：信源、发送设备、信道、接收设备、信宿和噪声源等部</p><p><img src="http://djy.oldit.cn/article/84844eab3f25432bba11b685d461be5d.webp"></p><p>② 模拟通信<br>模拟信号:信号的因变量是连续的</p><p>③ 数字通信<br>数字信号: 因变量是离散的。</p><p><img src="http://djy.oldit.cn/article/e60625af94724b5ebb1a55ca49b1c722.webp"></p><p>④ 数据通信方式</p><blockquote><p>(1)单向通信、双向交替通信和双向同时通信 ;（即：单工、半双工、全双工）</p><p>(2)并行通信和串行通信 ;<br>(3)异步通信和同步通信。</p></blockquote><p>‍</p><p>⑤数据通信系统的功能</p><blockquote><p>(1)信道利用 ;<br>(2)接口及信号产生</p><p>(3)同步</p><p>(4)差错检测与纠正;</p><p>(5)寻址与路由;</p><p>(6)网络管理 ;</p><p>(7) 安全保证</p></blockquote><h3 id="6-2-物理介质"><a href="#6-2-物理介质" class="headerlink" title="6.2 物理介质"></a>6.2 物理介质</h3><p>1、导引型传输介质</p><p>① 架空明线：架空明线是指平行且相互分离或绝缘的架空裸线线路通常采用铜线或铝线等金属导线</p><p>② 双绞线：两根相互绝缘的铜线并排绞合在一起，减少对相邻导线的电磁干扰</p><p><img src="http://djy.oldit.cn/article/2457c30ee89241c693cd078f0f6ae731.webp"></p><p>③ 同轴电缆：抗电磁干扰性能好；现在主要用于频带传输，如有线电视</p><p>④ 光纤：基本原理是利用光的全反射通信容量大、距离远、抗电磁干扰性能好，保密性好；多模光纤和单模光纤</p><p>2、非导引型传输介质</p><p>① 地波传播：低频信号，沿地球表面传播<br>② 天波传播：较高频信号，利用电离层的反射传播<br>③ 视线传播：高频信号，点对点直线传播，中继传输</p><h3 id="6-3-信道与信道容量"><a href="#6-3-信道与信道容量" class="headerlink" title="6.3 信道与信道容量"></a>6.3 信道与信道容量</h3><p>1、信道分类与模型</p><p>狭义信道: 信号传输介质</p><p>广义信道: 信号传输介质和通信系统的一些变换装置</p><p>① 调制信道:信号从调制器的输出端传输到解调器的输入端经过的部分。<br>② 编码信道:数字信号由编码器输出端传输到译码器输入端经过的部分。</p><p><img src="http://djy.oldit.cn/article/d31b069b48d2412fa288dd75ab5577ee.webp"></p><p>2、信道传输特性</p><p>① 恒参信道: 各种有线信道和部分无线信道，传输特性变化小、缓慢，如微波视线传播链路和卫星链路等。</p><blockquote><p>(1)对信号幅值产生固定的衰减;<br>(2)对信号输出产生固定的时延</p></blockquote><p>② 随参信道:传输特性随时间随机快速变化</p><blockquote><p>(1)信号的传输衰减随时间随机变化</p><p>(2)信号的传输时延随时间随机变化<br>(3)存在多径传播现象</p></blockquote><p>3、信道容量</p><p><img src="http://djy.oldit.cn/article/cd5f367c123742349d96c4fbd2927d0c.webp"><br><img src="http://djy.oldit.cn/article/22ad03e073ed4af9ad6762efe9ca0f0a.webp" alt="在这里插入图片描述"></p><h3 id="6-4-基带传输"><a href="#6-4-基带传输" class="headerlink" title="6.4 基带传输"></a>6.4 基带传输</h3><p>1、基带传输基本概念</p><p>模拟基带信号:模拟信源发出的原始电信号</p><p>数字基带信号: 数字信源发出的基带信号。</p><pre><code>模拟基带信号可以通过信源编码转换为数字基带信号</code></pre><p>带传输: 直接在信道中传送基带信号数字基带传输系统</p><p><img src="http://djy.oldit.cn/article/a7e9d9cb68e24697b6c183703de87bc3.webp"></p><p>2、数字基带传输编码</p><p><img src="http://djy.oldit.cn/article/2ffc90bf485042729c4a61bd219caaa7.webp"><br><img src="http://djy.oldit.cn/article/27c3315567754a03ad84c2fbcf889d0d.webp" alt="在这里插入图片描述"><br><img src="http://djy.oldit.cn/article/8c320872585849aeabbbd4a1b4668074.webp" alt="在这里插入图片描述"><br><img src="http://djy.oldit.cn/article/ab955e26ee004647a02985c68ec9c643.webp" alt="在这里插入图片描述"></p><p>例题：</p><p><img src="http://djy.oldit.cn/article/36382f269ac34490ba93dea4b85e7d0c.webp"></p><h3 id="6-5-频带传输"><a href="#6-5-频带传输" class="headerlink" title="6.5 频带传输"></a>6.5 频带传输</h3><p>1、频带传输基本概念</p><blockquote><ol><li>数字调制<br> 利用数字基带信号控制载波信号的某些特征参量，使载波信号的这些参量的变化反映数字基带信号的信息，进而将数字基带信号变换为数字通带信号的过程</li><li>键控法<br> 利用两种不同的幅值、频率或相位来分别表示0或1.</li></ol></blockquote><p>2、频带传输中的三种调制方式</p><blockquote><ol><li>二进制数字调制<br> (1)二进制幅移键控<br> (2)二进制频移键控<br> (3)二进制相移键控<br> (4)二进制差分相移键控</li><li>多进制数字调制</li><li>正交幅值调制QAM</li></ol></blockquote><h3 id="6-6-物理层接口规程"><a href="#6-6-物理层接口规程" class="headerlink" title="6.6 物理层接口规程"></a>6.6 物理层接口规程</h3><p>1、物理层接口概述</p><p>物理层接口的四大特性，分别为机械特性、电气特性、功能特性以及规程特性。<br>物理层接口规范定义DTE和DCE之间的接口特性。<br>DTE : 数据终端设备<br>DCE : 数据电路端接设备</p><p>2、物理层接口特性</p><blockquote><ol><li>机械特性<br> 通信实体间硬件连接接口的机械特点.</li><li>电气特性<br> 在物理连接上，导线的电气连接及有关电路的特性</li><li>功能特性<br> 物理接口各条信号线的用途</li><li>规程特性<br> 通信协议，指明利用接口传输比特流的全过程，以及各项用于传输的事件发生的合法顺序</li></ol></blockquote><h2 id="第七章-无线与移动网络"><a href="#第七章-无线与移动网络" class="headerlink" title="第七章 无线与移动网络"></a>第七章 无线与移动网络</h2><h3 id="7-1-无线网络"><a href="#7-1-无线网络" class="headerlink" title="7.1 无线网络"></a>7.1 无线网络</h3><p>1、无线网络基本结构</p><blockquote><p>1.无线主机<br>2.无线链路<br>3.基站<br>4.网络基础设施5.自组织网络( Ad Hoc网络）</p></blockquote><p>2、无线链路与无线网络特性</p><blockquote><p>无线链路与有线链路的主要区别：<br>1.信号强度的衰减<br>3.多径传播<br>2.干扰<br>4.隐藏终端</p></blockquote><h3 id="7-2-移动网络"><a href="#7-2-移动网络" class="headerlink" title="7.2 移动网络"></a>7.2 移动网络</h3><p>1、移动网络基本原理</p><blockquote><p>1.不同的移动性需求</p><p>2.网络层地址保持不变的重要性</p><p>3.有线基础设施的支持</p></blockquote><p>2、寻址</p><p>永久地址和转交地址</p><p>3、移动结点的路由选择</p><p>① 间接路由选择：由归属代理转发数据给外部代理</p><p><img src="http://djy.oldit.cn/article/f84839115967480ca32b65749632b77d.webp"></p><p>② 直接路由选择: 由通信代理通过归属代理获得转交地址，直接发送到外部代理</p><p><img src="http://djy.oldit.cn/article/1c79cb3960b44e56ad8ad7ccd0e3fe39.webp"></p><h3 id="7-3-无线局域网IEEE802-11（WIFI）"><a href="#7-3-无线局域网IEEE802-11（WIFI）" class="headerlink" title="7.3 无线局域网IEEE802.11（WIFI）"></a>7.3 无线局域网IEEE802.11（WIFI）</h3><p><img src="http://djy.oldit.cn/article/5c8c42f9cdf8426da00efb82763d9695.webp"></p><h3 id="7-4-蜂窝网络"><a href="#7-4-蜂窝网络" class="headerlink" title="7.4 蜂窝网络"></a>7.4 蜂窝网络</h3><ol><li>2G网络<br> 信令和语音信道都是数字式的。</li><li>3G网络<br> 无线通信与互联网等多媒体通信结合</li><li>4G网络<br> 高速率数据业务，不同频段、不同业务环境间的无缝漫游</li><li>5G网络<br> 超高容量、超可靠性、随时随地可接入性</li></ol><h3 id="7-5-移动IP网络"><a href="#7-5-移动IP网络" class="headerlink" title="7.5 移动IP网络"></a>7.5 移动IP网络</h3><h3 id="7-6-其他典型无线网络简介"><a href="#7-6-其他典型无线网络简介" class="headerlink" title="7.6 其他典型无线网络简介"></a>7.6 其他典型无线网络简介</h3><ol><li>WiMax<br> IEEE 802.16，城域网技术，传输距离更远，接入带宽更高。</li><li>蓝牙<br> IEEE 802.15.1，小范围，低功率，低成本，自组织。</li><li>ZigBee<br> IEEE 802.15.4，低功率，低数据速率，低工作周期</li></ol><h2 id="第八章-网络安全基础"><a href="#第八章-网络安全基础" class="headerlink" title="第八章 网络安全基础"></a>第八章 网络安全基础</h2><h3 id="8-1-网络安全概述"><a href="#8-1-网络安全概述" class="headerlink" title="8.1 网络安全概述"></a>8.1 网络安全概述</h3><p>1、基本概念</p><p>网络安全通信所需要的基本属性 :</p><blockquote><p>1.机密性;<br>2.消息完整性;</p><p>3.可访问与可用性;</p><p>4.身份认证</p></blockquote><p>2、网络安全威胁</p><blockquote><p>1.窃听;<br>2.插入;<br>3.假冒;<br>4.劫持;<br>5.拒绝服务DoS和分布式拒绝服务DDoS<br>6.映射;<br>7.嗅探;<br>8.IP欺骗</p></blockquote><h3 id="8-2-数据加密"><a href="#8-2-数据加密" class="headerlink" title="8.2 数据加密"></a>8.2 数据加密</h3><p>明文:未加密的消息<br>密文:被加密的消息<br>加密:伪装消息以隐藏消息的过程，即明文转变为密文的过程。<br>解密:密文转变为明文的过程</p><p>1、传统加密方式</p><p>① 替代密码：用密文字母替代明文字母</p><p><img src="http://djy.oldit.cn/article/060aadc326b14ee0a5ef33468ee0fb4a.webp" alt=" "></p><p>②换位密码：根据一定的规则重新排列明文</p><p><img src="http://djy.oldit.cn/article/741095b66e28465a8261529d37eccb59.webp" alt=" "></p><p>2、对称密钥加密</p><p>现代密码分类对称密钥密码:加密密钥和解密密相同（密钥保密）</p><p>非对称密钥密码 : 加密密钥和解密密钥不同</p><p>对称密钥密码分类:分组密码 : DES，AES、IDEA等</p><p>流密码</p><blockquote><ol><li>DES : 56位密钥，64位分组</li><li>三重DES : 使用两个密钥( 共112位)，执行三次DES算法。</li><li>AES :分组128位，密钥128&#x2F;192&#x2F;256位</li><li>IDEA: 分组64位，密钥128位</li></ol></blockquote><p>3、非对称&#x2F;公开密钥加密</p><p>密钥成对使用，其中一个用于加密，另一个用于解密，且加密密钥可以公开，也称公开密钥加密。</p><p>典型的公钥算法：Diffie-Hellman算法、RSA算法</p><p><img src="http://djy.oldit.cn/article/3de9a5bc3bf34e40accb03058ef2ad75.webp" alt=" "></p><h3 id="8-3-消息完整性与数字签名"><a href="#8-3-消息完整性与数字签名" class="headerlink" title="8.3 消息完整性与数字签名"></a>8.3 消息完整性与数字签名</h3><p>1、消息完整性检测方法</p><blockquote><p>密码散列函数</p><ol><li><p>特性:<br> 定长输出；</p><p> 单向性( 无法根据散列值逆推报文 ) ；</p><p> 抗碰撞性( 无法找到具有相同散列值的两个报文 )</p></li><li><p>典型散列函数<br> MD5:128位散列值<br> SHA-1:160位散列值</p></li></ol></blockquote><p>2、报文认证</p><blockquote><p>报文认证是使消息的接收者能够检验收到的消息是否是真实的认证方法。来源真实、未被篡改。</p><p>1.报文摘要(数字指纹)</p><p>2.报文认证方法<br>简单报文验证:仅使用报文摘要，无法验证来源真实性</p><p>报文认证码:使用共享认证密钥，但无法防止接收方算改。</p></blockquote><p>3、数字签名</p><blockquote><p>身份认证、数据完整性、不可否认性</p><p>1.简单数字签名: 直接对报文签名<br>2.签名报文摘要</p></blockquote><p><img src="http://djy.oldit.cn/article/49dfbbc5bc97469181bf6c67ade84a11.webp" alt="在这里插入图片描述"></p><h3 id="8-4-身份认证"><a href="#8-4-身份认证" class="headerlink" title="8.4 身份认证"></a>8.4 身份认证</h3><p>口令 : 会被窃听</p><p>加密口令 : 可能遭受回放(重放)攻击</p><p>加密一次性随机数:可能遭受中间人攻击</p><p> <img src="http://djy.oldit.cn/article/84427ec9055b43c9b1f05a940b9388e1.webp" alt="在这里插入图片描述"></p><h3 id="8-5-密钥分发中心与证书认证机构"><a href="#8-5-密钥分发中心与证书认证机构" class="headerlink" title="8.5 密钥分发中心与证书认证机构"></a>8.5 密钥分发中心与证书认证机构</h3><h3 id="8-6-防火墙与入侵检测系统"><a href="#8-6-防火墙与入侵检测系统" class="headerlink" title="8.6 防火墙与入侵检测系统"></a>8.6 防火墙与入侵检测系统</h3><p>1、防火墙基本概念</p><p>防火墙：能够隔离组织内部网络与公共互联网，允许某些分组通过，而阻止其他分组进入或离开内部网络的软件、硬件或者软件硬件结合的一种设施。</p><p>前提:从外部到内部和从内部到外部的所有流量都经过防火墙。</p><p>2、防火墙分类</p><blockquote><ol><li><p>无状态分组过滤器<br> 基于特定的规则对分组是通过还是丢弃进行决策使用访问控制列表(ACL)实现防火墙规则</p></li><li><p>有状态分组过滤器</p><p> 跟踪每个TCP连接建立、拆除，根据状态确定是否允许分组通过</p></li><li><p>应用网关<br> 鉴别用户身份或针对授权用户开放特定服务</p></li></ol></blockquote><p>3、入侵检测系统IDS</p><p>入侵检测系统( IDS)是当观察到潜在的恶意流量时能够产生警告的设备或系统</p><h3 id="8-7-网络安全协议"><a href="#8-7-网络安全协议" class="headerlink" title="8.7 网络安全协议"></a>8.7 网络安全协议</h3><p>1、安全电子邮件</p><blockquote><ol><li><p>电子邮件安全需求<br> (1)机密性</p><p> (2)完整性</p><p> (3)身份认证性</p><p> (4)抗抵赖性</p></li><li><p>安全电子邮件标准</p><p> PGP</p></li></ol></blockquote><p>2、安全套接字层SSL</p><p>① SSL是个于应用层和传输层之间的安全协议</p><p>② SSL协议栈</p><p><img src="http://djy.oldit.cn/article/44bd85e7069847b89cdd0b24246c6a2c.webp"></p><p>③ SSL握手过程协商密码组，生成密钥，服务器&#x2F;客户认证与鉴别</p><p>3、虚拟专用网VPN和IP安全协议IPsec</p><p>① VPN：建立在公共网络上的安全通道，实现远程用户、分支机构、业务伙伴等与机构总部网络的安全连接，从而构建针对特定组织机构的专用网络</p><p>关键技术: 隧道技术，如IPSec</p><p>② 典型的网络层安全协议-IPSec：提供机密性、身份鉴别、数据完整性验证和防重放攻击服务。<br>体系结构 :认证头AH协议、封装安全载荷ESP协议。</p><p>运行模式:传输模式(AH传输模式、ESP传输模式)、隧道模式(AH隧道模式、ESP隧道模式)</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>祝大家都上岸！🎉🎉🎉</p><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一章-计算机网络概述&quot;&gt;&lt;a href=&quot;#第一章-计算机网络概述&quot; class=&quot;headerlink&quot; title=&quot;第一章 计算机网络概述&quot;&gt;&lt;/a&gt;第一章 计算机网络概述&lt;/h2&gt;&lt;h3 id=&quot;1-1-计算机网络的概念&quot;&gt;&lt;a href=&quot;#1-1-计</summary>
      
    
    
    
    <category term="自考" scheme="http://hmiking.top/categories/%E8%87%AA%E8%80%83/"/>
    
    
    <category term="计算机网络原理" scheme="http://hmiking.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装部署</title>
    <link href="http://hmiking.top/2023/10/10/Docker%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://hmiking.top/2023/10/10/Docker%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2023-10-10T07:46:58.000Z</published>
    <updated>2023-11-02T05:49:19.668Z</updated>
    
    <content type="html"><![CDATA[<h3 id="传统虚拟机技术"><a href="#传统虚拟机技术" class="headerlink" title="传统虚拟机技术"></a>传统虚拟机技术</h3><ul><li>虚拟机是虚拟出一套硬件，在其上面运行一个完整的操作系统给，例如我们使用KVM，指定系统镜像，然后装系统，最终可以使用，在该系统上再运行所需的应用程序。</li><li>KVM创建虚拟机是，指定较少的cpu，内存，硬盘等资源，虚拟机性能较低。</li></ul><h3 id="容器技术"><a href="#容器技术" class="headerlink" title="容器技术"></a>容器技术</h3><ul><li>容器内的应用程序直接运行再宿主机的内核上，容器内没有自己的内核，也没有对硬件进行虚拟，因此容器比起虚拟机更为轻便。</li></ul><h4 id="一、docker引擎"><a href="#一、docker引擎" class="headerlink" title="一、docker引擎"></a>一、docker引擎</h4><p><img src="http://djy.oldit.cn/article/78c096d9df9b4fffa1cc5f75dfc63b12.webp" alt="docker引擎"></p><h4 id="二、docker最核心的组件"><a href="#二、docker最核心的组件" class="headerlink" title="二、docker最核心的组件"></a>二、docker最核心的组件</h4><ul><li><p>image 镜像，构建容器（应用程序运行所需的环境，打包为镜像文件）</p></li><li><p>Container，容器（我的应用程序，就跑在容器中）</p></li><li><p>镜像仓库（dockerhub）（保存镜像文件，提供上传，下载镜像）作用好比github</p></li><li><p>Dockerfile，将你部署项目的操作，写成一个部署脚本，这就是Dockerfile，且该脚本还能够构建镜像文件</p></li></ul><h4 id="三、安装docker"><a href="#三、安装docker" class="headerlink" title="三、安装docker"></a>三、安装docker</h4><h5 id="1-基础环境配置"><a href="#1-基础环境配置" class="headerlink" title="1. 基础环境配置"></a>1. 基础环境配置</h5><p>提示：docker安装在centos7平台，内核版本不低于3.10，在centos平台运行docker可能会遇见些告警信息，修改内核配置参数，打开内核转发功能。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat &lt;&lt;EOF &gt; /etc/sysctl.d/docker.conf</span></span><br><span class="line">&gt; net.bridge.bridge-nf-call-ip6tables = <span class="number">1</span></span><br><span class="line">&gt; net.bridge.bridge-nf-call-iptables =<span class="number">1</span> </span><br><span class="line">&gt; net.ipv4.conf.default.rp_filter = <span class="number">0</span></span><br><span class="line">&gt; net.ipv4.conf.all.rp_filter = <span class="number">0</span></span><br><span class="line">&gt; net.ipv4.ip_forward = <span class="number">1</span></span><br><span class="line">&gt; EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载修改内核的参数，配置文件</span></span><br><span class="line"><span class="comment"># 按照如下命令，执行顺序</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># modprobe br_netfilter</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sysctl -p /etc/sysctl.d/docker.conf </span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = <span class="number">1</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables = <span class="number">1</span></span><br><span class="line">net.ipv4.conf.default.rp_filter = <span class="number">0</span></span><br><span class="line">net.ipv4.conf.all.rp_filter = <span class="number">0</span></span><br><span class="line">net.ipv4.ip_forward = <span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="2-建立仓库"><a href="#2-建立仓库" class="headerlink" title="2. 建立仓库"></a>2. 建立仓库</h5><p>安装软件包（提供实用程序）并设置存储库。yum-utilsyum-config-manager</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -<span class="keyword">y</span> yum-utils</span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:<span class="regexp">//d</span>ownload.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h4 id="3-安装docker引擎"><a href="#3-安装docker引擎" class="headerlink" title="3. 安装docker引擎"></a>3. 安装docker引擎</h4><p>安装 Docker Engine、containerd 和 Docker Compose：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><h4 id="4-启动docker"><a href="#4-启动docker" class="headerlink" title="4. 启动docker"></a>4. 启动docker</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="5-测试docker是否安装成功"><a href="#5-测试docker是否安装成功" class="headerlink" title="5. 测试docker是否安装成功"></a>5. 测试docker是否安装成功</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="http://djy.oldit.cn/article/139c29ff177745edabcf7271226efef3.webp" alt="运行hello-word"></p><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;传统虚拟机技术&quot;&gt;&lt;a href=&quot;#传统虚拟机技术&quot; class=&quot;headerlink&quot; title=&quot;传统虚拟机技术&quot;&gt;&lt;/a&gt;传统虚拟机技术&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;虚拟机是虚拟出一套硬件，在其上面运行一个完整的操作系统给，例如我们使用KVM，指定系统镜</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Centos7 编译安装Nginx</title>
    <link href="http://hmiking.top/2023/10/10/Centos7%20%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Nginx/"/>
    <id>http://hmiking.top/2023/10/10/Centos7%20%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Nginx/</id>
    <published>2023-10-10T06:46:58.000Z</published>
    <updated>2023-11-02T05:48:40.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>nginx以高效的linux网络模型，epoll，event作为网络IO模型，kqueue，在高并发网站情况下，nginx能够轻松支持5w+的并发流量，并且消耗的服务器内存，cpu等资源，也是很低的，运行起来非常稳定。</p><hr><h3 id="一、编译安装nginx"><a href="#一、编译安装nginx" class="headerlink" title="一、编译安装nginx"></a>一、编译安装nginx</h3><p>在Linux系统中，软件的安装方式有两种：</p><ul><li>包管理安装</li><li>编译安装</li></ul><p>编译安装是指用户自己下载软件源代码，然后自己编译、配置、安装的安装方式。编译安装的优点是可以自定义编译选项，可以实现对软件的个性化定制，而缺点是安装过程相对复杂，需要手动编译、配置、安装，并且需要自己处理依赖关系。Nginx是一款高性能的Web服务器，可以作为反向代理服务器或负载均衡服务器使用。在Linux系统中，可以通过包管理器安装Nginx，也可以使用编译安装的方式安装Nginx。下面是关于编译安装Nginx的相关信息。</p><h3 id="二、编译安装过程"><a href="#二、编译安装过程" class="headerlink" title="二、编译安装过程"></a>二、编译安装过程</h3><h4 id="1-操作系统的选择，centos7"><a href="#1-操作系统的选择，centos7" class="headerlink" title="1.操作系统的选择，centos7"></a>1.操作系统的选择，centos7</h4><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release <span class="number">7.6</span>.<span class="number">1810</span> (Core) </span><br><span class="line">[root@hmiking ~]<span class="comment"># uname -a</span></span><br><span class="line">Linux hmiking <span class="number">3.10</span>.<span class="number">0</span>-<span class="number">957</span>.el7.x86_64 <span class="comment">#1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><h5 id="1-1关闭防火墙、selinux"><a href="#1-1关闭防火墙、selinux" class="headerlink" title="1.1关闭防火墙、selinux"></a>1.1关闭防火墙、selinux</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># systemctl disable --now firewalld</span></span><br><span class="line">[root@hmiking ~]<span class="comment"># setenforce 0</span></span><br><span class="line">setenforce: SELinux is disabled</span><br><span class="line">[root@hmiking ~]<span class="comment"># getenforce </span></span><br><span class="line">Disabled</span><br></pre></td></tr></table></figure><h4 id="2-安装编译开发环境"><a href="#2-安装编译开发环境" class="headerlink" title="2.安装编译开发环境"></a>2.安装编译开发环境</h4><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># yum install -y gcc gcc-c++ autoconf automake make</span></span><br></pre></td></tr></table></figure><h5 id="2-1安装nginx所需的一些第三方系统库的支持"><a href="#2-1安装nginx所需的一些第三方系统库的支持" class="headerlink" title="2.1安装nginx所需的一些第三方系统库的支持"></a>2.1安装nginx所需的一些第三方系统库的支持</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># yum install zlib zlib-devel openssl openssl-devel pcre pcre-devel wget httpd-tools vim -y</span></span><br></pre></td></tr></table></figure><h4 id="3-编译安装nginx"><a href="#3-编译安装nginx" class="headerlink" title="3.编译安装nginx"></a>3.编译安装nginx</h4><h5 id="3-1下载nginx源代码"><a href="#3-1下载nginx源代码" class="headerlink" title="3.1下载nginx源代码"></a>3.1下载nginx源代码</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># wget http://nginx.org/download/nginx-1.17.10.tar.gz</span></span><br></pre></td></tr></table></figure><h5 id="3-2解压缩nginx包，并进入该目录"><a href="#3-2解压缩nginx包，并进入该目录" class="headerlink" title="3.2解压缩nginx包，并进入该目录"></a>3.2解压缩nginx包，并进入该目录</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># tar xf nginx-1.17.10.tar.gz</span></span><br><span class="line">[root@hmiking ~]<span class="comment"># cd nginx-1.17.10</span></span><br><span class="line">[root@hmiking nginx-<span class="number">1.17</span>.<span class="number">10</span>]<span class="comment"># ll    #查看目录下有哪些内容</span></span><br><span class="line">total <span class="number">760</span></span><br><span class="line">drwxr-xr-<span class="keyword">x</span> <span class="number">6</span> mysql mysql    <span class="number">326</span> Mar  <span class="number">6</span> <span class="number">23</span>:<span class="number">39</span> auto<span class="comment"># 检测系统模块依赖信息</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> mysql mysql <span class="number">302754</span> Apr <span class="number">14</span>  <span class="number">2020</span> CHANGES<span class="comment"># 存放nginx的变化记录日志</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> mysql mysql <span class="number">462076</span> Apr <span class="number">14</span>  <span class="number">2020</span> CHANGES.ru</span><br><span class="line">drwxr-xr-<span class="keyword">x</span> <span class="number">2</span> mysql mysql    <span class="number">168</span> Mar  <span class="number">6</span> <span class="number">23</span>:<span class="number">39</span> conf<span class="comment"># 存放nginx主配置文件的目录</span></span><br><span class="line">-rwxr-xr-<span class="keyword">x</span> <span class="number">1</span> mysql mysql   <span class="number">2502</span> Apr <span class="number">14</span>  <span class="number">2020</span> configure<span class="comment"># 可执行的脚本，用于编译文件的定制脚本</span></span><br><span class="line">drwxr-xr-<span class="keyword">x</span> <span class="number">4</span> mysql mysql     <span class="number">72</span> Mar  <span class="number">6</span> <span class="number">23</span>:<span class="number">39</span> contrib<span class="comment"># 提供了vim插件，让配置文件颜色区分，更友好</span></span><br><span class="line">drwxr-xr-<span class="keyword">x</span> <span class="number">2</span> mysql mysql     <span class="number">40</span> Mar  <span class="number">6</span> <span class="number">23</span>:<span class="number">39</span> html<span class="comment"># 存放了标准的html页面文件</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> mysql mysql   <span class="number">1397</span> Apr <span class="number">14</span>  <span class="number">2020</span> LICENSE</span><br><span class="line">drwxr-xr-<span class="keyword">x</span> <span class="number">2</span> mysql mysql     <span class="number">21</span> Mar  <span class="number">6</span> <span class="number">23</span>:<span class="number">39</span> man</span><br><span class="line">-rw-r--r-- <span class="number">1</span> mysql mysql     <span class="number">49</span> Apr <span class="number">14</span>  <span class="number">2020</span> README</span><br><span class="line">drwxr-xr-<span class="keyword">x</span> <span class="number">9</span> mysql mysql     <span class="number">91</span> Mar  <span class="number">6</span> <span class="number">23</span>:<span class="number">39</span> src<span class="comment"># 存放了nginx源代码的目录</span></span><br></pre></td></tr></table></figure><h5 id="3-3开始编译安装"><a href="#3-3开始编译安装" class="headerlink" title="3.3开始编译安装"></a>3.3开始编译安装</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入软件源代码目录，执行编译脚本文件，如指定安装路径，以及开启额外功能等</span></span><br><span class="line">[root@hmiking nginx-<span class="number">1.17</span>.<span class="number">10</span>]<span class="comment"># mkdir /usr/local/nginx</span></span><br><span class="line">[root@hmiking nginx-<span class="number">1.17</span>.<span class="number">10</span>]<span class="comment"># ./configure --prefix=/usr/local/nginx \</span></span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_flv_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-threads \</span><br><span class="line">--with-file-aio &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="3-4查看安装后的nginx目录"><a href="#3-4查看安装后的nginx目录" class="headerlink" title="3.4查看安装后的nginx目录"></a>3.4查看安装后的nginx目录</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking nginx-<span class="number">1.17</span>.<span class="number">10</span>]<span class="comment"># cd /usr/local/nginx/</span></span><br><span class="line">[root@hmiking nginx]<span class="comment"># ls</span></span><br><span class="line">confhtmllogs   sbin</span><br><span class="line"></span><br><span class="line"><span class="comment"># conf 存放nginx的配置文件，如 nginx.conf</span></span><br><span class="line"><span class="comment"># html 存放nginx的网页根目录文件，存放站点的静态文件数据</span></span><br><span class="line"><span class="comment"># logs 存放nginx的各种日志目录</span></span><br><span class="line"><span class="comment"># sbin 存放该软件的可执行命令</span></span><br></pre></td></tr></table></figure><h4 id="4-启动并访问nginx"><a href="#4-启动并访问nginx" class="headerlink" title="4.启动并访问nginx"></a>4.启动并访问nginx</h4><h5 id="4-1将-nginx-添加到全局变量中"><a href="#4-1将-nginx-添加到全局变量中" class="headerlink" title="4.1将 nginx 添加到全局变量中"></a>4.1将 nginx 添加到全局变量中</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以通过软链接到/usr/local/sbin/ 目录下</span></span><br><span class="line">[root@hmiking nginx]<span class="comment"># ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时可以快捷的使用nginx各种指令</span></span><br><span class="line">nginx<span class="comment"># 首次直接输入nginx，表示启动该进程</span></span><br></pre></td></tr></table></figure><h5 id="4-2检查nginx的编译安装信息"><a href="#4-2检查nginx的编译安装信息" class="headerlink" title="4.2检查nginx的编译安装信息"></a>4.2检查nginx的编译安装信息</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking nginx]<span class="comment"># nginx -V</span></span><br><span class="line">nginx version: nginx/<span class="number">1.17</span>.<span class="number">10</span></span><br><span class="line">built by gcc <span class="number">4.8</span>.<span class="number">5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span>.<span class="number">5</span>-<span class="number">44</span>) (GCC) </span><br><span class="line">built with OpenSSL <span class="number">1.0</span>.<span class="number">2</span>k-fips  <span class="number">26</span> Jan <span class="number">2017</span></span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=<span class="regexp">/usr/l</span>ocal/nginx --with-http_ssl_module --with-http_flv_module --with-http_gzip_static_module --with-http_stub_status_module --with-threads --with-file-aio</span><br></pre></td></tr></table></figure><h5 id="4-3启动nginx"><a href="#4-3启动nginx" class="headerlink" title="4.3启动nginx"></a>4.3启动nginx</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动nginx</span></span><br><span class="line">[root@hmiking ~]<span class="comment"># nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx进程</span></span><br><span class="line">[root@hmiking ~]<span class="comment"># ps -ef | grep nginx | grep -v grep</span></span><br><span class="line">root      <span class="number">27314</span>      <span class="number">1</span>  <span class="number">0</span> <span class="number">01</span>:<span class="number">28</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> nginx: master process nginx</span><br><span class="line">nobody    <span class="number">27315</span>  <span class="number">27314</span>  <span class="number">0</span> <span class="number">01</span>:<span class="number">28</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> nginx: worker process</span><br></pre></td></tr></table></figure><h5 id="4-4通过命令行终端访问nginx"><a href="#4-4通过命令行终端访问nginx" class="headerlink" title="4.4通过命令行终端访问nginx"></a>4.4通过命令行终端访问nginx</h5><p>代码如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># curl localhost</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">    body &#123;</span></span><br><span class="line"><span class="regexp">        width: 35em;</span></span><br><span class="line"><span class="regexp">        margin: 0 auto;</span></span><br><span class="line"><span class="regexp">        font-family: Tahoma, Verdana, Arial, sans-serif;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&lt;/s</span>tyle&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;h1&gt;Welcome to nginx!&lt;/</span>h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed <span class="keyword">and</span></span><br><span class="line">working. Further configuration is required.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;p&gt;For online documentation and support please refer to</span></span><br><span class="line"><span class="regexp">&lt;a href=&quot;http:/</span><span class="regexp">/nginx.org/</span><span class="string">&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span></span><br><span class="line"><span class="string">Commercial support is available at</span></span><br><span class="line"><span class="string">&lt;a href=&quot;</span>http:<span class="regexp">//nginx</span>.com/<span class="string">&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-5通过浏览器访问nginx"><a href="#4-5通过浏览器访问nginx" class="headerlink" title="4.5通过浏览器访问nginx"></a>4.5通过浏览器访问nginx</h5><p><img src="http://djy.oldit.cn/article/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx.webp" alt="在这里插入图片描述"></p><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;nginx以高效的linux网络模型，epoll，event作为网络IO模型，kqueue，在高并发网站情况下，nginx能够轻松支持5w+</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Keepalived+Nginx双机热备实验</title>
    <link href="http://hmiking.top/2023/10/10/Keepalived+Nginx%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E5%AE%9E%E9%AA%8C/"/>
    <id>http://hmiking.top/2023/10/10/Keepalived+Nginx%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%E5%AE%9E%E9%AA%8C/</id>
    <published>2023-10-10T06:46:58.000Z</published>
    <updated>2023-11-02T05:49:36.868Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>Keepalived是一款高可用性的服务，它可以帮助您在云服务器上实现负载均衡和故障转移。该服务通过VRRP协议实现了主备节点之间的故障切换和负载均衡。</li><li>VRRP是一种虚拟路由器冗余协议，它能够在网络中的节点故障时自动将工作负载转移到备用节点上，从而保证网络的高可用性。Keepalive软件与VRRP协议结合使用，可以实现更加可靠和稳定的高可用性。</li><li>Keepalived的主要功能包括管理LVS负载均衡软件、实现对LVS集群节点健康检查的功能、作为系统网络服务的高可用功能以及作为高可用故障切换转移原理。当Keppalived服务正常工作时，主Master节点会不断地向备节点发送心跳消息，告诉备Backup节点自己还活着。当主Master节点发生故障时，备节点会调用自身的接管程序，接管主Master节点的IP资源及服务。当主Master节点恢复时，备Backup节点又会释放主节点故障时自身接管的IP资源及服务，恢复到原来的备用角色。</li></ul><h3 id="一、Keepalived的工作过程"><a href="#一、Keepalived的工作过程" class="headerlink" title="一、Keepalived的工作过程"></a>一、Keepalived的工作过程</h3><p>Keepalived的作用是检测服务器的状态，如果有一台web服务器宕机，或工作出现故障，Keepalived将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作，当服务器工作正常后Keepalived自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。</p><h3 id="二、Keepalived-Nginx双机热备实验"><a href="#二、Keepalived-Nginx双机热备实验" class="headerlink" title="二、Keepalived+Nginx双机热备实验"></a>二、Keepalived+Nginx双机热备实验</h3><h4 id="1、基础环境"><a href="#1、基础环境" class="headerlink" title="1、基础环境"></a>1、基础环境</h4><table><thead><tr><th>机器</th><th>主备</th><th>IP地址</th></tr></thead><tbody><tr><td>nginx-1</td><td>主</td><td>192.168.222.143</td></tr><tr><td>nginx-2</td><td>备</td><td>192.168.222.167</td></tr><tr><td>客户端&#x2F;windows</td><td>&#x2F;</td><td>192.168.222.1</td></tr></tbody></table><h5 id="1-1、关闭防火墙和selinux"><a href="#1-1、关闭防火墙和selinux" class="headerlink" title="1.1、关闭防火墙和selinux"></a>1.1、关闭防火墙和selinux</h5><p>nginx-1和nginx-2的配置如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># getenforce </span></span><br><span class="line">Disabled</span><br></pre></td></tr></table></figure><h4 id="2、安装nginx"><a href="#2、安装nginx" class="headerlink" title="2、安装nginx"></a>2、安装nginx</h4><p>配置好阿里的yum源，使用yum安装nginx。<br>nignx-1和nginx-2配置如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nginx-<span class="number">1</span>：</span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># yum install nginx -y</span></span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># nginx -v</span></span><br><span class="line">nginx version: nginx/<span class="number">1.20</span>.<span class="number">1</span></span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># systemctl enable nginx# 设置开机自启</span></span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># systemctl start nginx# 启动nginx</span></span><br><span class="line"></span><br><span class="line">nginx-<span class="number">2</span>：</span><br><span class="line">[root@nginx-<span class="number">2</span> ~]<span class="comment"># yum install nginx -y</span></span><br><span class="line">[root@nginx-<span class="number">2</span> ~]<span class="comment"># nginx -v</span></span><br><span class="line">nginx version: nginx/<span class="number">1.20</span>.<span class="number">1</span></span><br><span class="line">[root@nginx-<span class="number">2</span> ~]<span class="comment"># systemctl enable nginx# 设置开机自启</span></span><br><span class="line">[root@nginx-<span class="number">2</span> ~]<span class="comment"># systemctl start nginx# 启动nginx</span></span><br></pre></td></tr></table></figure><h5 id="2-1、nginx的一些默认配置文件路径"><a href="#2-1、nginx的一些默认配置文件路径" class="headerlink" title="2.1、nginx的一些默认配置文件路径"></a>2.1、nginx的一些默认配置文件路径</h5><ul><li>&#x2F;etc&#x2F;nginx&#x2F;nginx.conf# nginx的默认配置文件</li><li>&#x2F;etc&#x2F;nginx&#x2F;conf.d# nginx的自定义配置文件</li><li>&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;# nginx的默认网页存放目录</li><li>&#x2F;var&#x2F;log&#x2F;nginx&#x2F;# nginx的日志文件存放目录</li></ul><h5 id="2-2、对nginx的网页页面进行修改"><a href="#2-2、对nginx的网页页面进行修改" class="headerlink" title="2.2、对nginx的网页页面进行修改"></a>2.2、对nginx的网页页面进行修改</h5><p>修改nginx的默认页面文件，以便客户端测试查看效果<br>nginx-1和nginx-2的配置如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">nginx-<span class="number">1</span>配置：</span><br><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># cd /usr/share/nginx/html/</span></span><br><span class="line">[root@nginx-<span class="number">1</span> html]<span class="comment"># ls</span></span><br><span class="line"><span class="number">404</span>.html  en-US  img         nginx-logo.png</span><br><span class="line"><span class="number">50</span>x.html  icons  index.html  poweredby.png</span><br><span class="line">[root@nginx-<span class="number">1</span> html]<span class="comment"># echo &quot;&lt;h1&gt;This is nginx-1&lt;/h1&gt;&quot; &gt; index.html </span></span><br><span class="line">[root@nginx-<span class="number">1</span> html]<span class="comment"># cat index.html </span></span><br><span class="line">&lt;h1&gt;This is nginx-<span class="number">1</span>&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">nginx-2配置：</span></span><br><span class="line"><span class="regexp">[root@nginx-2 ~]# cd /usr</span><span class="regexp">/share/nginx</span><span class="regexp">/html/</span></span><br><span class="line">[root@nginx-<span class="number">2</span> html]<span class="comment"># ls</span></span><br><span class="line"><span class="number">404</span>.html  en-US  img         nginx-logo.png</span><br><span class="line"><span class="number">50</span>x.html  icons  index.html  poweredby.png</span><br><span class="line">[root@nginx-<span class="number">2</span> html]<span class="comment"># echo &quot;&lt;h1&gt;This is nginx-2&lt;/h1&gt;&quot; &gt; index.html </span></span><br><span class="line">[root@nginx-<span class="number">2</span> html]<span class="comment"># cat index.html </span></span><br><span class="line">&lt;h1&gt;This is nginx-<span class="number">2</span>&lt;/h1&gt;</span><br></pre></td></tr></table></figure><h4 id="3、安装Keepalived"><a href="#3、安装Keepalived" class="headerlink" title="3、安装Keepalived"></a>3、安装Keepalived</h4><p>nginx-1和nginx-2 使用yum安装</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># yum install keepalived -y</span></span><br><span class="line">[root@nginx-<span class="number">2</span> ~]<span class="comment"># yum install keepalived -y</span></span><br></pre></td></tr></table></figure><h5 id="3-1、修改配置文件"><a href="#3-1、修改配置文件" class="headerlink" title="3.1、修改配置文件"></a>3.1、修改配置文件</h5><p>默认的配置文件在&#x2F;etc&#x2F;keepalived目录下</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-<span class="number">1</span> ~]<span class="comment"># cd /etc/keepalived/</span></span><br><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># ls</span></span><br><span class="line">keepalived.conf</span><br><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># cp keepalived.conf keepalived.conf.bak# 配置文件内容很多，可以备份以防万一</span></span><br></pre></td></tr></table></figure><h5 id="3-2、分别修改nginx-1和nginx-2的配置文件"><a href="#3-2、分别修改nginx-1和nginx-2的配置文件" class="headerlink" title="3.2、分别修改nginx-1和nginx-2的配置文件"></a>3.2、分别修改nginx-1和nginx-2的配置文件</h5><p>nginx-1（主）配置：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># &gt; keepalived.conf</span></span><br><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># vim keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   vrrp_mcast_group4 <span class="number">224.100</span>.<span class="number">100.100</span>    <span class="comment"># 指定一个广播地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入周期性检测nginx服务脚本的相关配置</span></span><br><span class="line">vrrp_script check_nginx&#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span> <span class="comment"># 心跳执行的脚本，检测nginx是否启动</span></span><br><span class="line">    interval <span class="number">1</span>                           <span class="comment"># 检测脚本执行的间隔，单位是秒</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    <span class="keyword">state</span> MASTER                        <span class="comment"># 标识状态为MASTER</span></span><br><span class="line">    interface ens33                     <span class="comment"># 修改网卡名称</span></span><br><span class="line">    virtual_router_id <span class="number">51</span>                <span class="comment"># 定义组vriid，同一组virtual_router_id必须相同</span></span><br><span class="line">    priority <span class="number">100</span>                        <span class="comment"># 优先级，MASTER权重要高于BACKUP</span></span><br><span class="line">    advert_int <span class="number">1</span>                        <span class="comment"># MASTER 与 BACKIP 负载均衡器之间同步检查的时间间隔，单位是秒</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">123456</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span>.<span class="number">222.220</span><span class="comment"># 设置虚拟IP地址</span></span><br><span class="line">    &#125;</span><br><span class="line">     track_script&#123;</span><br><span class="line">        check_nginx</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">重启服务</span><br><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># systemctl restart keepalived</span></span><br></pre></td></tr></table></figure><p><strong>nginx-2（备）配置</strong>：<br><code>由于主备的配置是一样的，只需要修改部分参数，可以通过scp命令把nginx-1的配置文件传到nginx-2上</code></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># scp keepalived.conf 192.168.222.167:`pwd`</span></span><br><span class="line">keepalived.conf                               <span class="number">100</span>% <span class="number">1044</span>   <span class="number">887.9</span>KB/s   <span class="number">00</span>:<span class="number">00</span>   </span><br><span class="line"></span><br><span class="line">[root@nginx-<span class="number">2</span> keepalived]<span class="comment"># vim keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   vrrp_mcast_group4 <span class="number">224.100</span>.<span class="number">100.100</span>    <span class="comment"># 指定一个广播地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入周期性检测nginx服务脚本的相关配置</span></span><br><span class="line">vrrp_script check_nginx&#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span>             <span class="comment"># 心跳执行的脚本，检测nginx是否启动</span></span><br><span class="line">    interval <span class="number">1</span>                                          <span class="comment"># 检测脚本执行的间隔，单位是秒</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    <span class="keyword">state</span> BACKUP                        <span class="comment"># 标识状态为MASTER</span></span><br><span class="line">    interface ens33                     <span class="comment"># 修改网卡名称</span></span><br><span class="line">    virtual_router_id <span class="number">51</span>                <span class="comment"># 定义组vriid，同一组virtual_router_id必须相同</span></span><br><span class="line">    priority <span class="number">99</span>                         <span class="comment"># 优先级，MASTER权重要高于BACKUP</span></span><br><span class="line">    advert_int <span class="number">1</span>                        <span class="comment"># MASTER 与 BACKIP 负载均衡器之间同步检查的时间间隔，单位是秒</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">123456</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span>.<span class="number">222.220</span>                                 <span class="comment"># 设置虚拟IP地址</span></span><br><span class="line">    &#125;</span><br><span class="line">     track_script&#123;</span><br><span class="line">        check_nginx</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">重启服务</span><br><span class="line">[root@nginx-<span class="number">2</span> keepalived]<span class="comment"># systemctl restart keepalived</span></span><br></pre></td></tr></table></figure><h5 id="3-3、查看ip"><a href="#3-3、查看ip" class="headerlink" title="3.3、查看ip"></a>3.3、查看ip</h5><p><code>此时通过ip a去查看两台nginx服务器，只有nginx-1主备是有虚拟ip地址，只有等nginx-1宕机后，才会转移到nginx-2上</code><br>nginx-1:<br><img src="http://djy.oldit.cn/article/c8fabda1545c42c5b2fa56a3c1c4739f.webp" alt="在这里插入图片描述"><br>nginx-2:<br><img src="http://djy.oldit.cn/article/2948160c1dbe4686bafb5e07d8846c5a.webp" alt="在这里插入图片描述"></p><h5 id="3-4、编写nginx存活脚本"><a href="#3-4、编写nginx存活脚本" class="headerlink" title="3.4、编写nginx存活脚本"></a>3.4、编写nginx存活脚本</h5><ul><li>由于keepalived是通过内核转发请求判断主备服务器是否在线，而nginx是应用程序，它有进程意外退出的可能性，不涉及内核，所以nginx挂了keepalived并不能作出相应的判断来切换备服务器，这时需要使用一个脚本来实时监控nginx进程是否存在，如果不存在则重启开启，重启开启不了杀掉当前主机中的keepalived服务来实现故障切换。开启keepalived后脚本自动执行</li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在/etc/keepalived目录下创建nginx存活检测脚本</span></span><br><span class="line">[root@localhost keepalived]<span class="comment"># vim check_nginx.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#检测nginx是否存活脚本</span></span><br><span class="line">A=<span class="string">`ps -C nginx --no-header | wc -l`</span></span><br><span class="line"><span class="keyword">if</span> [ $A -eq <span class="number">0</span> ];then                                        <span class="comment">#如果nginx没有启动就启动nginx                        </span></span><br><span class="line">      systemctl start nginx                                 <span class="comment">#重启nginx</span></span><br><span class="line">      <span class="keyword">if</span> [ <span class="string">`ps -C nginx --no-header |wc -l`</span> -eq <span class="number">0</span> ];then    <span class="comment">#nginx重启失败，则停掉keepalived服务，进行VIP转移</span></span><br><span class="line">              killall keepalived</span><br><span class="line">      fi</span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">给脚本执行权限</span><br><span class="line">[root@localhost keepalived]<span class="comment"># chmod 755 check_nginx.sh </span></span><br><span class="line"></span><br><span class="line">并把脚本传入nginx-<span class="number">2</span>服务器上</span><br><span class="line">[root@nginx-<span class="number">1</span> keepalived]<span class="comment"># scp check_nginx.sh 192.168.222.167:`pwd`</span></span><br><span class="line">check_nginx.sh  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4、客户端测试"><a href="#4、客户端测试" class="headerlink" title="4、客户端测试"></a>4、客户端测试</h4><h5 id="4-1、分别对两台nginx服务器进行访问"><a href="#4-1、分别对两台nginx服务器进行访问" class="headerlink" title="4.1、分别对两台nginx服务器进行访问"></a>4.1、分别对两台nginx服务器进行访问</h5><p><img src="http://djy.oldit.cn/article/a69486c4ba514d4fae5542fa1e7c2203.webp"></p><h5 id="4-2、对VIP进行访问"><a href="#4-2、对VIP进行访问" class="headerlink" title="4.2、对VIP进行访问"></a>4.2、对VIP进行访问</h5><p><img src="http://djy.oldit.cn/article/dc5fdb25e37a4cf78c4f2db489601403.webp" alt="在这里插入图片描述"><br><code>看到的结果是nginx-1的服务器，因为nginx-1服务器是master主服务器</code></p><h5 id="4-3、故障测试"><a href="#4-3、故障测试" class="headerlink" title="4.3、故障测试"></a>4.3、故障测试</h5><ul><li>模拟服务器故障，如果nginx-1服务器突然宕机后，让keepalived实现自动故障转移，让客户端访问的页面到backup服务器上<br><img src="http://djy.oldit.cn/article/c8700687001c4c3ebe9395e7b8c7faff.webp" alt="在这里插入图片描述"></li><li>此时再次尝试访问刷新VIP查看结果<br><img src="http://djy.oldit.cn/article/c4b98a1fe0484155a2222bc3208ad389.webp"><br><code>此时访问的页面是nginx-2服务器提供的，VIP也已经到nginx-2服务器的ens33网卡上</code><br><img src="http://djy.oldit.cn/article/c513c9ae4cd54cf99b7e743afe3fab1b.webp" alt="在这里插入图片描述"></li></ul><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Keepalived是一款高可用性的服务，它可以帮助您在云服务器上实现负载均衡和故障转移。该服务通过VRRP协议实现了主备节点之</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Nginx主配置文件中文注释</title>
    <link href="http://hmiking.top/2023/10/10/Nginx%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E6%96%87%E6%B3%A8%E9%87%8A/"/>
    <id>http://hmiking.top/2023/10/10/Nginx%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E6%96%87%E6%B3%A8%E9%87%8A/</id>
    <published>2023-10-10T06:46:58.000Z</published>
    <updated>2023-11-02T05:50:00.506Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nginx主配置文件"><a href="#Nginx主配置文件" class="headerlink" title="Nginx主配置文件"></a>Nginx主配置文件</h3><h4 id="nginx-conf指令注释"><a href="#nginx-conf指令注释" class="headerlink" title="nginx.conf指令注释"></a>nginx.conf指令注释</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义Nginx运行的用户和用户组</span></span><br><span class="line"><span class="comment"># user nobady nobady;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx进程数，建议设置为等于CPU总核心数,默认为1。</span></span><br><span class="line">worker_processes <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line">error_log /usr/<span class="keyword">local</span>/nginx/logs/error.log info;</span><br><span class="line"></span><br><span class="line"><span class="comment">#进程pid文件,指定nginx进程运行文件存放地址</span></span><br><span class="line">pid /usr/<span class="keyword">local</span>/nginx/logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定进程可以打开的最大描述符：数目</span></span><br><span class="line"><span class="comment"># 工作模式与连接数上限</span></span><br><span class="line"><span class="comment"># 这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。</span></span><br><span class="line"><span class="comment"># 现在在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就相应应该填写65535。</span></span><br><span class="line"><span class="comment">#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4 万时就有进程可能超过10240了，这时会返回502错误。</span></span><br><span class="line">worker_rlimit_nofile <span class="number">65535</span>;</span><br><span class="line"></span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll]; epoll模型</span></span><br><span class="line"> <span class="comment">#是Linux 2.6以上版本内核中的高性能网络I/O模型，linux建议epoll，如果跑在FreeBSD上面，就用kqueue模型。</span></span><br><span class="line"> <span class="comment">#补充说明：</span></span><br><span class="line"> <span class="comment">#与apache相类，nginx针对不同的操作系统，有不同的事件模型</span></span><br><span class="line"> <span class="comment">#A）标准事件模型</span></span><br><span class="line"> <span class="comment">#Select、poll属于标准事件模型，如果当前系统不存在更有效的方法，nginx会选择select或poll</span></span><br><span class="line"> <span class="comment">#B）高效事件模型</span></span><br><span class="line"> <span class="comment">#Kqueue：使用于FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X.使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。</span></span><br><span class="line"> <span class="comment">#Epoll：使用于Linux内核2.6版本及以后的系统。</span></span><br><span class="line"> <span class="comment">#/dev/poll：使用于Solaris 7 11/99+，HP/UX 11.22+ (eventport)，IRIX6.5.15+ 和 Tru64 UNIX 5.1A+。</span></span><br><span class="line"> <span class="comment">#Eventport：使用于Solaris 10。 为了防止出现内核崩溃的问题， 有必要安装安全补丁。</span></span><br><span class="line"> <span class="keyword">use</span> epoll;</span><br><span class="line"> <span class="comment">#单个进程最大连接数（最大连接数=连接数*进程数）</span></span><br><span class="line"> <span class="comment">#根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为。</span></span><br><span class="line"> worker_connections <span class="number">65535</span>;</span><br><span class="line"> <span class="comment">#keepalive超时时间，默认是60s，切记这个参数也不能设置过大！否则会导致许多无效的http连接占据着nginx的连接数，终nginx崩溃！</span></span><br><span class="line"> keepalive_timeout <span class="number">60</span>;</span><br><span class="line"> <span class="comment">#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。</span></span><br><span class="line"> <span class="comment">#分页大小可以用命令getconf PAGESIZE 取得。</span></span><br><span class="line"> <span class="comment">#[root@web001 ~]# getconf PAGESIZE</span></span><br><span class="line"> <span class="comment">#4096</span></span><br><span class="line"> <span class="comment">#但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。</span></span><br><span class="line"> client_header_buffer_size <span class="number">4</span>k;</span><br><span class="line"> <span class="comment">#这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。</span></span><br><span class="line"> open_file_cache max=<span class="number">65535</span> inactive=<span class="number">60</span>s;</span><br><span class="line"> <span class="comment">#这个是指多长时间检查一次缓存的有效信息。</span></span><br><span class="line"> <span class="comment">#语法:open_file_cache_valid time 默认值:open_file_cache_valid 60 使用字段:http, server, location 这个指令指定了何时需要检查open_file_cache中缓存项目的有效信息.</span></span><br><span class="line"> open_file_cache_valid <span class="number">60</span>s;</span><br><span class="line"> <span class="comment">#open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。</span></span><br><span class="line"> <span class="comment">#语法:open_file_cache_min_uses number 默认值:open_file_cache_min_uses 1使用字段:http, server, location 这个指令指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数,如果使用更大的值,文件描述符在cache中总是打开状态.</span></span><br><span class="line"> open_file_cache_min_uses <span class="number">1</span>;</span><br><span class="line"><span class="comment">#语法:open_file_cache_errors on | off 默认值:open_file_cache_errors off使用字段:http, server, location 这个指令指定是否在搜索一个文件是记录cache错误.</span></span><br><span class="line"> open_file_cache_errors on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span></span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line"> include mime.types;</span><br><span class="line"> <span class="comment">#默认文件类型</span></span><br><span class="line"> default_type application/octet-stream;</span><br><span class="line"> <span class="comment">#默认编码</span></span><br><span class="line"> <span class="comment">#charset utf-8;</span></span><br><span class="line"> <span class="comment">#服务器名字的hash表大小</span></span><br><span class="line"> <span class="comment">#保存服务器名字的hash表是由指令server_names_hash_max_size 和server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表的大小，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找hash表键值成为可能。如果hash bucket size等于一路处理器缓存的大小，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。第一次是确定存储单元的地址，第二次是在存储单元中查找键 值。因此，如果Nginx给出需要增大hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小.</span></span><br><span class="line"> server_names_hash_bucket_size <span class="number">128</span>;</span><br><span class="line"> <span class="comment">#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。</span></span><br><span class="line"> client_header_buffer_size <span class="number">32</span>k;</span><br><span class="line"> <span class="comment">#客户请求头缓冲大小。nginx默认会用client_header_buffer_size这个buffer来读取header值，如果header过大，它会使用large_client_header_buffers来读取。</span></span><br><span class="line"> large_client_header_buffers <span class="number">4</span> <span class="number">64</span>k;</span><br><span class="line"> <span class="comment">#设定通过nginx上传文件的大小</span></span><br><span class="line"> client_max_body_size <span class="number">8</span>m;</span><br><span class="line"> <span class="comment">#开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。</span></span><br><span class="line"> <span class="comment">#sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。</span></span><br><span class="line"> sendfile on;</span><br><span class="line"> <span class="comment">#开启目录列表访问，合适下载服务器，默认关闭。</span></span><br><span class="line"> autoindex on;</span><br><span class="line"> <span class="comment">#此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用,告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送。就是说数据包不会马上传送出去，等到数据包最大时，一次性的传输出去，这样有助于解决网络堵塞</span></span><br><span class="line"> tcp_nopush on;</span><br><span class="line"><span class="comment">#告诉nginx不要缓存数据，而是一段一段的发送--当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值</span></span><br><span class="line"> tcp_nodelay on;</span><br><span class="line"> <span class="comment">#长连接超时时间，单位是秒</span></span><br><span class="line"> keepalive_timeout <span class="number">120</span>;</span><br><span class="line"> <span class="comment">#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。</span></span><br><span class="line"> <span class="comment">#这个指令为FastCGI缓存指定一个路径，目录结构等级，关键字区域存储时间和非活动删除时间</span></span><br><span class="line"> fastcgi_cache_path /usr/<span class="keyword">local</span>/nginx/fastcgi_cache levels=<span class="number">1</span>:<span class="number">2</span></span><br><span class="line"> keys_zone=TEST:<span class="number">10</span>m inactive=<span class="number">5</span>m;</span><br><span class="line"> <span class="comment">#指定连接到后端FastCGI的超时时间</span></span><br><span class="line"> fastcgi_connect_timeout <span class="number">300</span>;</span><br><span class="line"> <span class="comment">#向FastCGI传送请求的超时时间，这个值是指已经完成两次握手后向FastCGI传送请求的超时时间</span></span><br><span class="line"> fastcgi_send_timeout <span class="number">300</span>;</span><br><span class="line"> <span class="comment">#接收FastCGI应答的超时时间，这个值是指已经完成两次握手后接收FastCGI应答的超时时间</span></span><br><span class="line"> fastcgi_read_timeout <span class="number">300</span>;</span><br><span class="line"> <span class="comment">#指定读取FastCGI应答第一部分 需要用多大的缓冲区,这里可以设置为fastcgi_buffers指令指定的缓冲区大小，上面的指令指定它将使用1个 16k的缓冲区去读取应答的第一部分，即应答头，其实这个应答头一般情况下都很小（不会超过1k），但是你如果在fastcgi_buffers指令中指定了缓冲区的大小，那么它也会分配一个fastcgi_buffers指定的缓冲区大小去缓存</span></span><br><span class="line"> fastcgi_buffer_size <span class="number">64</span>k;</span><br><span class="line"> <span class="comment">#指定本地需要用多少和多大的缓冲区来 缓冲FastCGI的应答，如上所示，如果一个php脚本所产生的页面大小为256k，则会为其分配16个16k的缓冲区来缓存，如果大于256k，增大 于256k的部分会缓存到fastcgi_temp指定的路径中， 当然这对服务器负载来说是不明智的方案，因为内存中处理数据速度要快于硬盘，通常这个值 的设置应该选择一个你的站点中的php脚本所产生的页面大小的中间值，比如你的站点大部分脚本所产生的页面大小为 256k就可以把这个值设置为16 16k，或者464k 或者64 4k，但很显然，后两种并不是好的设置方法，因为如果产生的页面只有32k，如果用464k它会分配1个64k的缓冲区去缓存，而如果使用64 4k它会分配8个4k的缓冲区去缓存，而如果使用16 16k则它会分配2个16k去缓存页面，这样看起来似乎更加合理•</span></span><br><span class="line"> fastcgi_buffers <span class="number">4</span> <span class="number">64</span>k;</span><br><span class="line"> <span class="comment">#这个指令我也不知道是做什么用，只知道默认值是fastcgi_buffers的两倍</span></span><br><span class="line"> fastcgi_busy_buffers_size <span class="number">128</span>k;</span><br><span class="line"> <span class="comment">#在写入fastcgi_temp_path时将用多大的数据块，默认值是fastcgi_buffers的两倍</span></span><br><span class="line"> fastcgi_temp_file_write_size <span class="number">128</span>k;</span><br><span class="line"> <span class="comment">#开启FastCGI缓存并且为其制定一个名称。个人感觉开启缓存非常有用，可以有效降低CPU负载，并且防止502错误。但是这个缓存会引起很多问题，因为它缓存的是动态页面。具体使用还需根据自己的需求</span></span><br><span class="line"> fastcgi_cache TEST</span><br><span class="line"> <span class="comment">#为指定的应答代码指定缓存时间，如上例中将200，302应答缓存一小时，301应答缓存1天，其他为1分钟</span></span><br><span class="line"> fastcgi_cache_valid <span class="number">200</span> <span class="number">302</span> <span class="number">1</span>h;</span><br><span class="line"> fastcgi_cache_valid <span class="number">301</span> <span class="number">1</span>d;</span><br><span class="line"> fastcgi_cache_valid any <span class="number">1</span>m;</span><br><span class="line"> <span class="comment">#缓存在fastcgi_cache_path指令inactive参数值时间内的最少使用次数，如上例，如果在5分钟内某文件1次也没有被使用，那么这个文件将被移除</span></span><br><span class="line"> fastcgi_cache_min_uses <span class="number">1</span>;</span><br><span class="line"> <span class="comment">#gzip模块设置</span></span><br><span class="line"> <span class="comment">#开启压缩 </span></span><br><span class="line">gzip  on;  </span><br><span class="line"> <span class="comment"># 设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。默认值是0，不管页面多大都压缩。建议设置成大于2k的字节数，小于2k可能会越压越大。</span></span><br><span class="line">gzip_min_length <span class="number">2</span>k; </span><br><span class="line"> <span class="comment"># 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。 例如 4 4k 代表以4k为单位，按照原始数据大小以4k为单位的4倍申请内存。 4 8k 代表以8k为单位，按照原始数据大小以8k为单位的4倍申请内存。 </span></span><br><span class="line"> <span class="comment"># 如果没有设置，默认值是申请跟原始数据相同大小的内存空间去存储gzip压缩结果。 </span></span><br><span class="line"> gzip_buffers <span class="number">4</span> <span class="number">16</span>k; </span><br><span class="line"> <span class="comment">#压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间 </span></span><br><span class="line"> gzip_comp_level <span class="number">5</span>; </span><br><span class="line"> <span class="comment"># 默认值: gzip_types text/html (默认不对js/css文件进行压缩) </span></span><br><span class="line"> <span class="comment"># 压缩类型，匹配MIME类型进行压缩 </span></span><br><span class="line"> <span class="comment"># 不能用通配符 text/* </span></span><br><span class="line"> <span class="comment"># (无论是否指定)text/html默认已经压缩  </span></span><br><span class="line"> <span class="comment"># 设置哪压缩种文本文件可参考 conf/mime.types </span></span><br><span class="line"> gzip_types text/plain application/<span class="keyword">x</span>-</span><br><span class="line"> javascript text/css application/xml;</span><br><span class="line"> <span class="comment"># 值为1.0和1.1 代表是否压缩http协议1.0，选择1.0则1.0和1.1都可以压缩 </span></span><br><span class="line"> gzip_http_version <span class="number">1.0</span>  </span><br><span class="line"> <span class="comment"># IE6及以下禁止压缩 </span></span><br><span class="line"> gzip_disable <span class="string">&quot;MSIE [1-6]\.&quot;</span>;  </span><br><span class="line"> <span class="comment"># 默认值：off </span></span><br><span class="line"> <span class="comment"># Nginx作为反向代理的时候启用，开启或者关闭后端服务器返回的结果，匹配的前提是后端服务器必须要返回包含&quot;Via&quot;的 header头。 </span></span><br><span class="line"> <span class="comment"># off - 关闭所有的代理结果数据的压缩 </span></span><br><span class="line"> <span class="comment"># expired - 启用压缩，如果header头中包含 &quot;Expires&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># no-cache - 启用压缩，如果header头中包含 &quot;Cache-Control:no-cache&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># no-store - 启用压缩，如果header头中包含 &quot;Cache-Control:no-store&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># private - 启用压缩，如果header头中包含 &quot;Cache-Control:private&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># no_last_modified - 启用压缩,如果header头中不包含 &quot;Last-Modified&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># no_etag - 启用压缩 ,如果header头中不包含 &quot;ETag&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># auth - 启用压缩 , 如果header头中包含 &quot;Authorization&quot; 头信息 </span></span><br><span class="line"> <span class="comment"># any - 无条件启用压缩 </span></span><br><span class="line"> gzip_proxied expired <span class="keyword">no</span>-cache <span class="keyword">no</span>-store private auth; </span><br><span class="line"> <span class="comment"># 给CDN和代理服务器使用，针对相同url，可以根据头信息返回压缩和非压缩副本 </span></span><br><span class="line"> gzip_vary on; </span><br><span class="line"> <span class="comment">#开启限制IP连接数的时候需要使用</span></span><br><span class="line"> <span class="comment">#limit_zone crawler $binary_remote_addr 10m;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">#负载均衡配置</span></span><br><span class="line"> upstream www.xx.com &#123;</span><br><span class="line">   <span class="comment">#upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。</span></span><br><span class="line">   server <span class="number">192.168</span>.<span class="number">1.111</span>:<span class="number">80</span> weight=<span class="number">2</span>;</span><br><span class="line">   server <span class="number">192.168</span>.<span class="number">1.112</span>:<span class="number">80</span> weight=<span class="number">3</span>;</span><br><span class="line">   server <span class="number">192.168</span>.<span class="number">1.113</span>:<span class="number">80</span> weight=<span class="number">3</span>;</span><br><span class="line">   <span class="comment">#nginx的upstream目前支持4种方式的分配</span></span><br><span class="line">   <span class="comment">#1、轮询（默认）</span></span><br><span class="line">   <span class="comment">#每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</span></span><br><span class="line">   <span class="comment">#2、weight</span></span><br><span class="line">   <span class="comment">#指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</span></span><br><span class="line">   <span class="comment">#例如：</span></span><br><span class="line"><span class="comment">#upstream bakend &#123;</span></span><br><span class="line">   <span class="comment">#  server 192.168.0.14 weight=10;</span></span><br><span class="line">   <span class="comment">#  server 192.168.0.15 weight=10;</span></span><br><span class="line">   <span class="comment">#&#125;</span></span><br><span class="line">   <span class="comment">#2、ip_hash</span></span><br><span class="line">   <span class="comment">#每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</span></span><br><span class="line">   <span class="comment">#例如：</span></span><br><span class="line">   <span class="comment">#upstream bakend &#123;</span></span><br><span class="line">   <span class="comment">#  ip_hash;</span></span><br><span class="line">   <span class="comment">#  server 192.168.0.14:88;</span></span><br><span class="line">   <span class="comment">#  server 192.168.0.15:80;</span></span><br><span class="line">   <span class="comment">#&#125;</span></span><br><span class="line">   <span class="comment">#3、fair（第三方）</span></span><br><span class="line">   <span class="comment">#按后端服务器的响应时间来分配请求，响应时间短的优先分配。</span></span><br><span class="line">   <span class="comment">#upstream backend &#123;</span></span><br><span class="line">   <span class="comment">#  server server1;</span></span><br><span class="line">   <span class="comment">#  server server2;</span></span><br><span class="line">   <span class="comment">#  fair;</span></span><br><span class="line">   <span class="comment">#&#125;</span></span><br><span class="line">   <span class="comment">#4、url_hash（第三方）</span></span><br><span class="line">   <span class="comment">#按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</span></span><br><span class="line">   <span class="comment">#例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法</span></span><br><span class="line">   <span class="comment">#upstream backend &#123;</span></span><br><span class="line">   <span class="comment">#  server squid1:3128;</span></span><br><span class="line">   <span class="comment">#  server squid2:3128;</span></span><br><span class="line">   <span class="comment">#  hash $request_uri;</span></span><br><span class="line">   <span class="comment">#  hash_method crc32;</span></span><br><span class="line">   <span class="comment">#&#125;</span></span><br><span class="line">   <span class="comment">#tips:</span></span><br><span class="line">   <span class="comment">#upstream bakend&#123;#定义负载均衡设备的Ip及设备状态&#125;&#123;</span></span><br><span class="line">   <span class="comment">#  ip_hash;</span></span><br><span class="line">   <span class="comment">#  server 127.0.0.1:9090 down;</span></span><br><span class="line">   <span class="comment">#  server 127.0.0.1:8080 weight=2;</span></span><br><span class="line">   <span class="comment">#  server 127.0.0.1:6060;</span></span><br><span class="line">   <span class="comment">#  server 127.0.0.1:7070 backup;</span></span><br><span class="line">   <span class="comment">#&#125;</span></span><br><span class="line">   <span class="comment">#在需要使用负载均衡的server中增加 proxy_pass http://bakend/;</span></span><br><span class="line">   <span class="comment">#每个设备的状态设置为:</span></span><br><span class="line">   <span class="comment">#1.down表示单前的server暂时不参与负载</span></span><br><span class="line">   <span class="comment">#2.weight为weight越大，负载的权重就越大。</span></span><br><span class="line">   <span class="comment">#3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误</span></span><br><span class="line">   <span class="comment">#4.fail_timeout:max_fails次失败后，暂停的时间。</span></span><br><span class="line">   <span class="comment">#5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</span></span><br><span class="line">   <span class="comment">#nginx支持同时设置多组的负载均衡，用来给不用的server来使用。</span></span><br><span class="line">   <span class="comment">#client_body_in_file_only设置为On 可以讲client post过来的数据记录到文件中用来做debug</span></span><br><span class="line">   <span class="comment">#client_body_temp_path设置记录文件的目录 可以设置最多3层目录</span></span><br><span class="line">   <span class="comment">#location对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">#虚拟主机的配置</span></span><br><span class="line"> server</span><br><span class="line"> &#123;</span><br><span class="line">   <span class="comment">#监听端口</span></span><br><span class="line">   <span class="keyword">listen</span> <span class="number">80</span>;</span><br><span class="line">   <span class="comment">#域名可以有多个，用空格隔开</span></span><br><span class="line">   server_name www.xx.com xx.com;</span><br><span class="line">   <span class="keyword">index</span> index.html index.htm index.php;</span><br><span class="line">   root /data/www/xx;</span><br><span class="line">   <span class="comment">#对******进行负载均衡</span></span><br><span class="line">   location ~ .*.(php|php5)?$</span><br><span class="line">   &#123;</span><br><span class="line">     fastcgi_pass <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9000</span>;</span><br><span class="line">     fastcgi_index index.php;</span><br><span class="line">     include fastcgi.conf;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#图片缓存时间设置</span></span><br><span class="line">   location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">   &#123;</span><br><span class="line">     expires <span class="number">10</span>d;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#JS和CSS缓存时间设置</span></span><br><span class="line">   location ~ .*.(js|css)?$</span><br><span class="line">   &#123;</span><br><span class="line">     expires <span class="number">1</span>h;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#日志格式设定</span></span><br><span class="line">   <span class="comment">#$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；</span></span><br><span class="line">   <span class="comment">#$remote_user：用来记录客户端用户名称；</span></span><br><span class="line">   <span class="comment">#$time_local： 用来记录访问时间与时区；</span></span><br><span class="line">   <span class="comment">#$request： 用来记录请求的url与http协议；</span></span><br><span class="line">   <span class="comment">#$status： 用来记录请求状态；成功是200，</span></span><br><span class="line">   <span class="comment">#$body_bytes_sent ：记录发送给客户端文件主体内容大小；</span></span><br><span class="line">   <span class="comment">#$http_referer：用来记录从那个页面链接访问过来的；</span></span><br><span class="line">   <span class="comment">#$http_user_agent：记录客户浏览器的相关信息；</span></span><br><span class="line">   <span class="comment">#通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。</span></span><br><span class="line">   <span class="comment">#反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。</span></span><br><span class="line">   log_format access <span class="string">&#x27;$remote_addr - $remote_user [$time_local]</span></span><br><span class="line"><span class="string">   &quot;$request&quot; &#x27;</span></span><br><span class="line">   <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">   <span class="string">&#x27;&quot;$http_user_agent&quot; $http_x_forwarded_for&#x27;</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#定义本虚拟主机的访问日志</span></span><br><span class="line">   access_log /usr/<span class="keyword">local</span>/nginx/logs/host.access.log main;</span><br><span class="line">   access_log /usr/<span class="keyword">local</span>/nginx/logs/host.access.<span class="number">404</span>.log log404;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#对 &quot;/&quot; 启用反向代理</span></span><br><span class="line">   location / &#123;</span><br><span class="line">     proxy_pass http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">88</span>;</span><br><span class="line">     proxy_redirect off;</span><br><span class="line">     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">#以下是一些反向代理的配置，可选。</span></span><br><span class="line">     proxy_set_header Host $host;</span><br><span class="line">     <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">     client_max_body_size <span class="number">10</span>m;</span><br><span class="line">     <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数，</span></span><br><span class="line">     <span class="comment">#如果把它设置为比较大的数值，例如256k，那么，无论使用firefox还是IE浏览器，来提交任意小于256k的图片，都很正常。如果注释该指令，使用默认的client_body_buffer_size设置，也就是操作系统页面大小的两倍，8k或者16k，问题就出现了。</span></span><br><span class="line">     <span class="comment">#无论使用firefox4.0还是IE8.0，提交一个比较大，200k左右的图片，都返回</span></span><br><span class="line">     <span class="number">500</span> Internal Server Error错误</span><br><span class="line">     client_body_buffer_size <span class="number">128</span>k;</span><br><span class="line">     <span class="comment">#表示使nginx阻止HTTP应答代码为400或者更高的应答。</span></span><br><span class="line">     proxy_intercept_errors on;</span><br><span class="line">     <span class="comment">#后端服务器连接的超时时间_发起握手等候响应超时时间</span></span><br><span class="line">     <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">     proxy_connect_timeout <span class="number">90</span>;</span><br><span class="line">     <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">     <span class="comment">#后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据</span></span><br><span class="line">     proxy_send_timeout <span class="number">90</span>;</span><br><span class="line">     <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">     <span class="comment">#连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）</span></span><br><span class="line">     proxy_read_timeout <span class="number">90</span>;</span><br><span class="line">     <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">     <span class="comment">#设置从被代理服务器读取的第一部分应答的缓冲区大小，通常情况下这部分应答中包含一个小的应答头，默认情况下这个值的大小为指令proxy_buffers中指定的一个缓冲区的大小，不过可以将其设置为更小</span></span><br><span class="line">     proxy_buffer_size <span class="number">4</span>k;</span><br><span class="line">     <span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的设置</span></span><br><span class="line">     <span class="comment">#设置用于读取应答（来自被代理服务器）的缓冲区数目和大小，默认情况也为分页大小，根据操作系统的不同可能是4k或者8k</span></span><br><span class="line">     proxy_buffers <span class="number">4</span> <span class="number">32</span>k;</span><br><span class="line">     <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">     proxy_busy_buffers_size <span class="number">64</span>k;</span><br><span class="line">     <span class="comment">#设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长</span></span><br><span class="line">     <span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">     proxy_temp_file_write_size <span class="number">64</span>k;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">    location /NginxStatus &#123;</span><br><span class="line">     stub_status on;</span><br><span class="line">     access_log on;</span><br><span class="line">     auth_basic <span class="string">&quot;NginxStatus&quot;</span>;</span><br><span class="line">     auth_basic_user_file confpasswd;</span><br><span class="line">     <span class="comment">#htpasswd文件的内容可以用apache提供的htpasswd工具来产生。</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#本地动静分离反向代理配置</span></span><br><span class="line">   <span class="comment">#所有jsp的页面均交由tomcat或resin处理</span></span><br><span class="line">   location ~ .(jsp|jspx|<span class="keyword">do</span>)?$ &#123;</span><br><span class="line">     proxy_set_header Host $host;</span><br><span class="line">     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">     proxy_set_header X-Forwarded-For </span><br><span class="line">    $proxy_add_x_forwarded_for;</span><br><span class="line">     proxy_pass http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8080</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#所有静态文件由nginx直接读取不经过tomcat或resin</span></span><br><span class="line">   location ~ .*.</span><br><span class="line">  (htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|</span><br><span class="line">   pdf|xls|mp3|wma)$</span><br><span class="line">   &#123;</span><br><span class="line">     expires <span class="number">15</span>d;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   location ~ .*.(js|css)?$</span><br><span class="line">   &#123;</span><br><span class="line">     expires <span class="number">1</span>h;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="nginx-conf-重要的指令块"><a href="#nginx-conf-重要的指令块" class="headerlink" title="nginx.conf 重要的指令块"></a>nginx.conf 重要的指令块</h3><p>核心功能都在于http{ } 指令块里，http{ } 块还包含了以下指令</p><ul><li>server{ }指令块，对应一个站点配置，反向代理，静态资源站点</li><li>location{ }，对应一个url</li><li>upstream{ }，定义上游服务，负载均衡池</li></ul><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Nginx主配置文件&quot;&gt;&lt;a href=&quot;#Nginx主配置文件&quot; class=&quot;headerlink&quot; title=&quot;Nginx主配置文件&quot;&gt;&lt;/a&gt;Nginx主配置文件&lt;/h3&gt;&lt;h4 id=&quot;nginx-conf指令注释&quot;&gt;&lt;a href=&quot;#nginx-c</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Shell内置命令、外置命令</title>
    <link href="http://hmiking.top/2023/02/12/Shell%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4%E3%80%81%E5%A4%96%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
    <id>http://hmiking.top/2023/02/12/Shell%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4%E3%80%81%E5%A4%96%E7%BD%AE%E5%91%BD%E4%BB%A4/</id>
    <published>2023-02-12T12:32:10.000Z</published>
    <updated>2023-11-02T05:50:38.952Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Shell内置命令、外置命令"><a href="#Shell内置命令、外置命令" class="headerlink" title="Shell内置命令、外置命令"></a>Shell内置命令、外置命令</h3><h4 id="什么是内置命令，什么是外置命令？"><a href="#什么是内置命令，什么是外置命令？" class="headerlink" title="什么是内置命令，什么是外置命令？"></a>什么是内置命令，什么是外置命令？</h4><ul><li>内置命令：在系统启动时就加载入内存，常驻内存，执行效率更高，但是占用资源</li><li>外置命令：系统需要从硬盘中读取程序文件，再读入内存加载</li></ul><h5 id="外置命令"><a href="#外置命令" class="headerlink" title="外置命令"></a>外置命令</h5><p>也称之为，自己单独下载的文件系统命令，处于bash shell之外的程序</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一般目录会存放在以下目录</span></span><br><span class="line">/bin</span><br><span class="line">/usr/bin</span><br><span class="line">/sbin</span><br><span class="line">/usr/sbin</span><br><span class="line"></span><br><span class="line">[root@hmiking ~]<span class="comment"># which cd  </span></span><br><span class="line">/usr/bin/cd </span><br></pre></td></tr></table></figure><p>比如ps命令</p><p>通过linux的type命令，验证是否是内置、外置命令</p><p>外置命令的特点是：一定会开启子进程执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hmiking ~]<span class="comment"># ps -f --forest                           </span></span><br><span class="line">UID          PID    PPID  C STIME TTY          TIME CMD     </span><br><span class="line">root        2389    2379  0 Feb03 pts/0    00:00:00 -bash </span><br><span class="line">root        2471    2389  0 00:09 pts/0    00:00:00  \_ ps -f --forest</span><br></pre></td></tr></table></figure><h5 id="内置命令"><a href="#内置命令" class="headerlink" title="内置命令"></a>内置命令</h5><ul><li>内置命令不会产生子进程去执行</li><li>内置命令和shell是为一体的，是shell的一部分，不需要单独去读取某个文件，系统启动后，就执行在内存中了</li></ul><p>type命令验证即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看Linux的内置shell命令</span></span><br><span class="line"></span><br><span class="line">[root@hmiking ~]<span class="comment"># compgen -b</span></span><br></pre></td></tr></table></figure><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Shell内置命令、外置命令&quot;&gt;&lt;a href=&quot;#Shell内置命令、外置命令&quot; class=&quot;headerlink&quot; title=&quot;Shell内置命令、外置命令&quot;&gt;&lt;/a&gt;Shell内置命令、外置命令&lt;/h3&gt;&lt;h4 id=&quot;什么是内置命令，什么是外置命令？&quot;</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>环境变量的设置</title>
    <link href="http://hmiking.top/2023/02/12/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <id>http://hmiking.top/2023/02/12/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E8%AE%BE%E7%BD%AE/</id>
    <published>2023-02-12T12:24:27.000Z</published>
    <updated>2023-11-02T05:50:58.441Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h3><ol><li><p>环境变量一般指的是用export内置命令导出的变量，用于定义shell的运行环境、保证shell命令的正确执行。shell通过环境变量确定登录的用户名、PATH路径、文件系统等各种应用。</p></li><li><p>环境变量可以在命今行中临时创建，但是用户退出shell终端，变量即丢失，如要永久生效，需要修改 环境变量配置文件</p><ul><li><p>用户个人配置文件 ~&#x2F;.bash_profile 、 ~&#x2F;.bashrc远程登录用户特有文件</p></li><li><p>全局配置文件 &#x2F;etc&#x2F;profile 、 &#x2F;ete&#x2F;bashrc ，且系统建议最好创建在 &#x2F;etc&#x2F;profile.d&#x2F;，而非直接修改主文件，修改全局配置文件，影响所有登录系统的用户</p></li></ul></li></ol><h3 id="检查系统环境变量的命令"><a href="#检查系统环境变量的命令" class="headerlink" title="检查系统环境变量的命令"></a>检查系统环境变量的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>，输出所有变量，包括全局变量、局部变量</span><br><span class="line"><span class="built_in">env</span>，只显示全局变量</span><br><span class="line"><span class="built_in">declare</span>，输出所有的变量，如同<span class="built_in">set</span></span><br><span class="line"><span class="built_in">export</span>，显示和设置环境变量值</span><br></pre></td></tr></table></figure><h4 id="撤销环境变量"><a href="#撤销环境变量" class="headerlink" title="撤销环境变量"></a>撤销环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span>变量名，删除变量或函数</span><br></pre></td></tr></table></figure><h4 id="设置只读变量"><a href="#设置只读变量" class="headerlink" title="设置只读变量"></a>设置只读变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">readonly</span>，只有shell结束，只读变量失效</span><br><span class="line"></span><br><span class="line">[root@hmiking ~]<span class="comment"># readonly name=&quot;hmiking&quot;                </span></span><br><span class="line">[root@hmiking ~]<span class="comment"># name=&quot;111&quot;                   </span></span><br><span class="line">bash: name: <span class="built_in">readonly</span> variable </span><br></pre></td></tr></table></figure><h4 id="系统保留环境变量关键字"><a href="#系统保留环境变量关键字" class="headerlink" title="系统保留环境变量关键字"></a>系统保留环境变量关键字</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash内嵌了诸多环境变量，用于定义bash的工作环境</span><br><span class="line"></span><br><span class="line">[root@hmiking ~]<span class="comment"># export |awk -F &#x27;[ :=]&#x27; &#x27;&#123;print $3&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这条命令能把环境变量的名字给列出来</span></span><br></pre></td></tr></table></figure><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;环境变量设置&quot;&gt;&lt;a href=&quot;#环境变量设置&quot; class=&quot;headerlink&quot; title=&quot;环境变量设置&quot;&gt;&lt;/a&gt;环境变量设置&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;环境变量一般指的是用export内置命令导出的变量，用于定义shell的运行环境、保证sh</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>脚本语言</title>
    <link href="http://hmiking.top/2023/02/12/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/"/>
    <id>http://hmiking.top/2023/02/12/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/</id>
    <published>2023-02-12T12:18:00.000Z</published>
    <updated>2023-11-02T05:51:04.048Z</updated>
    
    <content type="html"><![CDATA[<h3 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h3><ol><li><p>shell脚本语言属于一种弱类型语言 无需声明变量类型，直接定义使用。</p></li><li><p>强类型语言，必须先定义变量类型，确定是数字、字符串等，之后再赋予同类型的值。</p></li></ol><p><strong>centos steam9系统中支持的shell情况，有如下种类</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/shells      </span></span><br><span class="line">/bin/sh                                    </span><br><span class="line">/bin/bash                                      </span><br><span class="line">/usr/bin/sh                                </span><br><span class="line">/usr/bin/bash </span><br></pre></td></tr></table></figure><p><strong>默认的sh解释器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ll /usr/bin/sh                               lrwxrwxrwx. 1 root root 4 Nov 24 22:22 /usr/bin/sh -&gt; bash</span></span><br></pre></td></tr></table></figure><h3 id="其他脚本语言"><a href="#其他脚本语言" class="headerlink" title="其他脚本语言"></a>其他脚本语言</h3><ol><li>PHP是网页程序语言，专注于web页面开发，诸多开源产品，wordpress、discuz开源产品都是PHP开发</li><li>Perl语言，擅长支持强大的正则表达式，以及运维工具的开发</li><li>python语言，明星语言，不仅适用于脚本程序开发，也擅长web页面开发，如（系统后台，资产管理平台），爬虫程序开发，大量Linux运维工具也由python开发，甚至于游戏开发也使用</li></ol><h3 id="shell的优势"><a href="#shell的优势" class="headerlink" title="shell的优势"></a>shell的优势</h3><p>虽然有诸多脚本编程语言，但是对于Linux操作系统内部应用而言，shell是最好的工具，Linux底层命令都支持shell语句，以及结合三剑客（grep、sed、awk）进行高级用法。</p><ul><li>擅长系统管理脚本开发，如软件启停脚本、监控报警脚本、日志分析脚本</li></ul><p>每个语言都有自己擅长的地方，扬长避短，达到高效运维的目的是最合适的</p><p><strong>Linux默认shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo $SHELL             </span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;脚本语言&quot;&gt;&lt;a href=&quot;#脚本语言&quot; class=&quot;headerlink&quot; title=&quot;脚本语言&quot;&gt;&lt;/a&gt;脚本语言&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;shell脚本语言属于一种弱类型语言 无需声明变量类型，直接定义使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>执行shell脚本的方式</title>
    <link href="http://hmiking.top/2023/02/12/%E6%89%A7%E8%A1%8Cshell%E8%84%9A%E6%9C%AC%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://hmiking.top/2023/02/12/%E6%89%A7%E8%A1%8Cshell%E8%84%9A%E6%9C%AC%E7%9A%84%E6%96%B9%E5%BC%8F/</id>
    <published>2023-02-12T12:12:22.000Z</published>
    <updated>2023-11-02T05:51:18.929Z</updated>
    
    <content type="html"><![CDATA[<h3 id="执行shell脚本的方式"><a href="#执行shell脚本的方式" class="headerlink" title="执行shell脚本的方式"></a>执行shell脚本的方式</h3><ol><li><p>bash script.sh 或 sh scripte.sh ，文件本身没权限执行，没 x 权限，则使用的方法，或脚本未指定 shebang ，重点推荐的方式</p></li><li><p>使用 绝对&#x2F;相对 路径执行脚本，需要文件含有 x 权限</p></li><li><p>source script.sh 或者 .script.sh ，代表 执行的含义，source等于点.</p></li><li><p>少见的用法，sh &lt; script.sh</p></li></ol><hr><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;执行shell脚本的方式&quot;&gt;&lt;a href=&quot;#执行shell脚本的方式&quot; class=&quot;headerlink&quot; title=&quot;执行shell脚本的方式&quot;&gt;&lt;/a&gt;执行shell脚本的方式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;bash script.sh 或 sh s</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Shebang</title>
    <link href="http://hmiking.top/2023/02/12/Shebang/"/>
    <id>http://hmiking.top/2023/02/12/Shebang/</id>
    <published>2023-02-12T12:07:13.000Z</published>
    <updated>2023-11-02T05:50:33.042Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Shebang"><a href="#Shebang" class="headerlink" title="Shebang"></a>Shebang</h3><p>计算机程序中， shebang 指的是出现在文本文件的第一行前两个字符 #!</p><p>在Unix系统中，程序会分析 shebang 后面的内容，作为解释器的指令，例如</p><ol><li><p>以 #!&#x2F;bin&#x2F;bash 开头的文件，程序在执行的时候会调用 &#x2F;bin&#x2F;bash ，也就是bash解释器</p></li><li><p>以 #!&#x2F;usr&#x2F;bin&#x2F;python 开头的文件，代表指定python解释器去执行</p></li><li><p>以 #!&#x2F;usr&#x2F;bin&#x2F;env 解释器名称，是一种在不同平台上都能正确找到解释器的方法</p></li></ol><h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><ul><li>如果脚本未指定 shebang ，脚本执行的时候，默认用当前shell去解释脚本，即$SHELL</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost~]<span class="comment"># echo $SHELL</span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><ul><li>如果 shebang 指定了可执行的解释器，如 &#x2F;bin&#x2F;bash &#x2F;usr&#x2F;bin&#x2F;python ，脚本在执行时，文件名会作为参数传递给解释器</li><li>如果 #! 指定的解释程序没有可执行权限，则会报错“bad interpreter: Permission denied”。</li><li>如果 #! 指定的解释程序不是一个可执行文件，那么指定的解释程序会被忽略，转而交给当前的SHELL去执行这个脚本。</li><li>如果 #! 指定的解释程序不存在，那么会报错“bad interpreter: No such file or directory”。</li><li>#! 之后的解释程序，需要写其绝对路径（如：#!&#x2F;bin&#x2F;bash），它时不会自动到$PATH中寻找解释器的。</li><li>如果你使用 “bash test.sh”这样的命令来执行脚本，那么#!这一行将会被忽略掉，解释器当然时用命令行中显示指定的bash</li></ul><hr><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Shebang&quot;&gt;&lt;a href=&quot;#Shebang&quot; class=&quot;headerlink&quot; title=&quot;Shebang&quot;&gt;&lt;/a&gt;Shebang&lt;/h3&gt;&lt;p&gt;计算机程序中， shebang 指的是出现在文本文件的第一行前两个字符 #!&lt;/p&gt;
&lt;p&gt;在Uni</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>什么是shell脚本</title>
    <link href="http://hmiking.top/2023/02/12/%E4%BB%80%E4%B9%88%E6%98%AFshell%E8%84%9A%E6%9C%AC/"/>
    <id>http://hmiking.top/2023/02/12/%E4%BB%80%E4%B9%88%E6%98%AFshell%E8%84%9A%E6%9C%AC/</id>
    <published>2023-02-12T12:02:58.000Z</published>
    <updated>2023-11-02T05:51:10.919Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是shell脚本"><a href="#什么是shell脚本" class="headerlink" title="什么是shell脚本?"></a>什么是shell脚本?</h3><p>当命令或者程序语句写在文件中，我们执行文件，读取其中的代码，这个程序文件就称之为shell脚本。在shell脚本里定义多条Linux命令以及循环控制语句，然后将这些Linux命令一次性执行完毕，执行脚本文件的方式称之为，非交互式方式。</p><p><strong>Windows中存在 <code>*.bat/</code> 批处理脚本</strong></p><p><strong>Linux中常用 <code>*.sh</code> 脚本文件   → 约定俗成</strong></p><hr><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是shell脚本&quot;&gt;&lt;a href=&quot;#什么是shell脚本&quot; class=&quot;headerlink&quot; title=&quot;什么是shell脚本?&quot;&gt;&lt;/a&gt;什么是shell脚本?&lt;/h3&gt;&lt;p&gt;当命令或者程序语句写在文件中，我们执行文件，读取其中的代码，这个程序文件</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Squid代理服务</title>
    <link href="http://hmiking.top/2022/07/21/Squid%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/"/>
    <id>http://hmiking.top/2022/07/21/Squid%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/</id>
    <published>2022-07-21T05:09:46.000Z</published>
    <updated>2023-11-02T05:50:45.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Squid代理服务配置命令"><a href="#Squid代理服务配置命令" class="headerlink" title="Squid代理服务配置命令"></a>Squid代理服务配置命令</h3><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y squid</span><br></pre></td></tr></table></figure><h4 id="创建cache目录"><a href="#创建cache目录" class="headerlink" title="创建cache目录"></a>创建cache目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span>   /cache</span><br><span class="line"><span class="built_in">chmod</span>  777 /cache</span><br><span class="line"><span class="built_in">chown</span>  squid:squid  /cache</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Vim /etc/squid/squid.conf</span><br><span class="line">56:  http_access allow all                                    </span><br><span class="line"><span class="comment">#允许所有可以访问</span></span><br><span class="line">59： http_port   192.168.1.254:8080                           </span><br><span class="line"><span class="comment">#改端口</span></span><br><span class="line">62： cache_dir ufs  /var/spool/squid  10240  16  256          </span><br><span class="line"><span class="comment">#缓存目录</span></span><br><span class="line">dns_nameservers   IP                            </span><br><span class="line"><span class="comment">#DNS服务器</span></span><br><span class="line">cache_mem    512  MB                           </span><br><span class="line"><span class="comment">#高速缓存</span></span><br><span class="line">cache_log    /var/logsquid/access.log              </span><br><span class="line"><span class="comment">#缓存日志</span></span><br><span class="line">cache_access_log  /var/log/squid/access.log</span><br><span class="line"><span class="comment">#缓存访问日志</span></span><br><span class="line">cache_store_log</span><br><span class="line"><span class="comment">#网页缓存日志 </span></span><br><span class="line">cache_effective_user </span><br><span class="line"><span class="comment">#设置squid的拥有者</span></span><br><span class="line">cache_effect_group</span><br><span class="line"><span class="comment">#设置squid所属组</span></span><br><span class="line">visible_hostname  192.168.65.10</span><br><span class="line"><span class="comment">#设置squid可见主机名</span></span><br><span class="line">cache_mgr  root@local.com    </span><br><span class="line"><span class="comment">#设置管理员E-mail地址</span></span><br><span class="line">redirect_children</span><br><span class="line"><span class="comment">#重定向器池进程数</span></span><br></pre></td></tr></table></figure><h4 id="初始化及重启服务"><a href="#初始化及重启服务" class="headerlink" title="初始化及重启服务"></a>初始化及重启服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">squid -Z</span><br><span class="line"><span class="comment">#初始化在 squid.conf 里配置的 cache 目录</span></span><br><span class="line">systemctl start squid</span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> squid</span><br><span class="line"><span class="comment">#设置开机自启</span></span><br></pre></td></tr></table></figure><h3 id="Squid用户认证"><a href="#Squid用户认证" class="headerlink" title="Squid用户认证"></a>Squid用户认证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">auth_param  basic program    /usr/lib64/squid/basic_ncsa_auth    /etc/squid/passwd 　</span><br><span class="line"><span class="comment">#指定认证程序以及账户文件</span></span><br><span class="line"><span class="comment">#注：/squid/squid_user(账户存储位置)</span></span><br><span class="line"></span><br><span class="line">auth_param basic children 5</span><br><span class="line"><span class="comment">#认证程序进程数</span></span><br><span class="line"></span><br><span class="line">auth_param  basic  realm  CangLuan  Squid</span><br><span class="line"><span class="comment">#客户端在使用代理是，输入密码时弹出的提示框中的描述文字</span></span><br><span class="line"></span><br><span class="line">Auth_param basic credentialsttl 5 hours</span><br><span class="line"><span class="comment">#用户名是否需要匹配大小</span></span><br><span class="line"></span><br><span class="line">http_access  allow  cangluan  </span><br><span class="line"><span class="comment">#允许cangluan中的成员访问</span></span><br><span class="line"></span><br><span class="line">acl  ncsa_users  proxy_auth   REQUIRED </span><br><span class="line"><span class="comment">#所有成功鉴权的用户都归于ncsa_users组。</span></span><br><span class="line"></span><br><span class="line">Acl badfile urlpath_regex -I /.mp3$ /.flv$</span><br><span class="line"><span class="comment">#禁止访问.mp3 .flv扩展名后缀的资源</span></span><br><span class="line"></span><br><span class="line">http_access deny badfile </span><br><span class="line"></span><br><span class="line">htpasswd  -c /etc/squid/passwords  <span class="built_in">test</span></span><br><span class="line"><span class="comment">#给用户创建密码</span></span><br></pre></td></tr></table></figure><h3 id="ACL控制语句"><a href="#ACL控制语句" class="headerlink" title="ACL控制语句"></a>ACL控制语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">acl mylan src 192.168.1.0/24 192.168.4.0/24</span><br><span class="line"><span class="comment">#客户机网段</span></span><br><span class="line"></span><br><span class="line">acl worktime time MTWHF 08:30-17:30</span><br><span class="line"><span class="comment">#周一至周五的工作时间段</span></span><br><span class="line"></span><br><span class="line">acl to_host dst 127.0.0.0/8</span><br><span class="line"><span class="comment">#目标地址</span></span><br><span class="line"></span><br><span class="line">acl mc20 maxconn 20</span><br><span class="line"><span class="comment">#最大并发连接20</span></span><br><span class="line"></span><br><span class="line">acl blackURL url_regex -i ^rtsp:// ^ emo://</span><br><span class="line"><span class="comment">#以rtsp://等开头的URL</span></span><br><span class="line"></span><br><span class="line">acl fileURL urlpath_regex -i .mp3$ .mp4$</span><br><span class="line"><span class="comment">#以.mp3、.mp4结尾的URL路径</span></span><br></pre></td></tr></table></figure><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><h4 id="一、基本配置"><a href="#一、基本配置" class="headerlink" title="一、基本配置"></a>一、基本配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http_port 192.168.1.1:3128                  </span><br><span class="line"><span class="comment">#设置监听地址和端口，如果只是端口则表示监听所有地址。</span></span><br><span class="line"></span><br><span class="line">visible_hostname ren.com                  </span><br><span class="line"> <span class="comment">#可发现的主机名，给代理服务器设置一个名字。</span></span><br><span class="line"></span><br><span class="line">access_log /var/log/squid/access.log          </span><br><span class="line"> <span class="comment">#访问日志存放位置。</span></span><br><span class="line"></span><br><span class="line">coredump_dir /var/spool/squid            </span><br><span class="line"><span class="comment">#设置一个内核转存目录，当Squid挂掉的时候，会将内存中的数据写到该目录下，默认为/var/spool/squid。</span></span><br><span class="line"></span><br><span class="line">cache_mgr squiderror@test.com            </span><br><span class="line"><span class="comment">#设置一个邮箱，当用户使用代理服务器中出现问题，会在错误页面显示一个邮箱地址，用于用户反馈错误。</span></span><br><span class="line"></span><br><span class="line">reply_body_max_size  1024000 allow all       </span><br><span class="line"><span class="comment">#限制下载文件大小，单位为字节B。</span></span><br></pre></td></tr></table></figure><h4 id="二、优化配置"><a href="#二、优化配置" class="headerlink" title="二、优化配置"></a>二、优化配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cache_dir ufs /var/spool/squid  100 16 256     </span><br><span class="line"><span class="comment">#设置在本地磁盘设置一个缓存目录用于缓存数据。</span></span><br><span class="line">“ufs”表示缓存数据的存储格式；</span><br><span class="line">“/var/spool/squid”表示设置的缓存目录；</span><br><span class="line">“100”表示缓存目录占磁盘空间大小，单位为MB；</span><br><span class="line">“16”表示缓存数据的一级子目录个数为16个；</span><br><span class="line">“256”表示缓存数据的二级子目录个数为256个。</span><br><span class="line"></span><br><span class="line">cache_mem 1024MB                   </span><br><span class="line"><span class="comment">#缓存占物理内存大小。单位为MB。</span></span><br><span class="line"></span><br><span class="line">cache_swap_low 85                 </span><br><span class="line"><span class="comment">#缓存占Swap虚拟内存最低大小为85%。</span></span><br><span class="line"></span><br><span class="line">cache_swap_high 95                   </span><br><span class="line"><span class="comment">#缓存占Swap虚拟内存最高大小为95%。当缓存数据占内存大小到95%时，会自动删除旧数据释放内存空间到百分之85%。</span></span><br><span class="line"></span><br><span class="line">minimum_object_size 0KB               </span><br><span class="line"><span class="comment">#设置数据对象（页面数据）的最小大小，0表示不限制。</span></span><br><span class="line"></span><br><span class="line">maximum_object_size 4096KB  </span><br><span class="line"><span class="comment">#设置数据对象（页面数据）的最大大小，当大于4MB的数据在不会缓存到磁盘。</span></span><br></pre></td></tr></table></figure><p><strong>欢迎关注我的<a href="https://blog.csdn.net/weixin_51369125?type=blog">CSDN</a>、<a href="https://www.oldit.cn/">个人博客</a>、<a href="https://www.zhihu.com/people/hmiking">知乎</a>。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Squid代理服务配置命令&quot;&gt;&lt;a href=&quot;#Squid代理服务配置命令&quot; class=&quot;headerlink&quot; title=&quot;Squid代理服务配置命令&quot;&gt;&lt;/a&gt;Squid代理服务配置命令&lt;/h3&gt;&lt;h4 id=&quot;安装软件&quot;&gt;&lt;a href=&quot;#安装软件&quot;</summary>
      
    
    
    
    <category term="云计算" scheme="http://hmiking.top/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Centos" scheme="http://hmiking.top/tags/Centos/"/>
    
  </entry>
  
</feed>
